{"ast":null,"code":"var _jsxFileName = \"/Users/vasilisaskvortsova/Documents/LEARNOISE-local/webap-learnoise-2/src/components/Score/Score.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from 'react-bootstrap';\n\nfunction Score(props) {\n  console.log(props.score);\n  let text;\n\n  if (props.score === '2.0') {\n    text = /*#__PURE__*/React.createElement(\"div\", {\n      className: \"SurveyIntroText\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"bold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 20\n      }\n    }, \"Impressive!\"), \" You won a bonus of \", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"bold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 83\n      }\n    }, \"2.0 \\xA3\"), \" in addition to your regular payment!\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"bold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 20\n      }\n    }, \"Note\"), \", that you will only get your bonus if you complete the final survey!\"));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"center\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"instructionsButtonContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }\n    }, text), /*#__PURE__*/React.createElement(\"center\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"buttonStart\",\n      onClick: () => props.onClicked(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    }, \"START\")))));\n  } else if (props.score === '1.0') {\n    text = /*#__PURE__*/React.createElement(\"div\", {\n      className: \"SurveyIntroText\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"bold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 20\n      }\n    }, \"Well done!\"), \" You won a bonus of \", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"bold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 82\n      }\n    }, \"1.0 \\xA3\"), \" in addition to your regular payment!\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }\n    }, \" Note, that you will only get your bonus if you complete the final survey.\"));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"center\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"instructionsButtonContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }\n    }, text), /*#__PURE__*/React.createElement(\"center\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"buttonInstructionStart\",\n      onClick: () => props.onClicked(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }, \"START\")))));\n  } else {\n    text = /*#__PURE__*/React.createElement(\"div\", {\n      className: \"SurveyIntroText\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"bold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 20\n      }\n    }, \"Unfortunately\"), \", you did not win a bonus this time. Please, proceed to the final survey.\"));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"center\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"instructionsButtonContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }\n    }, text), /*#__PURE__*/React.createElement(\"center\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"buttonInstructionStart\",\n      onClick: () => props.onClicked(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"bold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }, \"START\"))))));\n  }\n}\n\nScore.propTypes = {\n  score: PropTypes.string.isRequired,\n  onClicked: PropTypes.func.isRequired\n};\nexport default Score;","map":{"version":3,"sources":["/Users/vasilisaskvortsova/Documents/LEARNOISE-local/webap-learnoise-2/src/components/Score/Score.js"],"names":["React","PropTypes","Button","Score","props","console","log","score","text","onClicked","propTypes","string","isRequired","func"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from 'react-bootstrap';\n\n\nfunction Score(props) {\n\n console.log(props.score) \n let text \n    \n      if (props.score==='2.0') {\n\n        text = <div className='SurveyIntroText'>\n                <p><span className = \"bold\">Impressive!</span> You won a bonus of <span className = \"bold\">2.0 &#163;</span> in addition to your regular payment!</p>\n                <p><span className = \"bold\">Note</span>, that you will only get your bonus if you complete the final survey!</p>\n                </div>\n      \n      return (\n        <div>\n        <center> \n        <div className=\"instructionsButtonContainer\">\n          <div>\n            {text}           \n          </div> \n            <center>\n            <Button className=\"buttonStart\" onClick={()=>props.onClicked()}>\n            START\n            </Button>\n            </center>\n          </div>\n          </center>\n          </div>);\n      }\n      else if (props.score==='1.0') {\n\n        text = <div className='SurveyIntroText'>\n                <p><span className = \"bold\">Well done!</span> You won a bonus of <span className = \"bold\">1.0 &#163;</span> in addition to your regular payment!</p>\n                <p> Note, that you will only get your bonus if you complete the final survey.</p>\n                </div>\n      \n      \n        return (\n        <div>\n        <center> \n        <div className=\"instructionsButtonContainer\">\n          <div>\n            {text}           \n          </div> \n            <center>\n            <Button className=\"buttonInstructionStart\" onClick={()=>props.onClicked()}>\n            START\n            </Button>\n            </center>\n          </div>\n          </center>\n          </div>);\n    }\n      else {\n\n        text = <div className='SurveyIntroText'>\n                <p><span className = \"bold\">Unfortunately</span>, you did not win a bonus this time. Please, proceed to the final survey.</p>\n                </div>\n\n        return (\n        <div>\n        <center> \n        <div className=\"instructionsButtonContainer\">\n          <div>\n            {text}           \n          </div> \n            <center>\n            <Button className=\"buttonInstructionStart\" onClick={()=>props.onClicked()}>\n            <span className = \"bold\">START</span>\n            </Button>\n            </center>\n          </div>\n          </center>\n          </div>);\n      }\n  }\n\nScore.propTypes = {\n  score: PropTypes.string.isRequired,\n  onClicked: PropTypes.func.isRequired\n};\n\nexport default Score;\n\n"]},"metadata":{},"sourceType":"module"}