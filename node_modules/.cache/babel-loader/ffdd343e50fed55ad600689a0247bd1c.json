{"ast":null,"code":"import _defineProperty from \"/Users/vasilisaskvortsova/Documents/COVID-19/covid-webap/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/vasilisaskvortsova/Documents/COVID-19/covid-webap/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"/Users/vasilisaskvortsova/Documents/COVID-19/covid-webap/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/vasilisaskvortsova/Documents/COVID-19/covid-webap/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/vasilisaskvortsova/Documents/COVID-19/covid-webap/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/vasilisaskvortsova/Documents/COVID-19/covid-webap/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/vasilisaskvortsova/Documents/COVID-19/covid-webap/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/vasilisaskvortsova/Documents/COVID-19/covid-webap/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/vasilisaskvortsova/Documents/COVID-19/covid-webap/src/components/CheckboxQuiz/CheckboxQuiz.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransitionGroup } from 'react-transition-group';\nimport Question from '../QuizQuestion/Question';\nimport QuestionCount from '../QuizQuestion/QuestionCount';\nimport AnswerOption from '../QuizQuestion/AnswerOption'; // import './CheckboxQuiz.css';\n// Maybe import for consistency CHANGE \n\nvar Checkbox = function Checkbox(_ref) {\n  var label = _ref.label,\n      isSelected = _ref.isSelected,\n      onCheckboxChange = _ref.onCheckboxChange;\n  return React.createElement(\"div\", {\n    className: \"form-check\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"checkbox\",\n    name: label,\n    checked: isSelected,\n    onChange: onCheckboxChange,\n    className: \"form-check-input\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }), label));\n};\n/*const Checkbox = ({type = 'checkbox', name, checked = false, onChange, className }) => (\n  <input type={type} name={name} checked={checked} onChange={onChange} />\n);\n\n\nCheckbox.propTypes = {\n  type: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  checked: PropTypes.bool,\n  onChange: PropTypes.func.isRequired,\n  className:PropTypes.string\n}\n*/\n\n\nvar OPTIONS = [\"One\", \"Two\", \"Three\"]; // FOR TEST ONLY CHANGE \n\nvar CheckboxQuiz =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CheckboxQuiz, _React$Component);\n\n  function CheckboxQuiz(props) {\n    var _this;\n\n    _classCallCheck(this, CheckboxQuiz);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CheckboxQuiz).call(this, props));\n\n    _this.createCheckbox = function (option) {\n      return React.createElement(Checkbox, {\n        label: option // to be changed for clarity \n        ,\n        isSelected: _this.state.checkboxes[option],\n        onCheckboxChange: _this.handleCheckboxChange,\n        key: option // to be changed for clarity \n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      });\n    };\n\n    _this.createCheckboxes = function () {\n      return OPTIONS.map(_this.createCheckbox);\n    };\n\n    _this.state = {\n      report: '',\n      answer: '',\n      answercheck: false,\n      shouldBlockNavigation: false,\n      checkboxes: OPTIONS.reduce(function (options, option) {\n        return _objectSpread({}, options, _defineProperty({}, option, false));\n      }, {})\n    };\n    console.log('CheckboxQuiz initial state:', _this.state); // initial states \n\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_this));\n    _this.handleChangeReport = _this.handleChangeReport.bind(_assertThisInitialized(_this));\n    _this._handleRefresh = _this._handleRefresh.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(CheckboxQuiz, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this._isMounted = true;\n      document.getElementById(\"create-course-form\").reset();\n      document.body.style.background = '#fff';\n      this.setState({\n        report: '',\n        answer: '',\n        answercheck: false,\n        shouldBlockNavigation: false\n      });\n      window.history.pushState(window.state, null, window.location.href);\n      window.onbeforeunload = null;\n      window.addEventListener(\"keypress\", function (e) {\n        return _this2._handleRefresh(e);\n      });\n    }\n  }, {\n    key: \"_handleRefresh\",\n    value: function _handleRefresh(e) {\n      if (e.key === 'Enter') {\n        // console.log('enter e', e.srcElement);\n        // console.log('value', e.target.value);\n        var test = this.state.report; // console.log('test',this.state.report)\n\n        if (test !== \"\" && test !== null && test > parseInt(this.props.constraint[0].min) && test < parseInt(this.props.constraint[1].max)) {\n          this.setState({\n            answercheck: true\n          }); // console.log(this.state.answercheck)\n          // Send answers to the parent component\n\n          document.getElementById(\"create-course-form\").reset();\n          var prev_report = this.state.report;\n          this.setState({\n            report: ''\n          });\n          this.props.onAnswerSelected(this.state.report, this.props.questionId, e);\n        } else {\n          e.preventDefault();\n        }\n      }\n    }\n  }, {\n    key: \"_handleGoBack\",\n    value: function _handleGoBack(event) {\n      window.history.go(1);\n    }\n  }, {\n    key: \"handleChangeReport\",\n    value: function handleChangeReport(event) {\n      var test = Number(event.target.value);\n      this.setState({\n        report: event.target.value,\n        answercheck: false\n      }); // console.log(event.key)\n\n      if (test !== \"\" && test !== null && test > parseInt(this.props.constraint[0].min) && test < parseInt(this.props.constraint[1].max)) {\n        this.setState({\n          answercheck: true\n        }); // console.log(this.state.answercheck)\n      } else {\n        event.preventDefault();\n      }\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      document.getElementById(\"create-course-form\").reset(); // console.log(event)\n\n      event.preventDefault();\n      var prev_report = this.state.report;\n      this.setState({\n        report: ''\n      });\n      this.props.onAnswerSelected(this.state.report, this.props.questionId, event);\n    }\n  }, {\n    key: \"handleCheckboxChange\",\n    value: function handleCheckboxChange(changeEvent) {\n      var name = changeEvent.target.name;\n      console.log(name);\n      this.setState(function (prevState) {\n        return {\n          checkboxes: _objectSpread({}, prevState.checkboxes, _defineProperty({}, name, !prevState.checkboxes[name]))\n        };\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(CSSTransitionGroup, {\n        className: \"container\",\n        component: \"div\",\n        transitionName: \"fade\",\n        transitionEnterTimeout: 800,\n        transitionLeaveTimeout: 500,\n        transitionAppear: true,\n        transitionAppearTimeout: 500,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        key: this.props.questionId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, React.createElement(QuestionCount, {\n        counter: this.props.questionCount,\n        total: this.props.questionTotal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }), React.createElement(Question, {\n        content: this.props.question,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"col-md-6 no-padding\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        id: \"create-course-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        value: this.state.report,\n        onKeyDown: this._handleRefresh,\n        onChange: this.handleChangeReport,\n        name: \"report\",\n        id: \"report\",\n        className: \"form-control\",\n        placeholder: \"\",\n        type: \"number\",\n        inputMode: \"numeric\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      })))), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"col-md-12 pad-20\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-save btn-primary pad-20\",\n        disabled: !this.state.answercheck,\n        onClick: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, \"Submit\"))), React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, this.createCheckboxes()));\n    }\n  }]);\n\n  return CheckboxQuiz;\n}(React.Component); // closing class \n\n\nCheckboxQuiz.propTypes = {\n  answer: PropTypes.string.isRequired,\n  answerOptions: PropTypes.array.isRequired,\n  question: PropTypes.string.isRequired,\n  questionId: PropTypes.number.isRequired,\n  questionCount: PropTypes.number.isRequired,\n  questionTotal: PropTypes.number.isRequired,\n  onAnswerSelected: PropTypes.func.isRequired\n};\nexport default CheckboxQuiz;","map":{"version":3,"sources":["/Users/vasilisaskvortsova/Documents/COVID-19/covid-webap/src/components/CheckboxQuiz/CheckboxQuiz.js"],"names":["React","PropTypes","CSSTransitionGroup","Question","QuestionCount","AnswerOption","Checkbox","label","isSelected","onCheckboxChange","OPTIONS","CheckboxQuiz","props","createCheckbox","option","state","checkboxes","handleCheckboxChange","createCheckboxes","map","report","answer","answercheck","shouldBlockNavigation","reduce","options","console","log","handleSubmit","bind","handleChangeReport","_handleRefresh","_isMounted","document","getElementById","reset","body","style","background","setState","window","history","pushState","location","href","onbeforeunload","addEventListener","e","key","test","parseInt","constraint","min","max","prev_report","onAnswerSelected","questionId","preventDefault","event","go","Number","target","value","changeEvent","name","prevState","questionCount","questionTotal","question","Component","propTypes","string","isRequired","answerOptions","array","number","func"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransitionGroup } from 'react-transition-group';\nimport Question from '../QuizQuestion/Question';\nimport QuestionCount from '../QuizQuestion/QuestionCount';\nimport AnswerOption from '../QuizQuestion/AnswerOption';\n\n\n// import './CheckboxQuiz.css';\n// Maybe import for consistency CHANGE \nconst Checkbox = ({ label, isSelected, onCheckboxChange }) => (\n  <div className=\"form-check\">\n    <label>\n      <input\n        type=\"checkbox\"\n        name={label}\n        checked={isSelected}\n        onChange={onCheckboxChange}\n        className=\"form-check-input\"\n      />\n      {label}\n    </label>\n  </div>\n);\n\n\n/*const Checkbox = ({type = 'checkbox', name, checked = false, onChange, className }) => (\n  <input type={type} name={name} checked={checked} onChange={onChange} />\n);\n\n\nCheckbox.propTypes = {\n  type: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  checked: PropTypes.bool,\n  onChange: PropTypes.func.isRequired,\n  className:PropTypes.string\n}\n*/\n\nconst OPTIONS = [\"One\", \"Two\", \"Three\"]; // FOR TEST ONLY CHANGE \n\nclass CheckboxQuiz extends React.Component {\n\n  constructor(props){\n    super(props);\n\n  this.state = {\n    report: '',\n    answer: '',\n    answercheck: false,\n    shouldBlockNavigation: false,\n    checkboxes: OPTIONS.reduce(\n      (options, option) => ({ // to change options and options for name, label for clarity \n        ...options,\n        [option]: false\n      }),\n      {}\n    )\n  }\n  \n\n  console.log('CheckboxQuiz initial state:',this.state) // initial states \n\n  this.handleSubmit       = this.handleSubmit.bind(this);  \n  this.handleChangeReport = this.handleChangeReport.bind(this);\n  this._handleRefresh     = this._handleRefresh.bind(this); \n}\n\n\ncomponentDidMount() {\n  this._isMounted = true;\n  document.getElementById(\"create-course-form\").reset();\n  document.body.style.background= '#fff';   \n  this.setState({\n    report: '',\n    answer: '',\n    answercheck: false,\n    shouldBlockNavigation: false}\n    )\n  window.history.pushState(window.state, null, window.location.href)\n  window.onbeforeunload = null;\n  window.addEventListener(\"keypress\", e => this._handleRefresh(e));\n\n}\n\n_handleRefresh(e){\n  if (e.key==='Enter') {\n  // console.log('enter e', e.srcElement);\n\n  // console.log('value', e.target.value);\n\n  var test = this.state.report\n  // console.log('test',this.state.report)\n    \n  if ((test!==\"\") && (test!==null) && (test>parseInt(this.props.constraint[0].min)) && (test<parseInt(this.props.constraint[1].max))) \n  {\n    this.setState({\n    answercheck: true}\n    );\n\n    // console.log(this.state.answercheck)\n    // Send answers to the parent component\n    document.getElementById(\"create-course-form\").reset();\n    let prev_report = this.state.report \n        this.setState({\n          report: ''}\n        )\n\n        this.props.onAnswerSelected(this.state.report,this.props.questionId,e) \n  }\n  else {\n    e.preventDefault()\n  }\n \n  }\n}\n\n_handleGoBack(event){\n    window.history.go(1);\n  }\n\nhandleChangeReport(event) {\n\n  var test = Number(event.target.value)\n    \n  this.setState({\n    report: event.target.value,\n    answercheck: false \n    }\n    );\n  \n  // console.log(event.key)\n\n  if ((test!==\"\") && (test!==null) && (test>parseInt(this.props.constraint[0].min)) && (test<parseInt(this.props.constraint[1].max))) \n  {\n    this.setState({\n    answercheck: true}\n    );\n    // console.log(this.state.answercheck)\n  }\n  else {\n    event.preventDefault()\n  }\n\n}\n\n\n  handleSubmit(event) {\n        document.getElementById(\"create-course-form\").reset();\n\n        // console.log(event)\n        \n        event.preventDefault();\n        let prev_report = this.state.report \n        this.setState({\n          report: ''}\n        )\n\n        this.props.onAnswerSelected(this.state.report,this.props.questionId,event)\n}\n\n\nhandleCheckboxChange(changeEvent) {\n      const { name } = changeEvent.target;\n      console.log(name)\n\n  this.setState(prevState => ({\n      checkboxes: {\n        ...prevState.checkboxes,\n        [name]: !prevState.checkboxes[name],\n      }\n    }));\n}\n\ncreateCheckbox = option => (\n    <Checkbox\n      label={option} // to be changed for clarity \n      isSelected={this.state.checkboxes[option]}\n      onCheckboxChange={this.handleCheckboxChange}\n      key={option} // to be changed for clarity \n    />\n  );\n\ncreateCheckboxes = () => OPTIONS.map(this.createCheckbox);\n\n\nrender() {\n  \n  return (\n    <CSSTransitionGroup\n      className=\"container\"\n      component=\"div\"\n      transitionName=\"fade\"\n      transitionEnterTimeout={800}\n      transitionLeaveTimeout={500}\n      transitionAppear\n      transitionAppearTimeout={500}\n    >\n      <div key={this.props.questionId}>\n        <QuestionCount counter={this.props.questionCount} total={this.props.questionTotal} />\n        <Question content={this.props.question} />\n\n        <div className=\"col-md-6 no-padding\">\n        <form id=\"create-course-form\">\n        <input value={this.state.report} onKeyDown={this._handleRefresh} onChange={this.handleChangeReport} name=\"report\" id=\"report\" className=\"form-control\" placeholder=\"\" type=\"number\" inputMode=\"numeric\" required />\n        </form>\n        </div>\n      </div>\n      <p></p>\n      <div className=\"col-md-12 pad-20\">\n        <div>\n          <button type=\"button\" className=\"btn btn-save btn-primary pad-20\" disabled={!this.state.answercheck} onClick={this.handleSubmit}>Submit\n            </button>\n          </div>\n      </div>\n\n      <div className=\"container\">\n          {this.createCheckboxes()}\n      </div>\n    </CSSTransitionGroup>\n  );\n}\n\n} // closing class \n\n\n\nCheckboxQuiz.propTypes = {\n  answer: PropTypes.string.isRequired,\n  answerOptions: PropTypes.array.isRequired,\n  question: PropTypes.string.isRequired,\n  questionId: PropTypes.number.isRequired,\n  questionCount: PropTypes.number.isRequired,\n  questionTotal: PropTypes.number.isRequired,\n  onAnswerSelected: PropTypes.func.isRequired,\n};\n\nexport default CheckboxQuiz;\n\n\n"]},"metadata":{},"sourceType":"module"}