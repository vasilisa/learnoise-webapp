{"ast":null,"code":"import _objectSpread from \"/Users/vasilisaskvortsova/Documents/COVID-19/covid-webap/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"/Users/vasilisaskvortsova/Documents/COVID-19/covid-webap/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/vasilisaskvortsova/Documents/COVID-19/covid-webap/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/vasilisaskvortsova/Documents/COVID-19/covid-webap/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/vasilisaskvortsova/Documents/COVID-19/covid-webap/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/vasilisaskvortsova/Documents/COVID-19/covid-webap/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/vasilisaskvortsova/Documents/COVID-19/covid-webap/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/vasilisaskvortsova/Documents/COVID-19/covid-webap/src/components/Survey/Survey.js\";\nimport React from 'react';\nimport { Button } from 'react-bootstrap';\nimport { withRouter } from 'react-router-dom'; // import quizQuestions as ybocs from '../../questionnaires/YBOCS';\n\nimport * as demo from '../../questionnaires/DEMO';\nimport * as ybocs from '../../questionnaires/YBOCS';\nimport * as covid from '../../questionnaires/COVID19'; // import './Survey.css'\n// Create a list of survey tags that will be presented to the user \n\nvar survey_list = ['YBOCS', 'COVID19', 'DEMO']; // add others after\n\nvar n = survey_list.length; // var quizQuestions = require('../../questionnaires/YBOCS') // +survey_list[0]\n\nconsole.log(ybocs[0]); // function createQuiz(id, survey_name) {\n//   var quizQuestions = require('../../questionnaires/'+survey_name)\n//     return {\n//         id: id,\n//         surveytag: survey_name,\n//         quizQuestions: quizQuestions,\n//     };\n// }\n// var list = [];\n// for(var i = 0; i < n+1; i++) {\n//    var obj = createQuiz(i,survey_list[i]); //add other params if you need\n//    list.push(obj);\n// }\n// console.log(list);\n\nvar Survey =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Survey, _React$Component);\n\n  function Survey(props) {\n    var _this;\n\n    _classCallCheck(this, Survey);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Survey).call(this, props));\n    console.log(_this.props.location.state); // Information about a specific block of the Survey: \n\n    var block_info = {\n      surveytag: survey_list[0] // First questionnaire in the list \n\n    };\n    _this.state = {\n      participant_info: _this.props.location.state.participant_info,\n      block_info: block_info,\n      newblock_frame: _this.props.location.state.newblock_frame,\n      questions: '' // quizQuestions,\n\n    };\n    console.log(_this.props.location.state.participant_info);\n\n    _this.getSurveyBlock.bind(_assertThisInitialized(_this));\n\n    _this.redirectToQuiz.bind(_assertThisInitialized(_this));\n\n    _this.redirectToEnd.bind(_assertThisInitialized(_this));\n\n    _this._isMounted = false;\n\n    _this._handleGoBack.bind(_assertThisInitialized(_this));\n\n    return _this;\n  }\n\n  _createClass(Survey, [{\n    key: \"redirectToQuiz\",\n    value: function redirectToQuiz() {\n      if (this.state.participant_info.block_number <= this.state.participant_info.TotalBlock) {\n        if (this.state.newblock_frame) {\n          this.setState({\n            newblock_frame: false\n          });\n          this.props.history.push({\n            pathname: \"/QuizBlock\",\n            state: {\n              participant_info: this.state.participant_info,\n              block_info: this.state.block_info,\n              questions: this.state.questions\n            }\n          });\n        } else {\n          if (this._isMounted) {\n            console.log(this.state.participant_info.block_number);\n            var newblocknumber = this.state.participant_info.block_number + 1;\n            console.log(newblocknumber);\n            this.getSurveyBlock(newblocknumber + 1);\n            this.setState({\n              newblock_frame: true,\n              participant_info: _objectSpread({}, this.state.participant_info, {\n                block_number: newblocknumber\n              })\n            }); // what gets updated \n          }\n        }\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this._isMounted = true;\n      document.body.style.background = '#fff';\n      this._isMounted && this.getSurveyBlock(this.state.participant_info.block_number + 1);\n      window.history.pushState(window.state, null, window.location.href);\n      window.addEventListener('popstate', function (e) {\n        return _this2._handleGoBack(e);\n      });\n      window.onbeforeunload = this._handleRefresh;\n    }\n  }, {\n    key: \"_handleRefresh\",\n    value: function _handleRefresh(evt) {\n      return false; // error message when refresh occurs\n    }\n  }, {\n    key: \"_handleGoBack\",\n    value: function _handleGoBack(event) {\n      window.history.go(1);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._isMounted = false;\n    } // Get info about the specific Survey Block: questions IDS to play on this block + entry text \n\n  }, {\n    key: \"getSurveyBlock\",\n    value: function getSurveyBlock(block_number_) {\n      console.log(block_number_);\n      this.setState({\n        loading: true\n      });\n\n      if (block_number_ === 1) {\n        // Intro: questions 1 to 7 More elegant way is to filter the question JSON for the question whith the tag \"intro\" \n        var surveytag_block = \"intro\"; // intro\" \n      } else if (block_number_ === 2) {\n        var surveytag_block = \"adulthood\";\n      } else if (block_number_ === 3) {\n        var surveytag_block = \"childhood\";\n      } else if (block_number_ === 4) {\n        var surveytag_block = \"repdevelop\";\n      } else if (block_number_ === 5) {\n        surveytag_block = \"health\";\n      } else if (block_number_ === 6) {\n        surveytag_block = \"pvd\";\n      } else if (block_number_ === 7) {\n        surveytag_block = \"feedback\";\n      } else {\n        console.log('Error: Unknown surveytag for block', block_number_);\n      } // react does not support the direct update of the nexted objects; you have to recreate the state  \n\n\n      var _this$state = _objectSpread({}, this.state),\n          block_info = _this$state.block_info; // recreate the current state \n\n\n      var currentState = block_info; // assigned it to a const \n\n      currentState.surveytag = surveytag_block; // change the value of the survey field \n\n      console.log(currentState);\n      this.setState({\n        block_info: currentState\n      }); // insert it into a state. \n\n      console.log('Block_info state after update', this.state.block_info);\n    }\n  }, {\n    key: \"redirectToEnd\",\n    value: function redirectToEnd() {\n      alert(\"You will be redirected to the validation page. Please, confirm leaving the page. Thank you!\"); // window.location.replace('https://app.prolific.co/submissions/complete?cc=1A496EDB')\n\n      window.location = 'https://app.prolific.co/submissions/complete?cc=1A496EDB';\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var text;\n\n      if (this.state.block_info.surveytag === \"intro\" && this.state.newblock_frame) {\n        text = React.createElement(\"div\", {\n          className: \"SurveyIntroText\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 185\n          },\n          __self: this\n        }, \" \", React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 185\n          },\n          __self: this\n        }, \"Dear Participant,\"), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 186\n          },\n          __self: this\n        }, \"Thank you for taking part in our study. The current study investigating \\u2018decision-making in time of uncertainty\\u2019 will take about X minutes.\"), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 187\n          },\n          __self: this\n        }, \"You will be asked to complete several questionnaires and play a decision-making task.\"), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 188\n          },\n          __self: this\n        }, \"Please do not start until you will have enough time to complete it in one go. Please close other programs (e.g. chat or e-mail) to avoid distractions.\"), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 190\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"bold\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 190\n          },\n          __self: this\n        }, \"Good luck!\")));\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 193\n          },\n          __self: this\n        }, React.createElement(\"center\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 194\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"instructionsButtonContainer\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 195\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 196\n          },\n          __self: this\n        }, text), React.createElement(\"center\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 199\n          },\n          __self: this\n        }, React.createElement(Button, {\n          className: \"buttonInstructionStart\",\n          onClick: function onClick() {\n            return _this3.redirectToQuiz();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 200\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          class: \"bold\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 201\n          },\n          __self: this\n        }, \"START\"))))));\n      } else if (this.state.block_info.surveytag === \"adulthood\" && this.state.newblock_frame) {\n        text = React.createElement(\"div\", {\n          className: \"SurveyIntroText\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 211\n          },\n          __self: this\n        }, \" \", React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 211\n          },\n          __self: this\n        }, \"Adult Life.\"), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 212\n          },\n          __self: this\n        }, \"We will now ask you to answer questions about your adult life. You are asked to indicate the extent to which you agree or disagree with each of the following statements.\"), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 213\n          },\n          __self: this\n        }, \"There are no right or wrong answers!\"), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 214\n          },\n          __self: this\n        }, \"The important thing is that your answers reflect your life experiences as closely as possible.\"));\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 217\n          },\n          __self: this\n        }, React.createElement(\"center\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 218\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"instructionsButtonContainer\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 219\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 220\n          },\n          __self: this\n        }, text), React.createElement(\"center\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 223\n          },\n          __self: this\n        }, React.createElement(Button, {\n          className: \"buttonInstructionStart\",\n          onClick: function onClick() {\n            return _this3.redirectToQuiz();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 224\n          },\n          __self: this\n        }, \"START\")))));\n      } else if (this.state.block_info.surveytag === \"childhood\" && this.state.newblock_frame) {\n        text = React.createElement(\"div\", {\n          className: \"SurveyIntroText\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 235\n          },\n          __self: this\n        }, \" \", React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 235\n          },\n          __self: this\n        }, \"Childhood.\"), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 236\n          },\n          __self: this\n        }, \"We will now ask you to answer questions about your childhood and your life with your parents.\"), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 237\n          },\n          __self: this\n        }, \"In all of these questions, a parent refers to the person who has parental authority in the home. This can mean both biological and adoptive parents.\"), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 238\n          },\n          __self: this\n        }, \"The information we will now ask you to report concerns the period of your life when you were younger than 12. This time includes preschool, kindergarten, and the elementary school.\"), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 239\n          },\n          __self: this\n        }, \"You are asked to indicate the extent to which you agree or disagree with each of the following statements.\"), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 240\n          },\n          __self: this\n        }, \"Again, there are no right or wrong answers! The important thing is that your answers reflect your life experiences as closely as possible.\"));\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 244\n          },\n          __self: this\n        }, React.createElement(\"center\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 245\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"instructionsButtonContainer\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 246\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 247\n          },\n          __self: this\n        }, text), React.createElement(\"center\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 250\n          },\n          __self: this\n        }, React.createElement(Button, {\n          className: \"buttonInstructionStart\",\n          onClick: function onClick() {\n            return _this3.redirectToQuiz();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 251\n          },\n          __self: this\n        }, \"START\")))));\n      } else if (this.state.block_info.surveytag === \"repdevelop\" && this.state.newblock_frame) {\n        text = React.createElement(\"div\", {\n          className: \"SurveyIntroText\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 261\n          },\n          __self: this\n        }, \" \", React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 261\n          },\n          __self: this\n        }, \"Reproductive development\"), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 262\n          },\n          __self: this\n        }, \"This section contains questions about your reproductive development: age at puberty, age at first consented sexual experience, age at birth of your first child, number of children.\"));\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 266\n          },\n          __self: this\n        }, React.createElement(\"center\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 267\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"instructionsButtonContainer\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 268\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 269\n          },\n          __self: this\n        }, text), React.createElement(\"center\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 272\n          },\n          __self: this\n        }, React.createElement(Button, {\n          className: \"buttonInstructionStart\",\n          onClick: function onClick() {\n            return _this3.redirectToQuiz();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 273\n          },\n          __self: this\n        }, \"START\")))));\n      } else if (this.state.block_info.surveytag === \"pvd\" && this.state.newblock_frame) {\n        text = React.createElement(\"div\", {\n          className: \"SurveyIntroText\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 284\n          },\n          __self: this\n        }, \" \", React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 284\n          },\n          __self: this\n        }, \"Vulnerability to pathogens\"), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 285\n          },\n          __self: this\n        }, \"This section contains questions about how you perceive your \", React.createElement(\"span\", {\n          className: \"bold italic\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 285\n          },\n          __self: this\n        }, \"current vulnerability\"), \" to pathogens.\"));\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 289\n          },\n          __self: this\n        }, React.createElement(\"center\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 290\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"instructionsButtonContainer\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 291\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 292\n          },\n          __self: this\n        }, text), React.createElement(\"center\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 295\n          },\n          __self: this\n        }, React.createElement(Button, {\n          className: \"buttonInstructionStart\",\n          onClick: function onClick() {\n            return _this3.redirectToQuiz();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 296\n          },\n          __self: this\n        }, \"START\")))));\n      } else if (this.state.block_info.surveytag === \"feedback\" && this.state.newblock_frame) {\n        text = React.createElement(\"div\", {\n          className: \"SurveyIntroText\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 306\n          },\n          __self: this\n        }, \" \", React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 306\n          },\n          __self: this\n        }, \"Your feedback\"), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 307\n          },\n          __self: this\n        }, \"Please, provide us with the feedback about this study\"));\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 310\n          },\n          __self: this\n        }, React.createElement(\"center\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 311\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"instructionsButtonContainer\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 312\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 313\n          },\n          __self: this\n        }, text), React.createElement(\"center\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 316\n          },\n          __self: this\n        }, React.createElement(Button, {\n          className: \"buttonInstructionStart\",\n          onClick: function onClick() {\n            return _this3.redirectToQuiz();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 317\n          },\n          __self: this\n        }, \"START\")))));\n      } else if (this.state.participant_info.block_number === this.state.participant_info.TotalBlock + 1) {\n        text = React.createElement(\"div\", {\n          className: \"SurveyIntroText\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 328\n          },\n          __self: this\n        }, \" \", React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 328\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          class: \"bold\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 328\n          },\n          __self: this\n        }, \"You finished the survey!\"), \" \"), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 329\n          },\n          __self: this\n        }, \"Thank you for your participation!\"), React.createElement(Button, {\n          variant: \"secondary\",\n          color: \"danger\",\n          size: \"sm\",\n          className: \"buttonInstructionFinal\",\n          type: \"submit\",\n          onClick: function onClick() {\n            return _this3.redirectToEnd();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 330\n          },\n          __self: this\n        }, \"Click here \"));\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 332\n          },\n          __self: this\n        }, React.createElement(\"center\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 333\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"restarttraining\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 334\n          },\n          __self: this\n        }, text, \"  \", React.createElement(\"div\", {\n          className: \"translate\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 335\n          },\n          __self: this\n        }))));\n      } else {\n        text = '... Continue ...';\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 345\n          },\n          __self: this\n        }, React.createElement(\"center\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 346\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"SurveyIntroText\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 347\n          },\n          __self: this\n        }, text), React.createElement(\"center\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 350\n          },\n          __self: this\n        }, React.createElement(Button, {\n          className: \"buttonInstructionStart\",\n          onClick: function onClick() {\n            return _this3.redirectToQuiz();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 351\n          },\n          __self: this\n        }, \"\\u2192\"))));\n      }\n    }\n  }]);\n\n  return Survey;\n}(React.Component);\n\nexport default withRouter(Survey);","map":{"version":3,"sources":["/Users/vasilisaskvortsova/Documents/COVID-19/covid-webap/src/components/Survey/Survey.js"],"names":["React","Button","withRouter","demo","ybocs","covid","survey_list","n","length","console","log","Survey","props","location","state","block_info","surveytag","participant_info","newblock_frame","questions","getSurveyBlock","bind","redirectToQuiz","redirectToEnd","_isMounted","_handleGoBack","block_number","TotalBlock","setState","history","push","pathname","newblocknumber","document","body","style","background","window","pushState","href","addEventListener","e","onbeforeunload","_handleRefresh","evt","event","go","block_number_","loading","surveytag_block","currentState","alert","text","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Button } from 'react-bootstrap';\nimport {withRouter} from 'react-router-dom';\n\n// import quizQuestions as ybocs from '../../questionnaires/YBOCS';\nimport * as demo  from '../../questionnaires/DEMO'; \nimport * as ybocs from '../../questionnaires/YBOCS'; \nimport * as covid from '../../questionnaires/COVID19'; \n\n// import './Survey.css'\n\n\n// Create a list of survey tags that will be presented to the user \nconst survey_list = ['YBOCS','COVID19','DEMO'] // add others after\nconst n           =  survey_list.length;   \n\n// var quizQuestions = require('../../questionnaires/YBOCS') // +survey_list[0]\n\nconsole.log(ybocs[0])\n\n// function createQuiz(id, survey_name) {\n//   var quizQuestions = require('../../questionnaires/'+survey_name)\n//     return {\n//         id: id,\n//         surveytag: survey_name,\n//         quizQuestions: quizQuestions,\n//     };\n// }\n\n\n// var list = [];\n// for(var i = 0; i < n+1; i++) {\n//    var obj = createQuiz(i,survey_list[i]); //add other params if you need\n//    list.push(obj);\n// }\n// console.log(list);\n\n\n\nclass Survey extends React.Component {\n  constructor(props){\n    super(props);\n\n    console.log(this.props.location.state)\n    \n  \n    // Information about a specific block of the Survey: \n    const block_info = {\n      surveytag  : survey_list[0], // First questionnaire in the list \n     }\n\n    this.state = {\n      participant_info : this.props.location.state.participant_info,\n      block_info       : block_info,\n      newblock_frame   : this.props.location.state.newblock_frame,  \n      questions        : '' // quizQuestions,\n    }\n\n    console.log(this.props.location.state.participant_info)\n\n\n    \n\n    this.getSurveyBlock.bind(this);\n    this.redirectToQuiz.bind(this); \n    this.redirectToEnd.bind(this); \n    this._isMounted = false;\n    this._handleGoBack.bind(this);   \n  }\n\n\n  redirectToQuiz () {\n      if((this.state.participant_info.block_number <= (this.state.participant_info.TotalBlock)))\n          {           \n          if (this.state.newblock_frame){\n          this.setState({newblock_frame : false})\n          this.props.history.push({\n           pathname: `/QuizBlock`,\n           state: {participant_info: this.state.participant_info,\n                   block_info      : this.state.block_info,\n                   questions       : this.state.questions\n                 }\n          })}\n          else\n          {\n            if (this._isMounted)\n            {\n              console.log(this.state.participant_info.block_number)\n              const newblocknumber = this.state.participant_info.block_number + 1\n              console.log(newblocknumber)\n              this.getSurveyBlock(newblocknumber+1)\n              this.setState({newblock_frame : true, participant_info : {...this.state.participant_info, block_number:newblocknumber},}) // what gets updated \n            }\n          }\n        }\n      }\n    \n  componentDidMount() { \n  this._isMounted = true;\n  document.body.style.background= '#fff'; \n  this._isMounted && this.getSurveyBlock(this.state.participant_info.block_number+1);\n    window.history.pushState(window.state, null, window.location.href);\n    window.addEventListener('popstate', e => this._handleGoBack(e));\n    window.onbeforeunload = this._handleRefresh\n  }\n\n  _handleRefresh(evt){\n    return false // error message when refresh occurs\n  }\n\n  _handleGoBack(event){\n    window.history.go(1);\n  }\n\n  componentWillUnmount()\n  {\n   this._isMounted = false;\n  }  \n\n // Get info about the specific Survey Block: questions IDS to play on this block + entry text \ngetSurveyBlock(block_number_) {\n\n    console.log(block_number_)\n\n    this.setState({ loading: true });\n\n    if (block_number_===1) { // Intro: questions 1 to 7 More elegant way is to filter the question JSON for the question whith the tag \"intro\" \n      var surveytag_block = \"intro\" // intro\" \n      }\n    else if (block_number_===2) {\n      var surveytag_block = \"adulthood\" \n    \n    }\n\n    else if (block_number_===3) {\n\n      var surveytag_block = \"childhood\" \n    }\n\n    else if (block_number_===4) { \n\n        var surveytag_block = \"repdevelop\"\n    }\n\n    else if (block_number_===5) {\n        \n        surveytag_block = \"health\"\n    }\n\n    else if (block_number_===6) {\n        \n        surveytag_block = \"pvd\"\n    }\n\n    else if (block_number_===7) {\n        \n        surveytag_block = \"feedback\"\n    }\n\n    else {\n      console.log('Error: Unknown surveytag for block',block_number_);\n    }\n\n    // react does not support the direct update of the nexted objects; you have to recreate the state  \n\n    const { block_info }   = { ...this.state }; // recreate the current state \n    const currentState     = block_info;        // assigned it to a const \n    currentState.surveytag = surveytag_block    // change the value of the survey field \n    console.log(currentState)\n    this.setState({block_info: currentState }) // insert it into a state. \n    console.log('Block_info state after update', this.state.block_info);\n }\n\n redirectToEnd(){\n    alert(\"You will be redirected to the validation page. Please, confirm leaving the page. Thank you!\")\n    // window.location.replace('https://app.prolific.co/submissions/complete?cc=1A496EDB')\n    window.location = 'https://app.prolific.co/submissions/complete?cc=1A496EDB'\n}\n\nrender()\n  { \n    let text\n    if ((this.state.block_info.surveytag === \"intro\") && (this.state.newblock_frame))\n    { \n      text = <div className='SurveyIntroText'> <p>Dear Participant,</p>\n      <p>Thank you for taking part in our study. The current study investigating ‘decision-making in time of uncertainty’ will take about X minutes.</p> \n      <p>You will be asked to complete several questionnaires and play a decision-making task.</p>\n      <p>Please do not start until you will have enough time to complete it in one go. Please close other programs (e.g. chat or e-mail) to avoid distractions.</p>\n\n      <p><span className=\"bold\">Good luck!</span></p></div>\n\n    return (\n      <div>\n      <center> \n      <div className=\"instructionsButtonContainer\">\n        <div>\n          {text}           \n        </div> \n        <center>\n          <Button className=\"buttonInstructionStart\" onClick={()=>this.redirectToQuiz()}>\n          <span class=\"bold\">START</span>\n          </Button>\n        </center>\n      </div>\n      </center> \n      </div>);\n    } \n\n    else if ((this.state.block_info.surveytag === \"adulthood\")  && (this.state.newblock_frame))\n    {\n      text = <div className='SurveyIntroText'> <p>Adult Life.</p>\n                <p>We will now ask you to answer questions about your adult life. You are asked to indicate the extent to which you agree or disagree with each of the following statements.</p> \n                <p>There are no right or wrong answers!</p>\n                <p>The important thing is that your answers reflect your life experiences as closely as possible.</p></div> \n       \n        return (\n          <div>\n          <center> \n          <div className=\"instructionsButtonContainer\">\n            <div>\n              {text}           \n            </div> \n            <center>\n              <Button className=\"buttonInstructionStart\" onClick={()=>this.redirectToQuiz()}>\n              START\n              </Button>\n            </center>\n          </div>\n          </center>\n          </div>\n          );\n    }\n    else if ((this.state.block_info.surveytag === \"childhood\") && (this.state.newblock_frame))\n    {\n      text = <div className='SurveyIntroText'> <p>Childhood.</p>\n            <p>We will now ask you to answer questions about your childhood and your life with your parents.</p>\n            <p>In all of these questions, a parent refers to the person who has parental authority in the home. This can mean both biological and adoptive parents.</p> \n            <p>The information we will now ask you to report concerns the period of your life when you were younger than 12. This time includes preschool, kindergarten, and the elementary school.</p>\n            <p>You are asked to indicate the extent to which you agree or disagree with each of the following statements.</p>\n            <p>Again, there are no right or wrong answers! The important thing is that your answers reflect your life experiences as closely as possible.</p> \n          </div>\n      \n        return (\n          <div>\n          <center> \n          <div className=\"instructionsButtonContainer\">\n            <div>\n              {text}           \n            </div>\n            <center>\n              <Button className=\"buttonInstructionStart\" onClick={()=>this.redirectToQuiz()}>\n              START\n              </Button>\n            </center>\n          </div>\n          </center>\n          </div>);\n    }\n    else if ((this.state.block_info.surveytag === \"repdevelop\") && (this.state.newblock_frame)) \n    { \n      text = <div className='SurveyIntroText'> <p>Reproductive development</p>\n                <p>This section contains questions about your reproductive development: age at puberty, age at first consented sexual experience, age at birth of your first child, number of children.</p> \n                </div>\n        \n        return (\n        <div>\n        <center> \n        <div className=\"instructionsButtonContainer\">\n          <div>\n            {text}           \n          </div> \n            <center>\n            <Button className=\"buttonInstructionStart\" onClick={()=>this.redirectToQuiz()}>\n            START\n            </Button>\n            </center>\n          </div>\n          </center>\n          </div>);\n      }\n\n    else if ((this.state.block_info.surveytag === \"pvd\") && (this.state.newblock_frame)) \n    { \n      text = <div className='SurveyIntroText'> <p>Vulnerability to pathogens</p>\n                <p>This section contains questions about how you perceive your <span className='bold italic'>current vulnerability</span> to pathogens.</p> \n                </div>\n        \n        return (\n        <div>\n        <center> \n        <div className=\"instructionsButtonContainer\">\n          <div>\n            {text}           \n          </div> \n            <center>\n            <Button className=\"buttonInstructionStart\" onClick={()=>this.redirectToQuiz()}>\n            START\n            </Button>\n            </center>\n          </div>\n          </center>\n          </div>);\n      }\n    else if ((this.state.block_info.surveytag === \"feedback\") && (this.state.newblock_frame)) \n    { \n      text = <div className='SurveyIntroText'> <p>Your feedback</p>\n                <p>Please, provide us with the feedback about this study</p> \n                </div>\n        return (\n        <div>\n        <center> \n        <div className=\"instructionsButtonContainer\">\n          <div>\n            {text}           \n          </div> \n            <center>\n            <Button className=\"buttonInstructionStart\" onClick={()=>this.redirectToQuiz()}>\n            START\n            </Button>\n            </center>\n          </div>\n          </center>\n          </div>);\n      }\n\n    else if (this.state.participant_info.block_number === this.state.participant_info.TotalBlock+1) \n    {\n      text = <div className='SurveyIntroText'> <p><span class=\"bold\">You finished the survey!</span> </p>\n      <p>Thank you for your participation!</p> \n      <Button variant=\"secondary\" color=\"danger\" size=\"sm\" className=\"buttonInstructionFinal\" type=\"submit\" onClick={() => this.redirectToEnd()}>Click here </Button></div>\n        return (\n          <div>\n          <center> \n          <div className=\"restarttraining\">\n              {text}  <div className=\"translate\"/>\n            </div>\n          </center>\n          </div>);        \n    }\n\n    else\n    {\n          text = '... Continue ...'\n        return (\n      <div>\n      <center>\n      <div className=\"SurveyIntroText\">\n        {text}           \n      </div>\n      <center>\n            <Button className=\"buttonInstructionStart\" onClick={()=>this.redirectToQuiz()}>\n            &#8594;\n            </Button>\n            </center>\n    </center>\n    </div>);\n    }    \n  }\n\n}\n\nexport default withRouter(Survey);"]},"metadata":{},"sourceType":"module"}