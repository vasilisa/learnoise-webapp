{"ast":null,"code":"import _defineProperty from \"/Users/vasilisaskvortsova/Documents/COVID-19/covid-webap/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/vasilisaskvortsova/Documents/COVID-19/covid-webap/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"/Users/vasilisaskvortsova/Documents/COVID-19/covid-webap/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/vasilisaskvortsova/Documents/COVID-19/covid-webap/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/vasilisaskvortsova/Documents/COVID-19/covid-webap/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/vasilisaskvortsova/Documents/COVID-19/covid-webap/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/vasilisaskvortsova/Documents/COVID-19/covid-webap/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/vasilisaskvortsova/Documents/COVID-19/covid-webap/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/vasilisaskvortsova/Documents/COVID-19/covid-webap/src/components/Consent/Consent.js\";\nimport React, { Component } from \"react\";\nimport Checkbox from \"../Checkbox/Checkbox\"; //import { Button } from 'react-bootstrap';\n\nimport { withRouter } from 'react-router-dom';\nvar OPTIONS = [\"One\", \"Two\", \"Three\"];\n\nvar Consent =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Consent, _Component);\n\n  function Consent(props) {\n    var _this;\n\n    _classCallCheck(this, Consent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Consent).call(this, props));\n\n    _this.handleCheckboxChange = function (changeEvent) {\n      var name = changeEvent.target.name;\n      console.log(name);\n\n      _this.setState(function (prevState) {\n        return {\n          checkboxes: _objectSpread({}, prevState.checkboxes, _defineProperty({}, name, !prevState.checkboxes[name]))\n        };\n      });\n\n      if (_this.state.count === 3) {\n        _this.setState({\n          verified: true\n        });\n      }\n    };\n\n    _this.redirectToTarget = function () {\n      _this.props.history.push({\n        pathname: \"/Survey\",\n        state: {\n          participant_info: _this.state\n        }\n      });\n    };\n\n    _this.handleFormSubmit = function (formSubmitEvent) {\n      // formSubmitEvent.preventDefault();\n      var sumValues = function sumValues(obj) {\n        return Object.values(obj).reduce(function (a, b) {\n          return a + b;\n        });\n      };\n\n      var count = sumValues(_this.state.checkboxes);\n      console.log(count);\n      console.log(Object.values(_this.state.checkboxes));\n      Object.keys(_this.state.checkboxes).filter(function (checkbox) {\n        return _this.state.checkboxes[checkbox];\n      }).forEach(function (checkbox) {\n        console.log(checkbox, \"is selected.\");\n      });\n    };\n\n    _this.createCheckbox = function (option) {\n      return React.createElement(Checkbox, {\n        label: option // to be changed for clarity \n        ,\n        isSelected: _this.state.checkboxes[option],\n        onCheckboxChange: _this.handleCheckboxChange,\n        key: option // to be changed for clarity \n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      });\n    };\n\n    _this.createCheckboxes = function () {\n      return OPTIONS.map(_this.createCheckbox);\n    };\n\n    var prolific_id = _this.props.location.state.prolific_id;\n    var study_id = _this.props.location.state.study_id;\n    var longit_id = _this.props.location.state.longit_id;\n    _this.state = {\n      checkboxes: OPTIONS.reduce(function (options, option) {\n        return _objectSpread({}, options, _defineProperty({}, option, false));\n      }, {}),\n      prolific_id: prolific_id,\n      study_id: study_id,\n      longit_id: longit_id,\n      verified: false,\n      count: 0\n    };\n    console.log(_this.state.checkboxes);\n\n    _this.redirectToTarget.bind(_assertThisInitialized(_this));\n\n    _this.handleFormSubmit.bind(_assertThisInitialized(_this));\n\n    return _this;\n  }\n\n  _createClass(Consent, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.handleFormSubmit(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, this.createCheckboxes(), React.createElement(\"div\", {\n        className: \"form-group mt-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-outline-primary mr-2\",\n        disabled: !this.state.verified,\n        onClick: this.redirectToTarget,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"Submit\"))));\n    }\n  }]);\n\n  return Consent;\n}(Component);\n/*\n<form onSubmit={this.handleFormSubmit}>\n              {this.createCheckboxes()}\n            </form>\n\n\n*/\n\n\nexport default withRouter(Consent);","map":{"version":3,"sources":["/Users/vasilisaskvortsova/Documents/COVID-19/covid-webap/src/components/Consent/Consent.js"],"names":["React","Component","Checkbox","withRouter","OPTIONS","Consent","props","handleCheckboxChange","changeEvent","name","target","console","log","setState","prevState","checkboxes","state","count","verified","redirectToTarget","history","push","pathname","participant_info","handleFormSubmit","formSubmitEvent","sumValues","obj","Object","values","reduce","a","b","keys","filter","checkbox","forEach","createCheckbox","option","createCheckboxes","map","prolific_id","location","study_id","longit_id","options","bind"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Checkbox from \"../Checkbox/Checkbox\";\n//import { Button } from 'react-bootstrap';\nimport {withRouter} from 'react-router-dom';\n\n\n\nconst OPTIONS = [\"One\", \"Two\", \"Three\"];\n\nclass Consent extends Component {\n  constructor(props) {\n    super(props);\n\n    const prolific_id = this.props.location.state.prolific_id\n    const study_id    = this.props.location.state.study_id\n    const longit_id   = this.props.location.state.longit_id\n\n  this.state = {\n    checkboxes: OPTIONS.reduce(\n      (options, option) => ({ // to change options and options for name, label for clarity \n        ...options,\n        [option]: false\n      }),\n      {}\n    ),\n    prolific_id: prolific_id, \n    study_id : study_id,\n    longit_id: longit_id,\n    verified: false, \n    count: 0\n\n  };\n\n  console.log(this.state.checkboxes)\n\n  this.redirectToTarget.bind(this);\n  this.handleFormSubmit.bind(this);\n    \n}\n\n  \n  handleCheckboxChange = changeEvent => {\n    const { name } = changeEvent.target;\n\n    console.log(name)\n\n    this.setState(prevState => ({\n      checkboxes: {\n        ...prevState.checkboxes,\n        [name]: !prevState.checkboxes[name],\n      }\n    }));\n\n    if (this.state.count===3){\n        this.setState({\n          verified: true\n        });\n      }\n  };\n\nredirectToTarget = () => {\n  this.props.history.push({\n    pathname: `/Survey`, \n    state: {participant_info: this.state} \n  })\n}\n\nhandleFormSubmit = formSubmitEvent => {\n    // formSubmitEvent.preventDefault();\n    const sumValues = obj => Object.values(obj).reduce((a, b) => a + b);\n\n    const count = sumValues(this.state.checkboxes);\n    console.log(count)\n    \n    console.log((Object.values(this.state.checkboxes)))\n    \n    Object.keys(this.state.checkboxes)\n      .filter(checkbox => this.state.checkboxes[checkbox])\n      .forEach(checkbox => {\n        console.log(checkbox, \"is selected.\");\n      });\n\n\n\n      \n\n\n\n  };\n\n  \ncreateCheckbox = option => (\n    <Checkbox\n      label={option} // to be changed for clarity \n      isSelected={this.state.checkboxes[option]}\n      onCheckboxChange={this.handleCheckboxChange}\n      key={option} // to be changed for clarity \n    />\n  );\n\n  createCheckboxes = () => OPTIONS.map(this.createCheckbox);\n\n\n  render() {\n    return (\n      <div className=\"container\">\n      <form onSubmit={this.handleFormSubmit()}>\n          {this.createCheckboxes()}\n\n          <div className=\"form-group mt-2\">\n              <button\n                type=\"button\"\n                className=\"btn btn-outline-primary mr-2\"\n                disabled={!this.state.verified}\n                onClick={this.redirectToTarget}>\n                Submit\n              </button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\n/*\n<form onSubmit={this.handleFormSubmit}>\n              {this.createCheckboxes()}\n            </form>\n\n\n*/\n\nexport default withRouter(Consent);"]},"metadata":{},"sourceType":"module"}