{"ast":null,"code":"var _jsxFileName = \"/Users/vasilisaskvortsova/Documents/LEARNOISE-local/webap-learnoise-2/src/components/CheckboxQuiz/CheckboxQuiz.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransitionGroup } from 'react-transition-group';\nimport Question from '../QuizQuestion/Question';\nimport Checkbox from '../Checkbox/Checkbox';\nimport ProgressBar from '../QuizQuestion/ProgressBar';\n\nclass CheckboxQuiz extends React.Component {\n  constructor(props) {\n    super(props);\n    var options = {};\n    var answers = {}; // Object.keys(this.props.answerOptions).map(function(key, index) {\n    //      // options[key] = false; // mybe to change to type\n    //      options[key.type] = false; // mybe to change to type \n    //    });\n\n    for (var key in this.props.answerOptions) {\n      console.log(key);\n      options[this.props.answerOptions[key].type] = false; // this.props.answerOptions[key].type\n\n      answers[this.props.answerOptions[key].type] = this.props.answerOptions[key].content;\n    }\n\n    this.state = {\n      report: '',\n      shouldBlockNavigation: false,\n      checkboxes: options,\n      answers: answers\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.createCheckBox = this.createCheckBox.bind(this);\n  } // constructor\n\n\n  componentDidMount() {\n    this._isMounted = true;\n    document.body.style.background = '#fff';\n    this.setState({\n      report: '',\n      shouldBlockNavigation: false\n    });\n    window.history.pushState(window.state, null, window.location.href);\n    window.onbeforeunload = null; // window.addEventListener(\"keypress\", e => this._handleRefresh(e));\n  }\n\n  _handleGoBack(event) {\n    window.history.go(1);\n  }\n\n  handleSubmit(event) {\n    // console.log(event)\n    event.preventDefault(); // Check if any of the boxes are checked -> combine the final report and send it to the parent Quiz Block component \n    // console.log(this.state.checkboxes)\n\n    const options = this.state.checkboxes;\n    const answers = this.state.answers;\n\n    const sumValues = obj => Object.values(obj).reduce((a, b) => a + b);\n\n    const count = sumValues(this.state.checkboxes);\n    console.log('Number of checked boxes:', count); // sub select only answer options that have been checked \n\n    if (count > 0) {\n      // at least one box is checked\n      var report = {};\n      Object.keys(options).map(function (key, index) {\n        if (options[key] === true) {\n          report[key] = answers[key];\n        }\n      });\n      console.log(report);\n      this.props.onAnswerSelected(report, this.props.questionId, event);\n      this.setState({\n        report: ''\n      });\n    } else {\n      this.setState({\n        report: report\n      });\n    }\n  }\n\n  handleCheckboxChange(changeEvent, e) {\n    console.log('ChangeEvent', changeEvent);\n    this.setState(prevState => ({\n      checkboxes: { ...prevState.checkboxes,\n        [changeEvent]: !prevState.checkboxes[changeEvent]\n      }\n    }));\n  }\n\n  createCheckBox(key) {\n    return /*#__PURE__*/React.createElement(Checkbox, {\n      label: key.content // warning using the same keys \n      ,\n      type: key.type,\n      isSelected: this.state.checkboxes[key],\n      onCheckboxChange: e => this.handleCheckboxChange(key.type, e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 7\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(CSSTransitionGroup, {\n      className: \"container\",\n      component: \"div\",\n      transitionName: \"fade\",\n      transitionEnterTimeout: 800,\n      transitionLeaveTimeout: 500,\n      transitionAppear: true,\n      transitionAppearTimeout: 500,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      key: this.props.questionId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"bold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 10\n      }\n    }, \"Part \", this.props.survey_part, \" of \", this.props.surveyTotal)), /*#__PURE__*/React.createElement(ProgressBar, {\n      counter: this.props.questionCount,\n      total: this.props.questionTotal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Question, {\n      content: this.props.question,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"answerOptions\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }\n    }, this.props.answerOptions.map(this.createCheckBox))), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-12 pad-20\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-save btn-primary pad-20\",\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }\n    }, \"Submit\"))));\n  }\n\n} // closing class \n\n\nCheckboxQuiz.propTypes = {\n  answer: PropTypes.string.isRequired,\n  answerOptions: PropTypes.array.isRequired,\n  question: PropTypes.string.isRequired,\n  questionId: PropTypes.number.isRequired,\n  questionCount: PropTypes.number.isRequired,\n  questionTotal: PropTypes.number.isRequired,\n  onAnswerSelected: PropTypes.func.isRequired,\n  survey_part: PropTypes.number.isRequired,\n  surveyTotal: PropTypes.number.isRequired\n};\nexport default CheckboxQuiz;","map":{"version":3,"sources":["/Users/vasilisaskvortsova/Documents/LEARNOISE-local/webap-learnoise-2/src/components/CheckboxQuiz/CheckboxQuiz.js"],"names":["React","PropTypes","CSSTransitionGroup","Question","Checkbox","ProgressBar","CheckboxQuiz","Component","constructor","props","options","answers","key","answerOptions","console","log","type","content","state","report","shouldBlockNavigation","checkboxes","handleSubmit","bind","createCheckBox","componentDidMount","_isMounted","document","body","style","background","setState","window","history","pushState","location","href","onbeforeunload","_handleGoBack","event","go","preventDefault","sumValues","obj","Object","values","reduce","a","b","count","keys","map","index","onAnswerSelected","questionId","handleCheckboxChange","changeEvent","e","prevState","render","survey_part","surveyTotal","questionCount","questionTotal","question","propTypes","answer","string","isRequired","array","number","func"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransitionGroup } from 'react-transition-group';\nimport Question from '../QuizQuestion/Question';\nimport Checkbox from '../Checkbox/Checkbox';\nimport ProgressBar from '../QuizQuestion/ProgressBar';\n \n\n\nclass CheckboxQuiz extends React.Component {\n\n  constructor(props){\n    super(props);\n  \n\n  var options = {}\n  var answers = {}\n\n// Object.keys(this.props.answerOptions).map(function(key, index) {\n//      // options[key] = false; // mybe to change to type\n//      options[key.type] = false; // mybe to change to type \n//    });\n \nfor (var key in this.props.answerOptions) {\n  console.log(key)\n  options[this.props.answerOptions[key].type] = false // this.props.answerOptions[key].type\n  answers[this.props.answerOptions[key].type] = this.props.answerOptions[key].content\n}\n\n\n this.state = {\n    report: '',\n    shouldBlockNavigation: false,\n    checkboxes: options,\n    answers: answers \n  }\n  \n  this.handleSubmit       = this.handleSubmit.bind(this);  \n  this.createCheckBox     = this.createCheckBox.bind(this); \n} // constructor\n\n\ncomponentDidMount() {\n  this._isMounted = true;\n  document.body.style.background= '#fff';   \n  this.setState({\n    report: '',\n    shouldBlockNavigation: false}\n    )\n  window.history.pushState(window.state, null, window.location.href)\n  window.onbeforeunload = null;\n  // window.addEventListener(\"keypress\", e => this._handleRefresh(e));\n\n}\n\n_handleGoBack(event){\n    window.history.go(1);\n  }\n\nhandleSubmit(event) {\n        \n        // console.log(event)\n        \n        event.preventDefault();\n\n        // Check if any of the boxes are checked -> combine the final report and send it to the parent Quiz Block component \n        // console.log(this.state.checkboxes)\n        const options = this.state.checkboxes\n        const answers = this.state.answers\n\n        const sumValues = obj => Object.values(obj).reduce((a, b) => a + b);\n        const count = sumValues(this.state.checkboxes);\n        console.log('Number of checked boxes:',count)\n        \n        // sub select only answer options that have been checked \n\n        if (count > 0){ // at least one box is checked\n\n        var report = {}\n          Object.keys(options).map(function(key, index) {\n          if (options[key]===true){\n            report[key] = answers[key]\n          }\n          });\n  \n        console.log(report)\n  \n          this.props.onAnswerSelected(report,this.props.questionId,event)\n          this.setState({\n          report: ''})\n        } \n\n        else {\n          this.setState({\n          report: report}\n          )\n        }\n      }\n\n\nhandleCheckboxChange(changeEvent,e) {\n  console.log('ChangeEvent',changeEvent)\n  \n  this.setState(prevState => ({\n      checkboxes: {\n        ...prevState.checkboxes,\n        [changeEvent]: !prevState.checkboxes[changeEvent],\n      }\n    }));\n}\n\n\ncreateCheckBox(key) {\n    return (\n      <Checkbox\n        label           ={key.content} // warning using the same keys \n        type            ={key.type}\n        isSelected      ={this.state.checkboxes[key]}\n        onCheckboxChange={(e)=>this.handleCheckboxChange(key.type,e)}\n      />\n    );\n  }\n\n\nrender() {\n        \n  return (\n    <CSSTransitionGroup\n      className=\"container\"\n      component=\"div\"\n      transitionName=\"fade\"\n      transitionEnterTimeout={800}\n      transitionLeaveTimeout={500}\n      transitionAppear\n      transitionAppearTimeout={500}\n    >\n      <div key={this.props.questionId}>\n      <p><span className='bold'>Part {this.props.survey_part} of {this.props.surveyTotal}</span></p>\n        <ProgressBar counter={this.props.questionCount} total={this.props.questionTotal}/>\n        <br></br>\n        <Question content={this.props.question}/>\n        <div className=\"answerOptions\">\n          {this.props.answerOptions.map(this.createCheckBox)}\n        </div>\n      \n      </div>\n      <p></p>\n      <div className=\"col-md-12 pad-20\">\n        <div>\n          <button type=\"button\" className=\"btn btn-save btn-primary pad-20\" onClick={this.handleSubmit}>\n            Submit\n          </button>\n          </div>\n      </div>\n\n    </CSSTransitionGroup>\n  );\n}\n\n} // closing class \n\n\nCheckboxQuiz.propTypes = {\n  answer: PropTypes.string.isRequired,\n  answerOptions: PropTypes.array.isRequired,\n  question: PropTypes.string.isRequired,\n  questionId: PropTypes.number.isRequired,\n  questionCount: PropTypes.number.isRequired,\n  questionTotal: PropTypes.number.isRequired,\n  onAnswerSelected: PropTypes.func.isRequired,\n  survey_part: PropTypes.number.isRequired,\n  surveyTotal: PropTypes.number.isRequired\n\n};\n\nexport default CheckboxQuiz;\n\n\n"]},"metadata":{},"sourceType":"module"}