{"ast":null,"code":"var _jsxFileName = \"/Users/vasilisaskvortsova/Documents/LEARNOISE-local/webap-learnoise-2/src/components/ReportNA/ReportNA.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { CSSTransitionGroup } from 'react-transition-group';\nimport Question from '../QuizQuestion/Question';\nimport ProgressBar from '../QuizQuestion/ProgressBar';\nimport AnswerOption from '../QuizQuestion/AnswerOption';\n\nclass ReportNA extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      report: '',\n      answer: '',\n      answercheck: false\n    }; // console.log(this.state) // initial states \n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChangeReport = this.handleChangeReport.bind(this);\n    this.renderAnswerOptions = this.renderAnswerOptions.bind(this);\n    this._handleRefresh = this._handleRefresh.bind(this);\n  }\n\n  componentDidMount() {\n    this._isMounted = true; // document.getElementById(\"create-course-form\").reset();\n\n    document.body.style.background = '#fff';\n    this.setState({\n      report: '',\n      answer: '',\n      answercheck: false,\n      shouldBlockNavigation: false\n    });\n    window.history.pushState(window.state, null, window.location.href);\n    window.onbeforeunload = null;\n    window.addEventListener(\"keypress\", e => this._handleRefresh(e));\n  }\n\n  _handleRefresh(e) {\n    if (e.key === 'Enter') {\n      console.log('enter e', e.srcElement); // console.log('value', e.target.value);\n\n      var test = this.state.report; // console.log('test',this.state.report)\n\n      if (test !== \"\" && test !== null && test > parseInt(this.props.constraint[0].min) && test < parseInt(this.props.constraint[1].max)) {\n        this.setState({\n          answercheck: true\n        });\n        console.log(this.state.answercheck); // Send answers to the parent component\n        // document.getElementById(\"create-course-form\").reset();\n\n        let prev_report = this.state.report;\n        this.setState({\n          report: ''\n        });\n        this.props.onAnswerSelected(this.state.report, this.props.questionId, e);\n      } else {\n        e.preventDefault();\n      }\n    }\n  }\n\n  handleChangeReport(event) {\n    var test = Number(event.target.value);\n    this.setState({\n      report: event.target.value,\n      answercheck: false\n    }); // console.log(Number(test))\n\n    if (test !== \"\" && test !== null && test > parseInt(this.props.constraint[0].min) && test < parseInt(this.props.constraint[1].max)) {\n      this.setState({\n        answercheck: true\n      }); // console.log(this.state.answer) \n    }\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.props.onAnswerSelected(this.state.report, this.props.questionId, event);\n  }\n\n  renderAnswerOptions(key) {\n    return /*#__PURE__*/React.createElement(AnswerOption, {\n      key: key.content,\n      answerContent: key.content,\n      answerType: key.type,\n      answer: this.props.answer,\n      questionId: this.props.questionId,\n      onAnswerSelected: this.props.onAnswerSelected,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 7\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(CSSTransitionGroup, {\n      className: \"container\",\n      component: \"div\",\n      transitionName: \"fade\",\n      transitionEnterTimeout: 800,\n      transitionLeaveTimeout: 500,\n      transitionAppear: true,\n      transitionAppearTimeout: 500,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      key: this.props.questionId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"bold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 10\n      }\n    }, \"Part \", this.props.survey_part, \" of \", this.props.surveyTotal)), /*#__PURE__*/React.createElement(ProgressBar, {\n      counter: this.props.questionCount,\n      total: this.props.questionTotal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Question, {\n      content: this.props.question,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6 no-padding\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      value: this.state.report,\n      onKeyDown: this._handleRefresh,\n      onChange: this.handleChangeReport,\n      name: \"report\",\n      id: \"report\",\n      className: \"form-control\",\n      placeholder: \"\",\n      type: \"number\",\n      pattern: \"[0-9]*\",\n      inputMode: \"numeric\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-12 pad-20\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-save btn-primary pad-20\",\n      disabled: !this.state.answercheck,\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }\n    }, \"Submit\"))), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"answerOptions\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }\n    }, this.props.answerOptions.map(this.renderAnswerOptions))));\n  }\n\n}\n\nReportNA.propTypes = {\n  answer: PropTypes.string.isRequired,\n  question: PropTypes.string.isRequired,\n  questionId: PropTypes.number.isRequired,\n  questionTotal: PropTypes.number.isRequired,\n  onAnswerSelected: PropTypes.func.isRequired,\n  constraint: PropTypes.array.isRequired,\n  participant_info: PropTypes.object.isRequired,\n  survey_part: PropTypes.number.isRequired,\n  surveyTotal: PropTypes.number.isRequired\n};\nexport default withRouter(ReportNA);","map":{"version":3,"sources":["/Users/vasilisaskvortsova/Documents/LEARNOISE-local/webap-learnoise-2/src/components/ReportNA/ReportNA.js"],"names":["React","PropTypes","withRouter","CSSTransitionGroup","Question","ProgressBar","AnswerOption","ReportNA","Component","constructor","props","state","report","answer","answercheck","handleSubmit","bind","handleChangeReport","renderAnswerOptions","_handleRefresh","componentDidMount","_isMounted","document","body","style","background","setState","shouldBlockNavigation","window","history","pushState","location","href","onbeforeunload","addEventListener","e","key","console","log","srcElement","test","parseInt","constraint","min","max","prev_report","onAnswerSelected","questionId","preventDefault","event","Number","target","value","content","type","render","survey_part","surveyTotal","questionCount","questionTotal","question","answerOptions","map","propTypes","string","isRequired","number","func","array","participant_info","object"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {withRouter} from 'react-router-dom';\nimport { CSSTransitionGroup } from 'react-transition-group';\nimport Question from '../QuizQuestion/Question';\nimport ProgressBar from '../QuizQuestion/ProgressBar';\nimport AnswerOption from '../QuizQuestion/AnswerOption';\n\n\nclass ReportNA extends React.Component {\n\n  constructor(props){\n    super(props);\n\n  this.state = {\n    report: '',\n    answer: '',\n    answercheck: false  \n\n  }\n  // console.log(this.state) // initial states \n\n  this.handleSubmit        = this.handleSubmit.bind(this);  \n  this.handleChangeReport  = this.handleChangeReport.bind(this);\n  this.renderAnswerOptions = this.renderAnswerOptions.bind(this);\n  this._handleRefresh      = this._handleRefresh.bind(this); \n \n}\n\n\ncomponentDidMount() {\n  this._isMounted = true;\n  // document.getElementById(\"create-course-form\").reset();\n  document.body.style.background= '#fff';   \n  this.setState({\n    report: '',\n    answer: '',\n    answercheck: false,\n    shouldBlockNavigation: false}\n    )\n  window.history.pushState(window.state, null, window.location.href);\n  window.onbeforeunload = null;\n  window.addEventListener(\"keypress\", e => this._handleRefresh(e));\n\n}\n\n_handleRefresh(e){\n  if (e.key==='Enter') {\n  console.log('enter e', e.srcElement);\n\n  // console.log('value', e.target.value);\n\n  var test = this.state.report\n  // console.log('test',this.state.report)\n    \n  if ((test!==\"\") && (test!==null) && (test>parseInt(this.props.constraint[0].min)) && (test<parseInt(this.props.constraint[1].max))) \n  {\n    this.setState({\n    answercheck: true}\n    );\n\n    console.log(this.state.answercheck)\n    // Send answers to the parent component\n    // document.getElementById(\"create-course-form\").reset();\n    let prev_report = this.state.report \n        this.setState({\n          report: ''}\n        )\n\n        this.props.onAnswerSelected(this.state.report,this.props.questionId,e) \n  }\n  else {\n    e.preventDefault()\n  }\n \n  }\n}\n\n  handleChangeReport(event) {\n\n  var test = Number(event.target.value)\n\n  this.setState({\n    report: event.target.value,\n    answercheck: false \n    }\n    );\n  \n  // console.log(Number(test))\n\n  if ((test!==\"\") && (test!==null) && (test>parseInt(this.props.constraint[0].min)) && (test<parseInt(this.props.constraint[1].max))) {\n    this.setState({\n    answercheck: true }\n    );\n    // console.log(this.state.answer) \n  }\n\n}\n\n  handleSubmit(event) {\n        event.preventDefault();\n        this.props.onAnswerSelected(this.state.report,this.props.questionId,event)\n        \n  }\n\n  renderAnswerOptions(key) {\n    return (\n      <AnswerOption\n        key={key.content}\n        answerContent={key.content}\n        answerType={key.type}\n        answer={this.props.answer}\n        questionId={this.props.questionId}\n        onAnswerSelected={this.props.onAnswerSelected}\n      />\n    );\n}\n\nrender() {\n  return (\n    <CSSTransitionGroup\n      className=\"container\"\n      component=\"div\"\n      transitionName=\"fade\"\n      transitionEnterTimeout={800}\n      transitionLeaveTimeout={500}\n      transitionAppear\n      transitionAppearTimeout={500}\n    >\n      <div key={this.props.questionId}>\n      <p><span className='bold'>Part {this.props.survey_part} of {this.props.surveyTotal}</span></p>\n        <ProgressBar counter={this.props.questionCount} total={this.props.questionTotal}/>\n        <br></br>\n        <Question content={this.props.question} />\n        <div className=\"col-md-6 no-padding\">\n        <input value={this.state.report} onKeyDown={this._handleRefresh} onChange={this.handleChangeReport} name=\"report\" id=\"report\" className=\"form-control\" placeholder=\"\" type=\"number\" pattern=\"[0-9]*\" inputMode=\"numeric\" required />\n        </div>\n        <p></p>\n        </div>\n      <p></p>\n      <div className=\"col-md-12 pad-20\">\n        <div>\n          <button type=\"submit\" className=\"btn btn-save btn-primary pad-20\" disabled={!this.state.answercheck} onClick={this.handleSubmit}>Submit\n            </button>\n          </div>\n      </div>\n      <p></p>\n      <div className=\"row\">\n        <ul className=\"answerOptions\">\n          {this.props.answerOptions.map(this.renderAnswerOptions)}\n        </ul>\n      </div>\n      \n    </CSSTransitionGroup>\n  );\n}\n}\n\nReportNA.propTypes = {\n  answer: PropTypes.string.isRequired,\n  question: PropTypes.string.isRequired,\n  questionId: PropTypes.number.isRequired,\n  questionTotal: PropTypes.number.isRequired,\n  onAnswerSelected: PropTypes.func.isRequired,\n  constraint: PropTypes.array.isRequired,\n  participant_info:PropTypes.object.isRequired,\n  survey_part: PropTypes.number.isRequired,\n  surveyTotal: PropTypes.number.isRequired\n};\n\n\nexport default withRouter(ReportNA);"]},"metadata":{},"sourceType":"module"}