{"ast":null,"code":"import _classCallCheck from \"/Users/vasilisaskvortsova/Documents/COVID-19/covid-webap/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/vasilisaskvortsova/Documents/COVID-19/covid-webap/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/vasilisaskvortsova/Documents/COVID-19/covid-webap/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/vasilisaskvortsova/Documents/COVID-19/covid-webap/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/vasilisaskvortsova/Documents/COVID-19/covid-webap/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/vasilisaskvortsova/Documents/COVID-19/covid-webap/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/vasilisaskvortsova/Documents/COVID-19/covid-webap/src/components/Consent/Consent.js\";\nimport React from 'react';\nimport { Button } from 'react-bootstrap';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport queryString from 'query-string';\nimport Checkbox from '../Checkbox/Checkbox';\nimport './Consent.css'; // import './bootstrap.min.css';\n// Fetch participant data onClick after veryfing that all the boxes are ticked \n\nvar checkboxes = [{\n  name: 'I have read the information above, and understand what the study involves',\n  key: 'checkBox1',\n  label: 'check-box-1'\n}, {\n  label: 'check-box-2',\n  key: 'checkBox2',\n  name: 'I understand that my anonymised personal data can be shared with others for future research, shared in public databases and in scientific reports.'\n}, {\n  label: 'check-box-3',\n  key: 'checkBox3',\n  name: 'I understand that I am free to withdraw from this study at any time without giving a reason and this will not affect my future medical care or legal rights.'\n}, {\n  label: 'check-box-4',\n  key: 'checkBox4',\n  name: 'I understand the potential benefits and risks of participating, the support available to me should I become distressed during the research, and who to contact if I wish to lodge a complaint.'\n}, {\n  label: 'check-box-5',\n  key: 'checkBox5',\n  name: 'I understand the inclusion and exclusion criteria in the Information Sheet and as explained to me by the researcher.  I confirm that I do not fall under the exclusion criteria.'\n}, {\n  label: 'check-box-6',\n  key: 'checkBox6',\n  name: 'I agree that the research project named above has been explained to me to my satisfaction and I agree to take part in this study.'\n}];\n\nvar Consent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Consent, _React$Component);\n\n  function Consent(props) {\n    var _this;\n\n    _classCallCheck(this, Consent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Consent).call(this, props));\n\n    _this.redirectToTarget = function () {\n      _this.props.history.push({\n        pathname: \"/Survey\",\n        state: {\n          participant_info: _this.state\n        }\n      });\n    };\n\n    _this.handleCheckboxChange = function (event) {\n      return _this.setState({\n        checked: event.target.checked\n      });\n    };\n\n    var prolific_id = _this.props.location.state.prolific_id;\n    var study_id = _this.props.location.state.study_id;\n    var longit_id = _this.props.location.state.longit_id;\n    _this.state = {\n      checked: false,\n      prolific_id: prolific_id,\n      study_id: study_id,\n      longit_id: longit_id,\n      checkedItems: new Map()\n    };\n    console.log(_this.state.checkedItems);\n\n    _this.redirectToTarget.bind(_assertThisInitialized(_this));\n\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Consent, [{\n    key: \"handleChange\",\n    value: function handleChange(e) {\n      var item = e.target.name;\n      var isChecked = e.target.checked;\n      console.log(this.state.checked);\n      console.log(this.state.checkedItems);\n      this.setState(function (prevState) {\n        return {\n          checkedItems: prevState.checkedItems.set(item, isChecked)\n        };\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"textbox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, checkboxes.map(function (item) {\n        return React.createElement(\"label\", {\n          key: item.key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }), item.name, React.createElement(Checkbox, {\n          name: item.name,\n          checked: _this2.state.checkedItems.get(item.name),\n          onChange: _this2.handleChange,\n          className: \"checkbox\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        }));\n      })));\n    }\n  }]);\n\n  return Consent;\n}(React.Component);\n\nConsent.contextTypes = {\n  router: PropTypes.object\n};\nexport default withRouter(Consent);","map":{"version":3,"sources":["/Users/vasilisaskvortsova/Documents/COVID-19/covid-webap/src/components/Consent/Consent.js"],"names":["React","Button","withRouter","PropTypes","queryString","Checkbox","checkboxes","name","key","label","Consent","props","redirectToTarget","history","push","pathname","state","participant_info","handleCheckboxChange","event","setState","checked","target","prolific_id","location","study_id","longit_id","checkedItems","Map","console","log","bind","handleChange","e","item","isChecked","prevState","set","map","get","Component","contextTypes","router","object"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Button } from 'react-bootstrap';\nimport {withRouter} from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport queryString from 'query-string';\n\nimport Checkbox from '../Checkbox/Checkbox';\n\nimport './Consent.css';\n// import './bootstrap.min.css';\n\n\n// Fetch participant data onClick after veryfing that all the boxes are ticked \nconst checkboxes = [\n  {\n    name: 'I have read the information above, and understand what the study involves',\n    key: 'checkBox1',\n    label: 'check-box-1',\n  },\n  {\n    label: 'check-box-2',\n    key: 'checkBox2',\n    name: 'I understand that my anonymised personal data can be shared with others for future research, shared in public databases and in scientific reports.',\n  },\n\n  {\n    label: 'check-box-3',\n    key: 'checkBox3',\n    name: 'I understand that I am free to withdraw from this study at any time without giving a reason and this will not affect my future medical care or legal rights.',\n  },\n  {\n    label: 'check-box-4',\n    key: 'checkBox4',\n    name: 'I understand the potential benefits and risks of participating, the support available to me should I become distressed during the research, and who to contact if I wish to lodge a complaint.',\n  },\n  {\n    label: 'check-box-5',\n    key: 'checkBox5',\n    name: 'I understand the inclusion and exclusion criteria in the Information Sheet and as explained to me by the researcher.  I confirm that I do not fall under the exclusion criteria.',\n},\n  {\n    label: 'check-box-6',\n    key: 'checkBox6',\n    name: 'I agree that the research project named above has been explained to me to my satisfaction and I agree to take part in this study.',\n  },\n];\n\n\n\nclass Consent extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const prolific_id = this.props.location.state.prolific_id\n    const study_id    = this.props.location.state.study_id\n    const longit_id   = this.props.location.state.longit_id\n    \n    \n      this.state = {\n      checked: false,\n      prolific_id: prolific_id, \n      study_id : study_id,\n      longit_id: longit_id,\n      checkedItems: new Map(),\n    }\n\n    console.log(this.state.checkedItems) \n  \n    this.redirectToTarget.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n\n  }\n\n  static contextTypes = {\n    router: PropTypes.object\n  }\n    \n  \n  handleChange(e) {\n    const item = e.target.name;\n    const isChecked = e.target.checked;\n    console.log(this.state.checked) \n    console.log(this.state.checkedItems) \n\n    this.setState(prevState => ({ checkedItems: prevState.checkedItems.set(item, isChecked) }));\n\n  }\n\n  redirectToTarget = () => {\n\n  this.props.history.push({\n    pathname: `/Survey`, \n    state: {participant_info: this.state} \n  })\n}\n    \n\n  handleCheckboxChange = event =>\n    this.setState({checked: event.target.checked})\n\n    \nrender() {\n  return (\n      <div className='textbox'>\n       <React.Fragment>\n        {\n          checkboxes.map(item => (\n            <label key={item.key}>\n            <p></p>\n              {item.name}\n              <Checkbox name={item.name} checked={this.state.checkedItems.get(item.name)} onChange={this.handleChange} className='checkbox'/>\n            </label>\n          ))\n        }\n      </React.Fragment>\n      </div>\n    );\n  }\n}\n \nexport default withRouter(Consent);\n"]},"metadata":{},"sourceType":"module"}