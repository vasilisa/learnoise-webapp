{"ast":null,"code":"var _jsxFileName = \"/Users/vasilisaskvortsova/Documents/COVID-19/covid-webap/src/components/Quiz/Quiz.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransitionGroup } from 'react-transition-group';\nimport Question from '../QuizQuestion/Question';\nimport QuestionCount from '../QuizQuestion/QuestionCount';\nimport AnswerOption from '../QuizQuestion/AnswerOption';\n\nfunction Quiz(props) {\n  console.log(props.image);\n\n  function renderAnswerOptions(key) {\n    return React.createElement(AnswerOption, {\n      key: key.content,\n      answerContent: key.content,\n      answerType: key.type,\n      answer: props.answer,\n      questionId: props.questionId,\n      onAnswerSelected: props.onAnswerSelected,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    });\n  }\n\n  if (props.image != null) {\n    return React.createElement(CSSTransitionGroup, {\n      className: \"container\",\n      component: \"div\",\n      transitionName: \"fade\",\n      transitionEnterTimeout: 800,\n      transitionLeaveTimeout: 500,\n      transitionAppear: true,\n      transitionAppearTimeout: 500,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      key: props.questionCount,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(QuestionCount, {\n      counter: props.questionCount,\n      total: props.questionTotal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), React.createElement(Question, {\n      content: props.question,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"symbolframe\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"quizImage\",\n      src: props.image,\n      alt: \"quizImage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    })), React.createElement(\"ul\", {\n      className: \"answerOptions\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, props.answerOptions.map(renderAnswerOptions))));\n  } else {\n    return React.createElement(CSSTransitionGroup, {\n      className: \"container\",\n      component: \"div\",\n      transitionName: \"fade\",\n      transitionEnterTimeout: 800,\n      transitionLeaveTimeout: 500,\n      transitionAppear: true,\n      transitionAppearTimeout: 500,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      key: props.questionCount,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(QuestionCount, {\n      counter: props.questionCount,\n      total: props.questionTotal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(Question, {\n      content: props.question,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(\"ul\", {\n      className: \"answerOptions\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, props.answerOptions.map(renderAnswerOptions))));\n  }\n}\n\nQuiz.propTypes = {\n  answer: PropTypes.string.isRequired,\n  answerOptions: PropTypes.array.isRequired,\n  question: PropTypes.string.isRequired,\n  questionId: PropTypes.number.isRequired,\n  questionCount: PropTypes.number.isRequired,\n  questionTotal: PropTypes.number.isRequired,\n  onAnswerSelected: PropTypes.func.isRequired\n};\nexport default Quiz;","map":{"version":3,"sources":["/Users/vasilisaskvortsova/Documents/COVID-19/covid-webap/src/components/Quiz/Quiz.js"],"names":["React","PropTypes","CSSTransitionGroup","Question","QuestionCount","AnswerOption","Quiz","props","console","log","image","renderAnswerOptions","key","content","type","answer","questionId","onAnswerSelected","questionCount","questionTotal","question","answerOptions","map","propTypes","string","isRequired","array","number","func"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransitionGroup } from 'react-transition-group';\nimport Question from '../QuizQuestion/Question';\nimport QuestionCount from '../QuizQuestion/QuestionCount';\nimport AnswerOption from '../QuizQuestion/AnswerOption';\n\nfunction Quiz(props) {\n\n  console.log(props.image) \n  \n  function renderAnswerOptions(key) {\n    return (\n      <AnswerOption\n        key             ={key.content}\n        answerContent   ={key.content}\n        answerType      ={key.type}\n        answer          ={props.answer}\n        questionId      ={props.questionId}\n        onAnswerSelected={props.onAnswerSelected}\n      />\n    );\n  }\n\n  if (props.image!=null){\n\n  return (\n      <CSSTransitionGroup\n      className=\"container\"\n      component=\"div\"\n      transitionName=\"fade\"\n      transitionEnterTimeout={800}\n      transitionLeaveTimeout={500}\n      transitionAppear\n      transitionAppearTimeout={500}\n      >\n      <div key={props.questionCount}>\n        <QuestionCount counter={props.questionCount} total={props.questionTotal} />\n        <Question content={props.question} />\n        \n        <div className=\"symbolframe\">    \n          <img className=\"quizImage\" src={props.image} alt='quizImage'/> \n        </div>\n      \n        <ul className=\"answerOptions\">\n          {props.answerOptions.map(renderAnswerOptions)}\n        </ul>\n      </div>\n    </CSSTransitionGroup>);\n  }\n\n  else {\n\n    return(\n      \n      <CSSTransitionGroup\n      className=\"container\"\n      component=\"div\"\n      transitionName=\"fade\"\n      transitionEnterTimeout={800}\n      transitionLeaveTimeout={500}\n      transitionAppear\n      transitionAppearTimeout={500}\n      >\n      <div key={props.questionCount}>\n        <QuestionCount counter={props.questionCount} total={props.questionTotal} />\n        <Question content={props.question} />\n        <ul className=\"answerOptions\">\n          {props.answerOptions.map(renderAnswerOptions)}\n        </ul>\n      </div>\n    </CSSTransitionGroup>); \n    } \n}\n\nQuiz.propTypes = {\n  answer: PropTypes.string.isRequired,\n  answerOptions: PropTypes.array.isRequired,\n  question: PropTypes.string.isRequired,\n  questionId: PropTypes.number.isRequired,\n  questionCount: PropTypes.number.isRequired,\n  questionTotal: PropTypes.number.isRequired,\n  onAnswerSelected: PropTypes.func.isRequired,\n};\n\nexport default Quiz;\n"]},"metadata":{},"sourceType":"module"}