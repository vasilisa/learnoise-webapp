{"ast":null,"code":"var _jsxFileName = \"/Users/vasilisaskvortsova/Documents/COVID-19/covid-webap/src/components/Quiz/Quiz.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransitionGroup } from 'react-transition-group';\nimport Question from '../QuizQuestion/Question';\nimport QuestionCount from '../QuizQuestion/QuestionCount';\nimport AnswerOption from '../QuizQuestion/AnswerOption';\n\nfunction Quiz(props) {\n  console.log(props.image);\n  console.log(props.image_a);\n\n  function renderAnswerOptions(key) {\n    return React.createElement(AnswerOption, {\n      key: key.content,\n      answerContent: key.content,\n      answerType: key.type,\n      answer: props.answer,\n      questionId: props.questionId,\n      onAnswerSelected: props.onAnswerSelected,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    });\n  }\n\n  if (props.image != null) {\n    if (props.image_a != null) {\n      // both question and answer images are available \n      return React.createElement(CSSTransitionGroup, {\n        className: \"container\",\n        component: \"div\",\n        transitionName: \"fade\",\n        transitionEnterTimeout: 800,\n        transitionLeaveTimeout: 500,\n        transitionAppear: true,\n        transitionAppearTimeout: 500,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        key: props.questionCount,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(QuestionCount, {\n        counter: props.questionCount,\n        total: props.questionTotal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }), React.createElement(Question, {\n        content: props.question,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }), React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"symbolframe\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"quizImage\",\n        src: props.image,\n        alt: \"quizImage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"symbolframe\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"quizImage\",\n        src: props.image_a,\n        alt: \"quizImage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }))), React.createElement(\"ul\", {\n        className: \"answerOptions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, props.answerOptions.map(renderAnswerOptions))));\n    } else {\n      return React.createElement(CSSTransitionGroup, {\n        className: \"container\",\n        component: \"div\",\n        transitionName: \"fade\",\n        transitionEnterTimeout: 800,\n        transitionLeaveTimeout: 500,\n        transitionAppear: true,\n        transitionAppearTimeout: 500,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        key: props.questionCount,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(QuestionCount, {\n        counter: props.questionCount,\n        total: props.questionTotal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }), React.createElement(Question, {\n        content: props.question,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"symbolframe\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"quizImage\",\n        src: props.image,\n        alt: \"quizImage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }))), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }), React.createElement(\"ul\", {\n        className: \"answerOptions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, props.answerOptions.map(renderAnswerOptions))));\n    }\n  } else if (props.image === null) {\n    if (props.image_a != null) {\n      return React.createElement(CSSTransitionGroup, {\n        className: \"container\",\n        component: \"div\",\n        transitionName: \"fade\",\n        transitionEnterTimeout: 800,\n        transitionLeaveTimeout: 500,\n        transitionAppear: true,\n        transitionAppearTimeout: 500,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        key: props.questionCount,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(QuestionCount, {\n        counter: props.questionCount,\n        total: props.questionTotal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }), React.createElement(Question, {\n        content: props.question,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }), React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"symbolframe\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"quizImage\",\n        src: props.image_a,\n        alt: \"quizImage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }))), React.createElement(\"ul\", {\n        className: \"answerOptions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, props.answerOptions.map(renderAnswerOptions))));\n    } else {\n      return React.createElement(CSSTransitionGroup, {\n        className: \"container\",\n        component: \"div\",\n        transitionName: \"fade\",\n        transitionEnterTimeout: 800,\n        transitionLeaveTimeout: 500,\n        transitionAppear: true,\n        transitionAppearTimeout: 500,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        key: props.questionCount,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(QuestionCount, {\n        counter: props.questionCount,\n        total: props.questionTotal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }), React.createElement(Question, {\n        content: props.question,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }), React.createElement(\"ul\", {\n        className: \"answerOptions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, props.answerOptions.map(renderAnswerOptions))));\n    }\n  }\n}\n\nQuiz.propTypes = {\n  answer: PropTypes.string.isRequired,\n  answerOptions: PropTypes.array.isRequired,\n  question: PropTypes.string.isRequired,\n  questionId: PropTypes.number.isRequired,\n  questionCount: PropTypes.number.isRequired,\n  questionTotal: PropTypes.number.isRequired,\n  onAnswerSelected: PropTypes.func.isRequired\n};\nexport default Quiz;","map":{"version":3,"sources":["/Users/vasilisaskvortsova/Documents/COVID-19/covid-webap/src/components/Quiz/Quiz.js"],"names":["React","PropTypes","CSSTransitionGroup","Question","QuestionCount","AnswerOption","Quiz","props","console","log","image","image_a","renderAnswerOptions","key","content","type","answer","questionId","onAnswerSelected","questionCount","questionTotal","question","answerOptions","map","propTypes","string","isRequired","array","number","func"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransitionGroup } from 'react-transition-group';\nimport Question from '../QuizQuestion/Question';\nimport QuestionCount from '../QuizQuestion/QuestionCount';\nimport AnswerOption from '../QuizQuestion/AnswerOption';\n\nfunction Quiz(props) {\n\n  console.log(props.image) \n  console.log(props.image_a) \n  \n  \n  function renderAnswerOptions(key) {\n    return (\n      <AnswerOption\n        key             ={key.content}\n        answerContent   ={key.content}\n        answerType      ={key.type}\n        answer          ={props.answer}\n        questionId      ={props.questionId}\n        onAnswerSelected={props.onAnswerSelected}\n      />\n    );\n  }\n\n  if (props.image!=null){ \n\n    if (props.image_a!=null) { // both question and answer images are available \n\n      return (\n      <CSSTransitionGroup\n      className=\"container\"\n      component=\"div\"\n      transitionName=\"fade\"\n      transitionEnterTimeout={800}\n      transitionLeaveTimeout={500}\n      transitionAppear\n      transitionAppearTimeout={500}\n      >\n      <div key={props.questionCount}>\n        <QuestionCount counter={props.questionCount} total={props.questionTotal} />\n        <Question content={props.question} />\n        \n        <center>\n        <div className=\"symbolframe\">    \n          <img className=\"quizImage\" src={props.image} alt='quizImage'/> \n        </div>\n        <p></p>\n        <div className=\"symbolframe\">    \n          <img className=\"quizImage\" src={props.image_a} alt='quizImage'/> \n        </div>\n        </center>\n      \n        <ul className=\"answerOptions\">\n          {props.answerOptions.map(renderAnswerOptions)}\n        </ul>\n      </div>\n    </CSSTransitionGroup>);\n}\n\n  else {\n     return (\n      <CSSTransitionGroup\n      className=\"container\"\n      component=\"div\"\n      transitionName=\"fade\"\n      transitionEnterTimeout={800}\n      transitionLeaveTimeout={500}\n      transitionAppear\n      transitionAppearTimeout={500}\n      >\n      <div key={props.questionCount}>\n        <QuestionCount counter={props.questionCount} total={props.questionTotal} />\n        <Question content={props.question} />\n        \n        <center>\n        <div className=\"symbolframe\">    \n          <img className=\"quizImage\" src={props.image} alt='quizImage'/> \n        </div>\n        </center>\n        <p></p>\n        <ul className=\"answerOptions\">\n          {props.answerOptions.map(renderAnswerOptions)}\n        </ul>\n      </div>\n    </CSSTransitionGroup>);\n  } \n}\n\nelse if (props.image===null) {\n\n  if (props.image_a!=null) {\n\n      return (\n      <CSSTransitionGroup\n      className=\"container\"\n      component=\"div\"\n      transitionName=\"fade\"\n      transitionEnterTimeout={800}\n      transitionLeaveTimeout={500}\n      transitionAppear\n      transitionAppearTimeout={500}\n      >\n      <div key={props.questionCount}>\n        <QuestionCount counter={props.questionCount} total={props.questionTotal} />\n        <Question content={props.question} />\n        \n        <center>\n        <div className=\"symbolframe\">    \n          <img className=\"quizImage\" src={props.image_a} alt='quizImage'/> \n        </div>\n        </center>\n      \n        <ul className=\"answerOptions\">\n          {props.answerOptions.map(renderAnswerOptions)}\n        </ul>\n      </div>\n    </CSSTransitionGroup>);\n  }\n  else {\n\n     return (\n      <CSSTransitionGroup\n      className=\"container\"\n      component=\"div\"\n      transitionName=\"fade\"\n      transitionEnterTimeout={800}\n      transitionLeaveTimeout={500}\n      transitionAppear\n      transitionAppearTimeout={500}\n      >\n      <div key={props.questionCount}>\n        <QuestionCount counter={props.questionCount} total={props.questionTotal} />\n        <Question content={props.question} />\n        <ul className=\"answerOptions\">\n          {props.answerOptions.map(renderAnswerOptions)}\n        </ul>\n      </div>\n    </CSSTransitionGroup>);\n\n  }\n}\n\n}\n\nQuiz.propTypes = {\n  answer: PropTypes.string.isRequired,\n  answerOptions: PropTypes.array.isRequired,\n  question: PropTypes.string.isRequired,\n  questionId: PropTypes.number.isRequired,\n  questionCount: PropTypes.number.isRequired,\n  questionTotal: PropTypes.number.isRequired,\n  onAnswerSelected: PropTypes.func.isRequired,\n};\n\nexport default Quiz;\n"]},"metadata":{},"sourceType":"module"}