{"ast":null,"code":"var _jsxFileName = \"/Users/vasilisaskvortsova/Documents/LEARNOISE-local/webap-learnoise-2/src/components/Quiz/Quiz.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransitionGroup } from 'react-transition-group';\nimport Question from '../QuizQuestion/Question';\nimport AnswerOption from '../QuizQuestion/AnswerOption';\nimport ProgressBar from '../QuizQuestion/ProgressBar';\n\nfunction Quiz(props) {\n  // console.log(props.image) \n  // console.log(props.image_a) \n  function renderAnswerOptions(key) {\n    return /*#__PURE__*/React.createElement(AnswerOption, {\n      key: key.content,\n      answerContent: key.content,\n      answerType: key.type,\n      answer: props.answer,\n      questionId: props.questionId,\n      onAnswerSelected: props.onAnswerSelected,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 7\n      }\n    });\n  }\n\n  if (props.image != null) {\n    if (props.image_a != null) {\n      // both question and answer images are available \n      return /*#__PURE__*/React.createElement(CSSTransitionGroup, {\n        className: \"container\",\n        component: \"div\",\n        transitionName: \"fade\",\n        transitionEnterTimeout: 800,\n        transitionLeaveTimeout: 500,\n        transitionAppear: true,\n        transitionAppearTimeout: 500,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        key: props.questionCount,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"center\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"bold\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 10\n        }\n      }, \"Part \", props.survey_part, \" of \", props.surveyTotal)), /*#__PURE__*/React.createElement(ProgressBar, {\n        counter: props.questionCount,\n        total: props.questionTotal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Question, {\n        content: props.question,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"symbolframe\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"quizImage\",\n        src: props.image,\n        alt: \"quizImage\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"symbolframe\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"quizImage\",\n        src: props.image_a,\n        alt: \"quizImage\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }\n      }))), /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"answerOptions\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }\n      }, props.answerOptions.map(renderAnswerOptions))));\n    } else {\n      return /*#__PURE__*/React.createElement(CSSTransitionGroup, {\n        className: \"container\",\n        component: \"div\",\n        transitionName: \"fade\",\n        transitionEnterTimeout: 800,\n        transitionLeaveTimeout: 500,\n        transitionAppear: true,\n        transitionAppearTimeout: 500,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        key: props.questionCount,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"center\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"bold\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 12\n        }\n      }, \"Part \", props.survey_part, \" of \", props.surveyTotal)), /*#__PURE__*/React.createElement(ProgressBar, {\n        counter: props.questionCount,\n        total: props.questionTotal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Question, {\n        content: props.question,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"symbolframe\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"quizImage\",\n        src: props.image,\n        alt: \"quizImage\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"answerOptions\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 9\n        }\n      }, props.answerOptions.map(renderAnswerOptions)))));\n    }\n  } else if (props.image === null) {\n    if (props.image_a != null) {\n      return /*#__PURE__*/React.createElement(CSSTransitionGroup, {\n        className: \"container\",\n        component: \"div\",\n        transitionName: \"fade\",\n        transitionEnterTimeout: 800,\n        transitionLeaveTimeout: 500,\n        transitionAppear: true,\n        transitionAppearTimeout: 500,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        key: props.questionCount,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"center\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"bold\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 12\n        }\n      }, \"Part \", props.survey_part, \" of \", props.surveyTotal)), /*#__PURE__*/React.createElement(ProgressBar, {\n        counter: props.questionCount,\n        total: props.questionTotal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Question, {\n        content: props.question,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"symbolframe\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"quizImage\",\n        src: props.image_a,\n        alt: \"quizImage\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }\n      }))), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"answerOptions\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 9\n        }\n      }, props.answerOptions.map(renderAnswerOptions))));\n    } else {\n      return /*#__PURE__*/React.createElement(CSSTransitionGroup, {\n        className: \"container\",\n        component: \"div\",\n        transitionName: \"fade\",\n        transitionEnterTimeout: 800,\n        transitionLeaveTimeout: 500,\n        transitionAppear: true,\n        transitionAppearTimeout: 500,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        key: props.questionCount,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"center\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"bold\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 10\n        }\n      }, \"Part \", props.survey_part, \" of \", props.surveyTotal)), /*#__PURE__*/React.createElement(ProgressBar, {\n        counter: props.questionCount,\n        total: props.questionTotal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Question, {\n        content: props.question,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"answerOptions\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 9\n        }\n      }, props.answerOptions.map(renderAnswerOptions)))));\n    }\n  }\n}\n\nQuiz.propTypes = {\n  answer: PropTypes.string.isRequired,\n  answerOptions: PropTypes.array.isRequired,\n  question: PropTypes.string.isRequired,\n  questionId: PropTypes.number.isRequired,\n  questionCount: PropTypes.number.isRequired,\n  questionTotal: PropTypes.number.isRequired,\n  onAnswerSelected: PropTypes.func.isRequired,\n  survey_part: PropTypes.number.isRequired,\n  surveyTotal: PropTypes.number.isRequired\n};\nexport default Quiz;","map":{"version":3,"sources":["/Users/vasilisaskvortsova/Documents/LEARNOISE-local/webap-learnoise-2/src/components/Quiz/Quiz.js"],"names":["React","PropTypes","CSSTransitionGroup","Question","AnswerOption","ProgressBar","Quiz","props","renderAnswerOptions","key","content","type","answer","questionId","onAnswerSelected","image","image_a","questionCount","survey_part","surveyTotal","questionTotal","question","answerOptions","map","propTypes","string","isRequired","array","number","func"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransitionGroup } from 'react-transition-group';\nimport Question from '../QuizQuestion/Question';\nimport AnswerOption from '../QuizQuestion/AnswerOption';\nimport ProgressBar from '../QuizQuestion/ProgressBar';\n\n\nfunction Quiz(props) {\n\n  // console.log(props.image) \n  // console.log(props.image_a) \n  \n  \n  function renderAnswerOptions(key) {\n    return (\n      <AnswerOption\n        key             ={key.content}\n        answerContent   ={key.content}\n        answerType      ={key.type}\n        answer          ={props.answer}\n        questionId      ={props.questionId}\n        onAnswerSelected={props.onAnswerSelected}\n      />\n    );\n  }\n\n  if (props.image!=null){ \n\n    if (props.image_a!=null) { // both question and answer images are available \n\n      return (\n      <CSSTransitionGroup\n      className=\"container\"\n      component=\"div\"\n      transitionName=\"fade\"\n      transitionEnterTimeout={800}\n      transitionLeaveTimeout={500}\n      transitionAppear\n      transitionAppearTimeout={500}\n      >\n      <div key={props.questionCount}>\n      <center>\n      <p><span className='bold'>Part {props.survey_part} of {props.surveyTotal}</span></p>\n        <ProgressBar counter={props.questionCount} total={props.questionTotal}/>\n        <br></br>\n        <Question content={props.question} />\n        <div className=\"symbolframe\">    \n          <img className=\"quizImage\" src={props.image} alt='quizImage'/> \n        </div>\n        <p></p>\n        <div className=\"symbolframe\">    \n          <img className=\"quizImage\" src={props.image_a} alt='quizImage'/> \n        </div>\n        </center>\n      \n        <ul className=\"answerOptions\">\n          {props.answerOptions.map(renderAnswerOptions)}\n        </ul>\n      </div>\n    </CSSTransitionGroup>);\n}\n\n  else {\n     return (\n      <CSSTransitionGroup\n      className=\"container\"\n      component=\"div\"\n      transitionName=\"fade\"\n      transitionEnterTimeout={800}\n      transitionLeaveTimeout={500}\n      transitionAppear\n      transitionAppearTimeout={500}\n      >\n      <div key={props.questionCount}>\n        <center>\n        <p><span className='bold'>Part {props.survey_part} of {props.surveyTotal}</span></p>\n        <ProgressBar counter={props.questionCount} total={props.questionTotal}/>\n        <br></br>\n        <Question content={props.question} />\n        <div className=\"symbolframe\">    \n          <img className=\"quizImage\" src={props.image} alt='quizImage'/> \n        </div>\n        <p></p>\n        <ul className=\"answerOptions\">\n          {props.answerOptions.map(renderAnswerOptions)}\n        </ul>\n        </center>\n      </div>\n    </CSSTransitionGroup>);\n  } \n}\n\nelse if (props.image===null) {\n\n  if (props.image_a!=null) {\n\n      return (\n      <CSSTransitionGroup\n      className=\"container\"\n      component=\"div\"\n      transitionName=\"fade\"\n      transitionEnterTimeout={800}\n      transitionLeaveTimeout={500}\n      transitionAppear\n      transitionAppearTimeout={500}\n      >\n      <div key={props.questionCount}>\n        <center>\n        <p><span className='bold'>Part {props.survey_part} of {props.surveyTotal}</span></p>\n        <ProgressBar counter={props.questionCount} total={props.questionTotal}/>\n        <br></br>\n        <Question content={props.question} />\n        <div className=\"symbolframe\">    \n          <img className=\"quizImage\" src={props.image_a} alt='quizImage'/> \n        </div>\n        </center>\n        <p></p>\n        <ul className=\"answerOptions\">\n          {props.answerOptions.map(renderAnswerOptions)}\n        </ul>\n      </div>\n    </CSSTransitionGroup>);\n  }\n  else {\n\n     return (\n      <CSSTransitionGroup\n      className=\"container\"\n      component=\"div\"\n      transitionName=\"fade\"\n      transitionEnterTimeout={800}\n      transitionLeaveTimeout={500}\n      transitionAppear\n      transitionAppearTimeout={500}\n      >\n      <div key={props.questionCount}>\n      <center>\n      <p><span className='bold'>Part {props.survey_part} of {props.surveyTotal}</span></p>\n        <ProgressBar counter={props.questionCount} total={props.questionTotal}/>\n        <br></br>\n        <Question content={props.question}/>\n        <ul className=\"answerOptions\">\n          {props.answerOptions.map(renderAnswerOptions)}\n        </ul>\n        </center>\n      </div>\n    </CSSTransitionGroup>);\n\n  }\n}\n\n}\n\nQuiz.propTypes = {\n  answer: PropTypes.string.isRequired,\n  answerOptions: PropTypes.array.isRequired,\n  question: PropTypes.string.isRequired,\n  questionId: PropTypes.number.isRequired,\n  questionCount: PropTypes.number.isRequired,\n  questionTotal: PropTypes.number.isRequired,\n  onAnswerSelected: PropTypes.func.isRequired,\n  survey_part: PropTypes.number.isRequired,\n  surveyTotal: PropTypes.number.isRequired\n};\n\nexport default Quiz;\n"]},"metadata":{},"sourceType":"module"}