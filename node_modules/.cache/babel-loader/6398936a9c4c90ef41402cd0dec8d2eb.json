{"ast":null,"code":"import _defineProperty from \"/Users/vasilisaskvortsova/Documents/COVID-19/covid-webap/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/vasilisaskvortsova/Documents/COVID-19/covid-webap/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"/Users/vasilisaskvortsova/Documents/COVID-19/covid-webap/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/vasilisaskvortsova/Documents/COVID-19/covid-webap/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/vasilisaskvortsova/Documents/COVID-19/covid-webap/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/vasilisaskvortsova/Documents/COVID-19/covid-webap/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/vasilisaskvortsova/Documents/COVID-19/covid-webap/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/vasilisaskvortsova/Documents/COVID-19/covid-webap/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/vasilisaskvortsova/Documents/COVID-19/covid-webap/src/components/Consent/Consent.js\";\nimport React, { Component } from \"react\";\nimport { Button } from 'react-bootstrap';\nimport { withRouter } from 'react-router-dom';\nimport Checkbox from '../Checkbox/Checkbox';\nimport { CSSTransitionGroup } from 'react-transition-group';\nvar consents = [{\n  content: 'I have read the information above, and understand what the study involves',\n  type: 'checkBox1'\n}, {\n  type: 'checkBox2',\n  content: 'I understand that my anonymised personal data can be shared with others for future research, shared in public databases and in scientific reports.'\n}, {\n  type: 'checkBox3',\n  content: 'I understand that I am free to withdraw from this study at any time without giving a reason and this will not affect my future medical care or legal rights.'\n}, {\n  type: 'checkBox4',\n  content: 'I understand the potential benefits and risks of participating, the support available to me should I become distressed during the research, and who to contact if I wish to lodge a complaint.'\n}, {\n  type: 'checkBox5',\n  content: 'I understand the inclusion and exclusion criteria in the Information Sheet and as explained to me by the researcher.  I confirm that I do not fall under the exclusion criteria.'\n}, {\n  type: 'checkBox6',\n  content: 'I agree that the research project named above has been explained to me to my satisfaction and I agree to take part in this study.'\n}];\nconsole.log(consents);\n\nvar Consent =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Consent, _Component);\n\n  function Consent(props) {\n    var _this;\n\n    _classCallCheck(this, Consent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Consent).call(this, props));\n    var participant_info = _this.props.location.state.participant_info;\n    var options = {};\n    var answers = {};\n\n    for (var key in consents) {\n      options[consents[key].type] = false;\n    } // console.log(options)\n    // console.log(answers)\n\n\n    _this.state = {\n      checkboxes: options,\n      participant_info: participant_info\n    };\n    console.log(_this.state.checkboxes);\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_this));\n    _this.createCheckBox = _this.createCheckBox.bind(_assertThisInitialized(_this));\n    _this.redirectToInfo = _this.redirectToInfo.bind(_assertThisInitialized(_this));\n    _this.selectAllCheckboxes = _this.selectAllCheckboxes.bind(_assertThisInitialized(_this));\n    _this.selectAll = _this.selectAll.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Consent, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this._isMounted = true;\n      document.body.style.background = '#fff';\n      window.history.pushState(window.state, null, window.location.href);\n      window.addEventListener('popstate', function (e) {\n        return _this2._handleGoBack(e);\n      });\n    }\n  }, {\n    key: \"_handleGoBack\",\n    value: function _handleGoBack(event) {\n      window.history.go(1);\n    }\n  }, {\n    key: \"handleCheckboxChange\",\n    value: function handleCheckboxChange(changeEvent, e) {\n      // console.log('ChangeEvent',changeEvent)\n      this.setState(function (prevState) {\n        return {\n          checkboxes: _objectSpread({}, prevState.checkboxes, _defineProperty({}, changeEvent, !prevState.checkboxes[changeEvent]))\n        };\n      });\n    }\n  }, {\n    key: \"redirectToInfo\",\n    value: function redirectToInfo() {\n      this.props.history.push({\n        pathname: \"/\"\n      });\n    }\n  }, {\n    key: \"selectAllCheckboxes\",\n    value: function selectAllCheckboxes(isSelected) {\n      var _this3 = this;\n\n      console.log(this.state.checkboxes);\n      Object.keys(this.state.checkboxes).forEach(function (checkbox) {\n        // BONUS: Can you explain why we pass updater function to setState instead of an object?\n        _this3.setState(function (prevState) {\n          return {\n            checkboxes: _objectSpread({}, prevState.checkboxes, _defineProperty({}, checkbox, isSelected))\n          };\n        });\n      });\n    }\n  }, {\n    key: \"selectAll\",\n    value: function selectAll() {\n      console.log(this.state.checkboxes);\n      this.selectAllCheckboxes(true);\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      // console.log(event)\n      event.preventDefault(); // Check if all of the boxes are checked -> redirect to Survey, otherwise POP--UP window: do you want to leave the study?  \n      // console.log(this.state.checkboxes)\n\n      var options = this.state.checkboxes; // const answers   = this.state.answers\n\n      var box_total = Object.keys(options).length;\n\n      var sumValues = function sumValues(obj) {\n        return Object.values(obj).reduce(function (a, b) {\n          return a + b;\n        });\n      };\n\n      var count = sumValues(this.state.checkboxes); // console.log('Number of checked boxes:',count)\n      // sub select only answer options that have been checked \n\n      if (count < box_total) {\n        // at least one box is checked\n        var r = window.confirm(\"You cannot proceed to the study unless you give your full consent. Please, confirm if you decide to leave the study now\");\n\n        if (r == true) {\n          window.location.href = \"https://app.prolific.co\";\n        }\n      } else if (count === box_total) {\n        // redirect to survey here - maybe with the timeout \n        this.props.history.push({\n          pathname: \"/Survey\",\n          state: {\n            participant_info: this.props.location.state.participant_info,\n            newblock_frame: true\n          } // to be changed\n\n        });\n      } else {}\n    }\n  }, {\n    key: \"createCheckBox\",\n    value: function createCheckBox(key) {\n      var _this4 = this;\n\n      return React.createElement(Checkbox, {\n        label: key.content,\n        type: key.type,\n        isSelected: this.state.checkboxes[key],\n        onCheckboxChange: function onCheckboxChange(e) {\n          return _this4.handleCheckboxChange(key.type, e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      });\n    } // {consents.map(this.createCheckBox)}\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(CSSTransitionGroup, {\n        className: \"container\",\n        component: \"div\",\n        transitionName: \"fade\",\n        transitionEnterTimeout: 800,\n        transitionLeaveTimeout: 500,\n        transitionAppear: true,\n        transitionAppearTimeout: 500,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"IntroConsentText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, this.createCheckBoxes()), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"col-md-12 pad-20\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-save btn-primary pad-20\",\n        onClick: this.redirectToInfo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, \"Previous\"))), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }), React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-12 pad-20\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-save btn-primary pad-20\",\n        onClick: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, \"SUBMIT\")), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-save btn-primary pad-20\",\n        onClick: this.selectAll,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, \"SELECT ALL - TEMPO\")))));\n    }\n  }]);\n\n  return Consent;\n}(Component);\n/*\n<form onSubmit={this.handleFormSubmit}>\n              {this.createCheckboxes()}\n            </form>\n\n\n*/\n\n\nexport default withRouter(Consent);","map":{"version":3,"sources":["/Users/vasilisaskvortsova/Documents/COVID-19/covid-webap/src/components/Consent/Consent.js"],"names":["React","Component","Button","withRouter","Checkbox","CSSTransitionGroup","consents","content","type","console","log","Consent","props","participant_info","location","state","options","answers","key","checkboxes","handleSubmit","bind","createCheckBox","redirectToInfo","selectAllCheckboxes","selectAll","_isMounted","document","body","style","background","window","history","pushState","href","addEventListener","e","_handleGoBack","event","go","changeEvent","setState","prevState","push","pathname","isSelected","Object","keys","forEach","checkbox","preventDefault","box_total","length","sumValues","obj","values","reduce","a","b","count","r","confirm","newblock_frame","handleCheckboxChange","createCheckBoxes"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Button } from 'react-bootstrap';\nimport {withRouter} from 'react-router-dom';\nimport Checkbox from '../Checkbox/Checkbox'; \nimport { CSSTransitionGroup } from 'react-transition-group';\n\n\nconst consents = [\n  {\n    content: 'I have read the information above, and understand what the study involves',\n    type: 'checkBox1',\n  },\n  {\n    type: 'checkBox2',\n    content: 'I understand that my anonymised personal data can be shared with others for future research, shared in public databases and in scientific reports.',\n  },\n\n  {\n    type: 'checkBox3',\n    content: 'I understand that I am free to withdraw from this study at any time without giving a reason and this will not affect my future medical care or legal rights.',\n  },\n  {\n    type: 'checkBox4',\n    content: 'I understand the potential benefits and risks of participating, the support available to me should I become distressed during the research, and who to contact if I wish to lodge a complaint.',\n  },\n  {\n    type: 'checkBox5',\n    content: 'I understand the inclusion and exclusion criteria in the Information Sheet and as explained to me by the researcher.  I confirm that I do not fall under the exclusion criteria.',\n},\n  {\n    type: 'checkBox6',\n    content: 'I agree that the research project named above has been explained to me to my satisfaction and I agree to take part in this study.',\n  },\n];\n\n\nconsole.log(consents)\n\nclass Consent extends Component {\n  constructor(props) {\n    super(props);\n\n    const participant_info = this.props.location.state.participant_info\n    var options = {}\n    var answers = {}\n\n  for (var key in consents) {\n    options[consents[key].type] = false \n  }\n\n  // console.log(options)\n  // console.log(answers)\n  \n  this.state = {\n    checkboxes: options,\n    participant_info: participant_info  \n  };\n\n  console.log(this.state.checkboxes)\n\n  this.handleSubmit        = this.handleSubmit.bind(this);  \n  this.createCheckBox      = this.createCheckBox.bind(this);\n  this.redirectToInfo      = this.redirectToInfo.bind(this); \n  this.selectAllCheckboxes = this.selectAllCheckboxes.bind(this)\n  this.selectAll           = this.selectAll.bind(this)\n\n\n  }\n\n\n  componentDidMount() { \n  this._isMounted = true;\n  document.body.style.background= '#fff'; \n    window.history.pushState(window.state, null, window.location.href);\n    window.addEventListener('popstate', e => this._handleGoBack(e));\n  \n  }\n\n_handleGoBack(event){\n    window.history.go(1);\n  }\n\n\nhandleCheckboxChange(changeEvent,e) {\n  // console.log('ChangeEvent',changeEvent)\n  this.setState(prevState => ({\n      checkboxes: {\n        ...prevState.checkboxes,\n        [changeEvent]: !prevState.checkboxes[changeEvent],\n      }\n    }));\n}\n\n\nredirectToInfo() {\n   this.props.history.push({\n     pathname: `/`, \n   })\n }\n\n\nselectAllCheckboxes(isSelected){\n    console.log(this.state.checkboxes)\n\n    Object.keys(this.state.checkboxes).forEach(checkbox => {\n      // BONUS: Can you explain why we pass updater function to setState instead of an object?\n      this.setState(prevState => ({\n        checkboxes: {\n          ...prevState.checkboxes,\n          [checkbox]: isSelected\n        }\n      }));\n    });\n\n  };\n\nselectAll(){\n  console.log(this.state.checkboxes)\n  this.selectAllCheckboxes(true);\n} \n\n\nhandleSubmit(event) {\n        \n        // console.log(event)\n        \n        event.preventDefault();\n\n        // Check if all of the boxes are checked -> redirect to Survey, otherwise POP--UP window: do you want to leave the study?  \n        // console.log(this.state.checkboxes)\n        const options   = this.state.checkboxes\n        // const answers   = this.state.answers\n        const box_total = Object.keys(options).length\n\n        const sumValues = obj => Object.values(obj).reduce((a, b) => a + b);\n        const count     = sumValues(this.state.checkboxes);\n        // console.log('Number of checked boxes:',count)\n        \n        // sub select only answer options that have been checked \n        if (count < box_total){ // at least one box is checked\n            const r = window.confirm(\"You cannot proceed to the study unless you give your full consent. Please, confirm if you decide to leave the study now\"); if(r == true){ window.location.href=\"https://app.prolific.co\"}\n        }\n\n        else if (count===box_total) {\n          \n        // redirect to survey here - maybe with the timeout \n\n          this.props.history.push({\n            pathname: `/Survey`, \n            state: {participant_info: this.props.location.state.participant_info, newblock_frame: true} // to be changed\n          })\n        }\n        else {\n\n        }\n      }\n\n\n\ncreateCheckBox(key) {\n    return (\n      <Checkbox\n        label           ={key.content}\n        type            ={key.type}\n        isSelected      ={this.state.checkboxes[key]}\n        onCheckboxChange={(e)=>this.handleCheckboxChange(key.type,e)}\n      />\n    );\n  }\n\n\n// {consents.map(this.createCheckBox)}\n          \n  render() {\n    return (\n    <CSSTransitionGroup\n      className=\"container\"\n      component=\"div\"\n      transitionName=\"fade\"\n      transitionEnterTimeout={800}\n      transitionLeaveTimeout={500}\n      transitionAppear\n      transitionAppearTimeout={500}\n    >\n        \n        <div className=\"IntroConsentText\">\n          {this.createCheckBoxes()} \n        </div>\n      \n      <p></p>\n      <div className=\"col-md-12 pad-20\">\n        <div>\n          <button type=\"button\" className=\"btn btn-save btn-primary pad-20\" onClick={this.redirectToInfo}>\n            Previous\n          </button>\n          </div>\n      </div>\n      <p></p>\n      <center>\n      <div className=\"col-md-12 pad-20\">\n        <div>\n          <button type=\"button\" className=\"btn btn-save btn-primary pad-20\" onClick={this.handleSubmit}>\n            SUBMIT\n          </button>\n        </div>\n        <p></p>\n        <div>\n          <button type=\"button\" className=\"btn btn-save btn-primary pad-20\" onClick={this.selectAll}>\n            SELECT ALL - TEMPO\n          </button>\n        </div>\n      </div>\n      </center>\n\n    </CSSTransitionGroup>\n  );\n  }\n\n\n}\n\n/*\n<form onSubmit={this.handleFormSubmit}>\n              {this.createCheckboxes()}\n            </form>\n\n\n*/\n\nexport default withRouter(Consent);"]},"metadata":{},"sourceType":"module"}