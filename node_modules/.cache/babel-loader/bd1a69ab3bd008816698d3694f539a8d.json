{"ast":null,"code":"import _defineProperty from \"/Users/vasilisaskvortsova/Documents/COVID-19/covid-webap/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/vasilisaskvortsova/Documents/COVID-19/covid-webap/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"/Users/vasilisaskvortsova/Documents/COVID-19/covid-webap/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/vasilisaskvortsova/Documents/COVID-19/covid-webap/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/vasilisaskvortsova/Documents/COVID-19/covid-webap/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/vasilisaskvortsova/Documents/COVID-19/covid-webap/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/vasilisaskvortsova/Documents/COVID-19/covid-webap/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/vasilisaskvortsova/Documents/COVID-19/covid-webap/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/vasilisaskvortsova/Documents/COVID-19/covid-webap/src/components/Consent/Consent.js\";\nimport React, { Component } from \"react\";\nimport { Button } from 'react-bootstrap';\nimport { withRouter } from 'react-router-dom';\nimport Checkbox from '../Checkbox/Checkbox';\nimport { CSSTransitionGroup } from 'react-transition-group'; // create an Object directly \n// const consents = \n//   {\n//     'checkBox1': 'I have read the information above, and understand what the study involves',\n//     'checkBox2': 'I understand that my anonymised personal data can be shared with others for future research, shared in public databases and in scientific reports.',\n//     'checkBox3': 'I understand that I am free to withdraw from this study at any time without giving a reason and this will not affect my future medical care or legal rights.',\n//     'checkBox4': 'I understand the potential benefits and risks of participating, the support available to me should I become distressed during the research, and who to contact if I wish to lodge a complaint.',\n//     'checkBox5': 'I understand the inclusion and exclusion criteria in the Information Sheet and as explained to me by the researcher.  I confirm that I do not fall under the exclusion criteria.',\n//     'checkBox6': 'I agree that the research project named above has been explained to me to my satisfaction and I agree to take part in this study.',\n// }; \n\nvar consents = [{\n  content: 'I have read the information above, and understand what the study involves',\n  type: 'checkBox1'\n}, {\n  type: 'checkBox2',\n  content: 'I understand that my anonymised personal data can be shared with others for future research, shared in public databases and in scientific reports.'\n}, {\n  type: 'checkBox3',\n  content: 'I understand that I am free to withdraw from this study at any time without giving a reason and this will not affect my future medical care or legal rights.'\n}, {\n  type: 'checkBox4',\n  content: 'I understand the potential benefits and risks of participating, the support available to me should I become distressed during the research, and who to contact if I wish to lodge a complaint.'\n}, {\n  type: 'checkBox5',\n  content: 'I understand the inclusion and exclusion criteria in the Information Sheet and as explained to me by the researcher.  I confirm that I do not fall under the exclusion criteria.'\n}, {\n  type: 'checkBox6',\n  content: 'I agree that the research project named above has been explained to me to my satisfaction and I agree to take part in this study.'\n}];\nconsole.log(consents);\n\nvar Consent =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Consent, _Component);\n\n  function Consent(props) {\n    var _this;\n\n    _classCallCheck(this, Consent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Consent).call(this, props));\n    var prolific_id = _this.props.location.state.prolific_id;\n    var study_id = _this.props.location.state.study_id;\n    var longit_id = _this.props.location.state.longit_id;\n    var options = {};\n    var answers = {};\n\n    for (var key in consents) {\n      console.log(key);\n      options[consents[key].type] = false; // answers[consents[key]] = consents[key] // might be u\n    }\n\n    console.log(options);\n    console.log(answers);\n    var participant_info = _this.state = {\n      checkboxes: options\n    };\n    console.log(_this.state.checkboxes);\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_this));\n    _this.createCheckBox = _this.createCheckBox.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Consent, [{\n    key: \"handleCheckboxChange\",\n    value: function handleCheckboxChange(changeEvent, e) {\n      console.log('ChangeEvent', changeEvent);\n      this.setState(function (prevState) {\n        return {\n          checkboxes: _objectSpread({}, prevState.checkboxes, _defineProperty({}, changeEvent, !prevState.checkboxes[changeEvent]))\n        };\n      });\n    } // redirectToTarget = () => {\n    //   this.props.history.push({\n    //     pathname: `/Survey`, \n    //     state: {participant_info: this.state} \n    //   })\n    // }\n\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      // console.log(event)\n      event.preventDefault(); // Check if all of the boxes are checked -> redirect to Survey, otherwise POP--UP window: do you want to leave the study?  \n      // console.log(this.state.checkboxes)\n\n      var options = this.state.checkboxes; // const answers   = this.state.answers\n\n      var box_total = Object.keys(options).length;\n\n      var sumValues = function sumValues(obj) {\n        return Object.values(obj).reduce(function (a, b) {\n          return a + b;\n        });\n      };\n\n      var count = sumValues(this.state.checkboxes);\n      console.log('Number of checked boxes:', count); // sub select only answer options that have been checked \n\n      if (count < box_total) {\n        // at least one box is checked\n        alert(\"You cannot participate in the study if you do not give your full consent'. Please, confirm if you want to terminate the study. Thank you!\");\n        window.location = 'https://app.prolific.co'; // add STUDY_ID \n      } else if (count === box_total) {\n        // redirect to survey here - maybe with the timeout  \n        this.props.history.push({\n          pathname: \"/Survey\",\n          state: {\n            participant_info: this.props.location.state.participant_info,\n            newblock_frame: true\n          } // to be changed\n\n        });\n      } else {}\n    }\n  }, {\n    key: \"handleCheckboxChange\",\n    value: function handleCheckboxChange(changeEvent, e) {\n      console.log('ChangeEvent', changeEvent);\n      this.setState(function (prevState) {\n        return {\n          checkboxes: _objectSpread({}, prevState.checkboxes, _defineProperty({}, changeEvent, !prevState.checkboxes[changeEvent]))\n        };\n      });\n    }\n  }, {\n    key: \"createCheckBox\",\n    value: function createCheckBox(key) {\n      var _this2 = this;\n\n      return React.createElement(Checkbox, {\n        label: key.content,\n        type: key.type,\n        isSelected: this.state.checkboxes[key],\n        onCheckboxChange: function onCheckboxChange(e) {\n          return _this2.handleCheckboxChange(key.type, e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(CSSTransitionGroup, {\n        className: \"container\",\n        component: \"div\",\n        transitionName: \"fade\",\n        transitionEnterTimeout: 800,\n        transitionLeaveTimeout: 500,\n        transitionAppear: true,\n        transitionAppearTimeout: 500,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"answerOptions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, consents.map(this.createCheckBox)), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"col-md-12 pad-20\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-save btn-primary pad-20\",\n        onClick: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, \"Submit\"))));\n    }\n  }]);\n\n  return Consent;\n}(Component);\n/*\n<form onSubmit={this.handleFormSubmit}>\n              {this.createCheckboxes()}\n            </form>\n\n\n*/\n\n\nexport default withRouter(Consent);","map":{"version":3,"sources":["/Users/vasilisaskvortsova/Documents/COVID-19/covid-webap/src/components/Consent/Consent.js"],"names":["React","Component","Button","withRouter","Checkbox","CSSTransitionGroup","consents","content","type","console","log","Consent","props","prolific_id","location","state","study_id","longit_id","options","answers","key","participant_info","checkboxes","handleSubmit","bind","createCheckBox","changeEvent","e","setState","prevState","event","preventDefault","box_total","Object","keys","length","sumValues","obj","values","reduce","a","b","count","alert","window","history","push","pathname","newblock_frame","handleCheckboxChange","map"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Button } from 'react-bootstrap';\nimport {withRouter} from 'react-router-dom';\nimport Checkbox from '../Checkbox/Checkbox'; \nimport { CSSTransitionGroup } from 'react-transition-group';\n\n\n\n// create an Object directly \n// const consents = \n//   {\n//     'checkBox1': 'I have read the information above, and understand what the study involves',\n    \n//     'checkBox2': 'I understand that my anonymised personal data can be shared with others for future research, shared in public databases and in scientific reports.',\n  \n//     'checkBox3': 'I understand that I am free to withdraw from this study at any time without giving a reason and this will not affect my future medical care or legal rights.',\n    \n//     'checkBox4': 'I understand the potential benefits and risks of participating, the support available to me should I become distressed during the research, and who to contact if I wish to lodge a complaint.',\n  \n//     'checkBox5': 'I understand the inclusion and exclusion criteria in the Information Sheet and as explained to me by the researcher.  I confirm that I do not fall under the exclusion criteria.',\n\n//     'checkBox6': 'I agree that the research project named above has been explained to me to my satisfaction and I agree to take part in this study.',\n// }; \n\n\nconst consents = [\n  {\n    content: 'I have read the information above, and understand what the study involves',\n    type: 'checkBox1',\n  },\n  {\n    type: 'checkBox2',\n    content: 'I understand that my anonymised personal data can be shared with others for future research, shared in public databases and in scientific reports.',\n  },\n\n  {\n    type: 'checkBox3',\n    content: 'I understand that I am free to withdraw from this study at any time without giving a reason and this will not affect my future medical care or legal rights.',\n  },\n  {\n    type: 'checkBox4',\n    content: 'I understand the potential benefits and risks of participating, the support available to me should I become distressed during the research, and who to contact if I wish to lodge a complaint.',\n  },\n  {\n    type: 'checkBox5',\n    content: 'I understand the inclusion and exclusion criteria in the Information Sheet and as explained to me by the researcher.  I confirm that I do not fall under the exclusion criteria.',\n},\n  {\n    type: 'checkBox6',\n    content: 'I agree that the research project named above has been explained to me to my satisfaction and I agree to take part in this study.',\n  },\n];\n\n\nconsole.log(consents)\n\nclass Consent extends Component {\n  constructor(props) {\n    super(props);\n\n    const prolific_id = this.props.location.state.prolific_id\n    const study_id    = this.props.location.state.study_id\n    const longit_id   = this.props.location.state.longit_id\n\n    var options = {}\n    var answers = {}\n\n  for (var key in consents) {\n    console.log(key)\n    options[consents[key].type] = false \n    // answers[consents[key]] = consents[key] // might be u\n  }\n\n  console.log(options)\n  console.log(answers)\n  \n  const participant_info = \n  this.state = {\n    checkboxes: options,\n  };\n\n  console.log(this.state.checkboxes)\n\n  this.handleSubmit       = this.handleSubmit.bind(this);  \n  this.createCheckBox     = this.createCheckBox.bind(this); \n\n}\n\n  \n  handleCheckboxChange(changeEvent,e) {\n  console.log('ChangeEvent',changeEvent)\n  \n  this.setState(prevState => ({\n      checkboxes: {\n        ...prevState.checkboxes,\n        [changeEvent]: !prevState.checkboxes[changeEvent],\n      }\n    }));\n}\n\n// redirectToTarget = () => {\n//   this.props.history.push({\n//     pathname: `/Survey`, \n//     state: {participant_info: this.state} \n//   })\n// }\n\n\nhandleSubmit(event) {\n        \n        // console.log(event)\n        \n        event.preventDefault();\n\n        // Check if all of the boxes are checked -> redirect to Survey, otherwise POP--UP window: do you want to leave the study?  \n        // console.log(this.state.checkboxes)\n        const options   = this.state.checkboxes\n        // const answers   = this.state.answers\n        const box_total = Object.keys(options).length\n\n        const sumValues = obj => Object.values(obj).reduce((a, b) => a + b);\n        const count = sumValues(this.state.checkboxes);\n        console.log('Number of checked boxes:',count)\n        \n        // sub select only answer options that have been checked \n\n        if (count < box_total){ // at least one box is checked\n            alert(\"You cannot participate in the study if you do not give your full consent'. Please, confirm if you want to terminate the study. Thank you!\")\n             window.location = 'https://app.prolific.co' // add STUDY_ID \n               }\n\n        else if (count===box_total) {\n          // redirect to survey here - maybe with the timeout  \n          this.props.history.push({\n            pathname: `/Survey`, \n            state: {participant_info: this.props.location.state.participant_info, newblock_frame: true} // to be changed\n          })\n        }\n        else {\n\n        }\n      }\n\n\n\nhandleCheckboxChange(changeEvent,e) {\n  console.log('ChangeEvent',changeEvent)\n  \n  this.setState(prevState => ({\n      checkboxes: {\n        ...prevState.checkboxes,\n        [changeEvent]: !prevState.checkboxes[changeEvent],\n      }\n    }));\n}\n\ncreateCheckBox(key) {\n    return (\n      <Checkbox\n        label           ={key.content}\n        type            ={key.type}\n        isSelected      ={this.state.checkboxes[key]}\n        onCheckboxChange={(e)=>this.handleCheckboxChange(key.type,e)}\n      />\n    );\n  }\n\n\n\n  render() {\n    return (\n    <CSSTransitionGroup\n      className=\"container\"\n      component=\"div\"\n      transitionName=\"fade\"\n      transitionEnterTimeout={800}\n      transitionLeaveTimeout={500}\n      transitionAppear\n      transitionAppearTimeout={500}\n    >\n        \n        <div className=\"answerOptions\">\n          {consents.map(this.createCheckBox)}\n        </div>\n      \n      <p></p>\n      <div className=\"col-md-12 pad-20\">\n        <div>\n          <button type=\"button\" className=\"btn btn-save btn-primary pad-20\" onClick={this.handleSubmit}>\n            Submit\n          </button>\n          </div>\n      </div>\n\n    </CSSTransitionGroup>\n  );\n  }\n\n\n}\n\n/*\n<form onSubmit={this.handleFormSubmit}>\n              {this.createCheckboxes()}\n            </form>\n\n\n*/\n\nexport default withRouter(Consent);"]},"metadata":{},"sourceType":"module"}