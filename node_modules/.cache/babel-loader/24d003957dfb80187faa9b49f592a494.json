{"ast":null,"code":"var _jsxFileName = \"/Users/vasilisaskvortsova/Documents/LEARNOISE-local/webap-learnoise-2/src/components/Brick/Brick.js\";\nimport React, { useState } from 'react';\nimport 'react-bootstrap-range-slider/dist/react-bootstrap-range-slider.css';\nimport RangeSlider from 'react-bootstrap-range-slider';\nimport './Brick.css';\n\nclass Brick extends React.Component {\n  constructor(props) {\n    super(props);\n    const [value, setValue] = useState(0);\n  }\n\n  render() {\n    const animation_property = this.props.animation ? 'activate' : 'reset'; // const selected           = (this.props.noFeedback==='') ? 'selected' : 'notSelected'\n\n    const selected = this.props.symbolHighlight === '' ? 'selected' : 'notSelected';\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"symbol \" + animation_property + \" \" + selected,\n      src: this.props.symbol,\n      alt: \"symbol\",\n      onClick: () => this.props.symbolClicked(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 8\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"square\" + this.props.noFeedback,\n      alt: \"feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 8\n      }\n    }, this.props.feedback)), /*#__PURE__*/React.createElement(RangeSlider, {\n      value: value,\n      onChange: changeEvent => setValue(changeEvent.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }\n    }));\n  }\n\n}\n\nexport default Brick;","map":{"version":3,"sources":["/Users/vasilisaskvortsova/Documents/LEARNOISE-local/webap-learnoise-2/src/components/Brick/Brick.js"],"names":["React","useState","RangeSlider","Brick","Component","constructor","props","value","setValue","render","animation_property","animation","selected","symbolHighlight","symbol","symbolClicked","noFeedback","feedback","changeEvent","target"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,oEAAP;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AAEA,OAAO,aAAP;;AAGA,MAAMC,KAAN,SAAoBH,KAAK,CAACI,SAA1B,CAAoC;AAElCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AAGF,UAAM,CAAEC,KAAF,EAASC,QAAT,IAAsBP,QAAQ,CAAC,CAAD,CAApC;AACC;;AAEDQ,EAAAA,MAAM,GAAG;AACP,UAAMC,kBAAkB,GAAG,KAAKJ,KAAL,CAAWK,SAAX,GAAuB,UAAvB,GAAoC,OAA/D,CADO,CAEP;;AACA,UAAMC,QAAQ,GAAc,KAAKN,KAAL,CAAWO,eAAX,KAA8B,EAA/B,GAAqC,UAArC,GAAkD,aAA7E;AAEA,wBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AAAK,MAAA,SAAS,EAAE,YAAYH,kBAAZ,GAAiC,GAAjC,GAAuCE,QAAvD;AAAiE,MAAA,GAAG,EAAE,KAAKN,KAAL,CAAWQ,MAAjF;AAAyF,MAAA,GAAG,EAAC,QAA7F;AAAsG,MAAA,OAAO,EAAE,MAAM,KAAKR,KAAL,CAAWS,aAAX,EAArH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,eAEC;AAAK,MAAA,SAAS,EAAE,WAAW,KAAKT,KAAL,CAAWU,UAAtC;AAAkD,MAAA,GAAG,EAAC,UAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkE,KAAKV,KAAL,CAAWW,QAA7E,CAFD,CADF,eAOE,oBAAC,WAAD;AACE,MAAA,KAAK,EAAEV,KADT;AAEE,MAAA,QAAQ,EAAEW,WAAW,IAAIV,QAAQ,CAACU,WAAW,CAACC,MAAZ,CAAmBZ,KAApB,CAFnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,CADA;AAeD;;AA7BiC;;AAgCpC,eAAeJ,KAAf","sourcesContent":["import React, { useState } from 'react';\nimport 'react-bootstrap-range-slider/dist/react-bootstrap-range-slider.css';\nimport RangeSlider from 'react-bootstrap-range-slider';\n\nimport './Brick.css';\n\n\nclass Brick extends React.Component {\n\n  constructor(props){\n    super(props);\n\n\n  const [ value, setValue ] = useState(0)\n  }\n\n  render() {\n    const animation_property = this.props.animation ? 'activate' : 'reset';\n    // const selected           = (this.props.noFeedback==='') ? 'selected' : 'notSelected'\n    const selected           = (this.props.symbolHighlight ==='') ? 'selected' : 'notSelected'\n    \n    return ( \n    <div>     \n      <div className=\"container\">\n       <img className={\"symbol \" + animation_property + \" \" + selected} src={this.props.symbol} alt='symbol' onClick={() => this.props.symbolClicked()}/>\n       <div className={\"square\" + this.props.noFeedback} alt='feedback'>{this.props.feedback}</div>   \n      \n      </div>\n\n      <RangeSlider \n        value={value}\n        onChange={changeEvent => setValue(changeEvent.target.value)}\n      />\n      </div>\n\n    );\n  }\n}\n\nexport default Brick;\n\n\n\n"]},"metadata":{},"sourceType":"module"}