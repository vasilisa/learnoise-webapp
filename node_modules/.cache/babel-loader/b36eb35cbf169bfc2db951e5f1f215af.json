{"ast":null,"code":"var _jsxFileName = \"/Users/vasilisaskvortsova/Documents/LEARNOISE-local/webap-learnoise-2/src/components/Survey/Survey.js\";\nimport React from 'react';\nimport { Button } from 'react-bootstrap';\nimport { withRouter } from 'react-router-dom'; // import other questionnaires the same way\n\nimport * as demo from '../../questionnaires/DEMO';\nimport * as ius from '../../questionnaires/IUS';\nimport * as bis from '../../questionnaires/BIS11';\nimport * as asrs from '../../questionnaires/ASRS11';\nimport * as pdi from '../../questionnaires/PDI';\nimport * as stai from '../../questionnaires/STAI_STATE';\nimport * as ocir from '../../questionnaires/OCIR';\nimport * as pswq from '../../questionnaires/PSWQ';\nimport * as pad from '../../questionnaires/PADWSUR';\nimport * as zung from '../../questionnaires/ZUNG';\nimport * as pvd from '../../questionnaires/PVD';\nimport * as iq from '../../questionnaires/IQ';\nimport * as feedback from '../../questionnaires/FEEDBACK';\nvar quizData = {\n  demo: demo,\n  ius: ius,\n  bis: bis,\n  asrs: asrs,\n  pdi: pdi,\n  stai: stai,\n  ocir: ocir,\n  pswq: pswq,\n  pad: pad,\n  zung: zung,\n  pvd: pvd,\n  iq: iq,\n  feedback: feedback\n};\n\nfunction createQuiz(id, survey_name) {\n  return {\n    id: id,\n    surveytag: survey_name,\n    quizQuestions: quizData[survey_name]\n  };\n} // var list = [];\n//  for(var i = 0; i < n; i++) {\n//     var obj = createQuiz(i,survey_list[i]); //add other params if you need\n//     list.push(obj);\n//  }\n//  console.log(list);\n\n\nclass Survey extends React.Component {\n  constructor(props) {\n    super(props);\n    console.log('Block number survey in Props to Survey', this.props.location.state.participant_info.block_number_survey); // Information about a specific block of the Survey: \n\n    const block_info = {\n      surveytag: this.props.location.state.participant_info.survey_list[0] // First questionnaire in the list \n\n    };\n    const n = this.props.location.state.participant_info.survey_list.length - 1;\n    const participant_info = {\n      prolific_id: this.props.location.state.participant_info.prolific_id,\n      study_id: this.props.location.state.participant_info.study_id,\n      participant_id: this.props.location.state.participant_info.participant_id,\n      survey_list: this.props.location.state.participant_info.survey_list,\n      TotalBlock: n,\n      block_number_survey: this.props.location.state.participant_info.block_number_survey,\n      date_time: this.props.location.state.participant_info.date_time\n    };\n    console.log('Participant info survey', this.props.location.state.participant_info);\n    this.state = {\n      participant_info: participant_info,\n      block_info: block_info,\n      newblock_frame: this.props.location.state.newblock_frame,\n      questions: quizData[participant_info.survey_list[0]].default,\n      // quizData[this.props.location.state.participant_info.survey_list[0]].default,\n      finished: false\n    };\n    console.log(this.state);\n    this.getSurveyBlock.bind(this);\n    this.redirectToQuiz.bind(this);\n    this.redirectToEnd.bind(this);\n    this._isMounted = false;\n\n    this._handleGoBack.bind(this);\n\n    this._handleTimeOut.bind(this);\n  }\n\n  redirectToQuiz() {\n    console.log('redirectToQuiz:', this.state);\n\n    if (this.props.location.state.participant_info.block_number_survey <= this.state.participant_info.TotalBlock) {\n      if (this.state.newblock_frame) {\n        // TRUE\n        this.setState({\n          newblock_frame: false\n        });\n        console.log('New block frame:', this.state.newblock_frame);\n        this.props.history.push({\n          pathname: `/QuizBlock`,\n          state: {\n            participant_info: this.state.participant_info,\n            block_info: this.state.block_info,\n            questions: this.state.questions\n          }\n        });\n      } else // FALSE \n        {\n          if (this._isMounted) {\n            console.log('Block number', this.props.location.state.participant_info.block_number_survey);\n\n            if (this.props.location.state.participant_info.block_number_survey === this.state.participant_info.TotalBlock) {\n              // just finished the LAST BLOCK \n              // redirect to the final \n              this.setState({\n                finished: true\n              });\n            } else if (this.props.location.state.participant_info.block_number_survey < this.state.participant_info.TotalBlock) {\n              // just finished the LAST BLOCK \n              const newblocknumber = this.props.location.state.participant_info.block_number_survey + 1; // console.log(newblocknumber)\n\n              this.getSurveyBlock(newblocknumber, this.state.participant_info.survey_list);\n              this.setState({\n                newblock_frame: true,\n                participant_info: { ...this.state.participant_info,\n                  block_number_survey: newblocknumber\n                }\n              });\n            }\n          }\n        }\n    }\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n    document.body.style.background = '#fff'; // this._isMounted && this.getSurveyBlock(this.props.location.state.participant_info.block_number,this.props.location.state.participant_info.survey_list);\n\n    window.history.pushState(window.state, null, window.location.href);\n    window.addEventListener('popstate', e => this._handleGoBack(e));\n    window.onbeforeunload = this._handleRefresh;\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this._handleTimeOut);\n    this._isMounted = false;\n  }\n\n  _handleRefresh(evt) {\n    return false; // error message when refresh occurs\n  }\n\n  _handleGoBack(event) {\n    window.history.go(1);\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  _handleTimeOut() {\n    console.log('Timeout:', this.state);\n    setTimeout(() => {\n      this.redirectToQuiz();\n    }, 1500);\n  } // Get info about the specific Survey Block: \n\n\n  getSurveyBlock(block_number_, survey_list_) {\n    // console.log('Block Number Get Survey Block:',block_number_+1)\n    const surveytag_block = survey_list_[block_number_]; // console.log('SurveyTag Block:',surveytag_block)\n\n    this.setState({\n      loading: true,\n      questions: quizData[survey_list_[block_number_]].default,\n      block_info: { ...this.state.block_info,\n        surveytag: surveytag_block\n      }\n    });\n  }\n\n  redirectToEnd() {\n    alert(\"You will now be redirected to the validation page. Please, confirm leaving the page. Thank you!\"); // window.location.replace('https://app.prolific.co/submissions/complete?cc=1A496EDB')\n\n    window.location = 'https://app.prolific.co/submissions/complete?cc='; // + this.props.location.state.participant_info.study_id // CHECK if validation code == stidu id \n  }\n\n  render() {\n    let text;\n\n    if (this.state.block_info.surveytag === this.props.location.state.participant_info.survey_list[0] && this.state.newblock_frame) {\n      text = /*#__PURE__*/React.createElement(\"div\", {\n        className: \"SurveyIntroText\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 14\n        }\n      }, \" \", /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 48\n        }\n      }, \"Dear Participant,\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 7\n        }\n      }, \"Thank you for taking part in our study!\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 7\n        }\n      }, \"You will now be asked to complete several questionnaires.\"));\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"center\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"instructionsButtonContainer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 9\n        }\n      }, text), /*#__PURE__*/React.createElement(\"center\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        className: \"buttonInstructionStart\",\n        onClick: () => this.redirectToQuiz(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"bold\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }\n      }, \"START\"))))));\n    } else if (this.state.block_info.surveytag !== this.props.location.state.participant_info.survey_list[0] && this.state.newblock_frame) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 16\n        }\n      }, this._handleTimeOut());\n    } else if (this.state.participant_info.block_number_survey === this.state.participant_info.TotalBlock && this.state.finished === true) {\n      text = /*#__PURE__*/React.createElement(\"div\", {\n        className: \"SurveyIntroText\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 16\n        }\n      }, \" \", /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 50\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"bold\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 53\n        }\n      }, \"You completed all the questionnaires!\")), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 13\n        }\n      }, \"You will now be redirected to the validation page.\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 13\n        }\n      }, \"Please, confirm leaving the page when prompted by the browser. Thank you!\"));\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"center\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"restarttraining\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }\n      }, text, \"  \", /*#__PURE__*/React.createElement(\"div\", {\n        className: \"translate\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 23\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"secondary\",\n        color: \"danger\",\n        size: \"sm\",\n        className: \"buttonInstructionFinal\",\n        type: \"submit\",\n        onClick: () => this.redirectToEnd(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 13\n        }\n      }, \"Validate\"))));\n    } else {\n      text = '... CONTINUE ...';\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"center\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"SurveyIntroText\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 7\n        }\n      }, text), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 7\n        }\n      }), /*#__PURE__*/React.createElement(\"center\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        className: \"buttonInstructionStart\",\n        onClick: () => this.state.finished ? this.redirectToEnd() : this.redirectToQuiz(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 13\n        }\n      }, \"\\u2192\"))));\n    }\n  }\n\n}\n\nexport default withRouter(Survey);","map":{"version":3,"sources":["/Users/vasilisaskvortsova/Documents/LEARNOISE-local/webap-learnoise-2/src/components/Survey/Survey.js"],"names":["React","Button","withRouter","demo","ius","bis","asrs","pdi","stai","ocir","pswq","pad","zung","pvd","iq","feedback","quizData","createQuiz","id","survey_name","surveytag","quizQuestions","Survey","Component","constructor","props","console","log","location","state","participant_info","block_number_survey","block_info","survey_list","n","length","prolific_id","study_id","participant_id","TotalBlock","date_time","newblock_frame","questions","default","finished","getSurveyBlock","bind","redirectToQuiz","redirectToEnd","_isMounted","_handleGoBack","_handleTimeOut","setState","history","push","pathname","newblocknumber","componentDidMount","document","body","style","background","window","pushState","href","addEventListener","e","onbeforeunload","_handleRefresh","componentWillUnmount","clearTimeout","evt","event","go","setTimeout","block_number_","survey_list_","surveytag_block","loading","alert","render","text"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Button } from 'react-bootstrap';\nimport {withRouter} from 'react-router-dom';\n\n// import other questionnaires the same way\nimport * as demo from '../../questionnaires/DEMO';\nimport * as ius from '../../questionnaires/IUS';\nimport * as bis from '../../questionnaires/BIS11';\nimport * as asrs from '../../questionnaires/ASRS11';\nimport * as pdi from '../../questionnaires/PDI';\nimport * as stai from '../../questionnaires/STAI_STATE';\nimport * as ocir from '../../questionnaires/OCIR';\nimport * as pswq from '../../questionnaires/PSWQ';\nimport * as pad from '../../questionnaires/PADWSUR';\nimport * as zung from '../../questionnaires/ZUNG';\nimport * as pvd from '../../questionnaires/PVD';\nimport * as iq from '../../questionnaires/IQ';\nimport * as feedback from '../../questionnaires/FEEDBACK';\n\n\nvar quizData = {\n  demo: demo, \n  ius: ius,\n  bis: bis,\n  asrs: asrs,\n  pdi: pdi, \n  stai: stai, \n  ocir: ocir,\n  pswq: pswq,\n  pad: pad,\n  zung:zung, \n  pvd: pvd,  \n  iq:iq, \n  feedback: feedback \n}\n\n\nfunction createQuiz(id,survey_name) {\n     return {\n         id: id,\n         surveytag: survey_name,\n         quizQuestions: quizData[survey_name]\n     };\n }\n\n\n// var list = [];\n//  for(var i = 0; i < n; i++) {\n//     var obj = createQuiz(i,survey_list[i]); //add other params if you need\n//     list.push(obj);\n//  }\n//  console.log(list);\n\n\nclass Survey extends React.Component {\n  constructor(props){\n    super(props);\n    \n    console.log('Block number survey in Props to Survey', this.props.location.state.participant_info.block_number_survey)\n\n    // Information about a specific block of the Survey: \n    const block_info = {\n      surveytag  : this.props.location.state.participant_info.survey_list[0], // First questionnaire in the list \n     }\n\n    const n =  this.props.location.state.participant_info.survey_list.length-1;   \n\n    const participant_info = {\n\n      prolific_id           : this.props.location.state.participant_info.prolific_id, \n      study_id              : this.props.location.state.participant_info.study_id, \n      participant_id        : this.props.location.state.participant_info.participant_id, \n      survey_list           : this.props.location.state.participant_info.survey_list, \n      TotalBlock            : n, \n      block_number_survey   : this.props.location.state.participant_info.block_number_survey, \n      date_time             : this.props.location.state.participant_info.date_time \n  \n    }\n\n    console.log('Participant info survey',this.props.location.state.participant_info)\n    \n    this.state = {\n      participant_info : participant_info,\n      block_info       : block_info,\n      newblock_frame   : this.props.location.state.newblock_frame,  \n      questions        : quizData[participant_info.survey_list[0]].default, // quizData[this.props.location.state.participant_info.survey_list[0]].default,\n      finished         : false,\n    }\n\n   \n   console.log(this.state)\n\n    this.getSurveyBlock.bind(this);\n    this.redirectToQuiz.bind(this); \n    this.redirectToEnd.bind(this); \n    this._isMounted = false;\n    this._handleGoBack.bind(this); \n    this._handleTimeOut.bind(this);   \n  }\n\n\n  redirectToQuiz () {\n  console.log('redirectToQuiz:', this.state)\n    if((this.props.location.state.participant_info.block_number_survey <= (this.state.participant_info.TotalBlock)))\n      \n          {           \n          if (this.state.newblock_frame){ // TRUE\n          this.setState({newblock_frame : false})\n\n          console.log('New block frame:',this.state.newblock_frame)\n\n          this.props.history.push({\n           pathname: `/QuizBlock`,\n           state: {participant_info: this.state.participant_info,\n                   block_info      : this.state.block_info,\n                   questions       : this.state.questions,\n                 }\n          })}\n          else // FALSE \n          {\n            if (this._isMounted)\n            {\n\n              console.log('Block number',this.props.location.state.participant_info.block_number_survey)\n              \n              if (this.props.location.state.participant_info.block_number_survey===this.state.participant_info.TotalBlock){ // just finished the LAST BLOCK \n              \n                // redirect to the final \n                this.setState({finished: true})\n\n              } \n              else if (this.props.location.state.participant_info.block_number_survey<this.state.participant_info.TotalBlock){ // just finished the LAST BLOCK \n              \n              const newblocknumber = this.props.location.state.participant_info.block_number_survey + 1\n              // console.log(newblocknumber)\n              this.getSurveyBlock(newblocknumber,this.state.participant_info.survey_list)\n              this.setState({newblock_frame: true, participant_info : {...this.state.participant_info, block_number_survey:newblocknumber},})\n\n              }\n\n            }\n          }\n        }\n      }\n    \n  componentDidMount() { \n  this._isMounted = true;\n  document.body.style.background= '#fff'; \n  // this._isMounted && this.getSurveyBlock(this.props.location.state.participant_info.block_number,this.props.location.state.participant_info.survey_list);\n    window.history.pushState(window.state, null, window.location.href);\n    window.addEventListener('popstate', e => this._handleGoBack(e));\n    window.onbeforeunload = this._handleRefresh\n\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this._handleTimeOut);\n    this._isMounted = false;\n \n  }\n\n\n  _handleRefresh(evt){\n    return false // error message when refresh occurs\n  }\n\n  _handleGoBack(event){\n    window.history.go(1);\n  }\n\n  componentWillUnmount()\n  {\n   this._isMounted = false;\n  } \n\n  _handleTimeOut() {\n    console.log('Timeout:', this.state)\n    setTimeout(() => {\n     this.redirectToQuiz()\n    }, 1500);\n} \n\n // Get info about the specific Survey Block: \n getSurveyBlock(block_number_,survey_list_) {\n\n    // console.log('Block Number Get Survey Block:',block_number_+1)\n\n    const surveytag_block = survey_list_[block_number_]\n    // console.log('SurveyTag Block:',surveytag_block)\n \n    this.setState({ loading: true , questions: quizData[survey_list_[block_number_]].default, block_info : {...this.state.block_info, surveytag:surveytag_block}});\n\n}\n\n redirectToEnd(){\n      alert(\"You will now be redirected to the validation page. Please, confirm leaving the page. Thank you!\")\n      // window.location.replace('https://app.prolific.co/submissions/complete?cc=1A496EDB')\n      window.location = 'https://app.prolific.co/submissions/complete?cc=' // + this.props.location.state.participant_info.study_id // CHECK if validation code == stidu id \n    }\n  \n\nrender()\n  { \n    let text\n    if ((this.state.block_info.surveytag === this.props.location.state.participant_info.survey_list[0]) && (this.state.newblock_frame))\n    { \n      text = <div className='SurveyIntroText'> <p>Dear Participant,</p>\n      <p>Thank you for taking part in our study!</p>\n      <p>You will now be asked to complete several questionnaires.</p></div>\n      \n    return (\n      <div>\n      <center> \n      <div className=\"instructionsButtonContainer\">\n        <div>\n          {text}           \n        </div> \n        <center>\n          <Button className=\"buttonInstructionStart\" onClick={()=>this.redirectToQuiz()}>\n          <span className=\"bold\">START</span>\n          </Button>\n        </center>\n      </div>\n      </center> \n      </div>);\n    } \n\n     else if ((this.state.block_info.surveytag !== this.props.location.state.participant_info.survey_list[0]) && (this.state.newblock_frame)) \n    { \n        return(<div>{this._handleTimeOut()}</div>);\n      }\n\n    else if (this.state.participant_info.block_number_survey === this.state.participant_info.TotalBlock && this.state.finished===true) \n    {\n        text = <div className='SurveyIntroText'> <p><span className=\"bold\">You completed all the questionnaires!</span></p>\n            <p>You will now be redirected to the validation page.</p>\n            <p>Please, confirm leaving the page when prompted by the browser. Thank you!</p></div>\n      \n      return (\n          <div>\n          <center> \n          <div className=\"restarttraining\">\n              {text}  <div className=\"translate\"/>\n          </div>\n          <div>\n            <Button variant=\"secondary\" color=\"danger\" size=\"sm\" className=\"buttonInstructionFinal\" type=\"submit\" onClick={() => this.redirectToEnd()}>Validate</Button>\n          </div>\n          </center>\n          </div>);        \n    }\n\n    else\n    {\n          text = '... CONTINUE ...' \n        return (\n      <div>\n      <center>\n      <div className=\"SurveyIntroText\">\n        {text}           \n      </div>\n      <br></br>\n      <center>\n            <Button className=\"buttonInstructionStart\" onClick={()=> this.state.finished ? this.redirectToEnd() : this.redirectToQuiz()}>\n            &#8594;\n            </Button>\n            </center>\n    </center>\n    </div>);\n    }    \n  }\n\n}\n\nexport default withRouter(Survey);"]},"metadata":{},"sourceType":"module"}