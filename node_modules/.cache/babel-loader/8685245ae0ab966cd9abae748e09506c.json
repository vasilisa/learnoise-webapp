{"ast":null,"code":"var _jsxFileName = \"/Users/vasilisaskvortsova/Documents/LEARNOISE-local/webap-learnoise-2/src/components/Brick/Brick.js\";\nimport React, { useState } from 'react';\nimport 'react-bootstrap-range-slider/dist/react-bootstrap-range-slider.css';\nimport RangeSlider from 'react-bootstrap-range-slider';\nimport './Brick.css'; // we can use hooks instead of creating a class with new React JS \n\nconst Brick = () => {\n  const [value, setValue] = useState(0);\n  const animation_property = this.props.animation ? 'activate' : 'reset'; // this should be adjusted \n  // const selected           = (this.props.noFeedback==='') ? 'selected' : 'notSelected'\n\n  const selected = this.props.symbolHighlight === '' ? 'selected' : 'notSelected';\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"symbol \" + animation_property + \" \" + selected,\n    src: this.props.symbol,\n    alt: \"symbol\",\n    onClick: () => this.props.symbolClicked(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 8\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"square\" + this.props.noFeedback,\n    alt: \"feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 8\n    }\n  }, this.props.feedback)), /*#__PURE__*/React.createElement(RangeSlider, {\n    value: value,\n    onChange: changeEvent => setValue(changeEvent.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Brick;","map":{"version":3,"sources":["/Users/vasilisaskvortsova/Documents/LEARNOISE-local/webap-learnoise-2/src/components/Brick/Brick.js"],"names":["React","useState","RangeSlider","Brick","value","setValue","animation_property","props","animation","selected","symbolHighlight","symbol","symbolClicked","noFeedback","feedback","changeEvent","target"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,oEAAP;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AAEA,OAAO,aAAP,C,CAEA;;AACA,MAAMC,KAAK,GAAG,MAAM;AAElB,QAAM,CAAEC,KAAF,EAASC,QAAT,IAAsBJ,QAAQ,CAAC,CAAD,CAApC;AAEA,QAAMK,kBAAkB,GAAG,KAAKC,KAAL,CAAWC,SAAX,GAAuB,UAAvB,GAAoC,OAA/D,CAJkB,CAIsD;AACxE;;AACA,QAAMC,QAAQ,GAAc,KAAKF,KAAL,CAAWG,eAAX,KAA8B,EAA/B,GAAqC,UAArC,GAAkD,aAA7E;AAEE,sBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAK,IAAA,SAAS,EAAE,YAAYJ,kBAAZ,GAAiC,GAAjC,GAAuCG,QAAvD;AAAiE,IAAA,GAAG,EAAE,KAAKF,KAAL,CAAWI,MAAjF;AAAyF,IAAA,GAAG,EAAC,QAA7F;AAAsG,IAAA,OAAO,EAAE,MAAM,KAAKJ,KAAL,CAAWK,aAAX,EAArH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,eAEC;AAAK,IAAA,SAAS,EAAE,WAAW,KAAKL,KAAL,CAAWM,UAAtC;AAAkD,IAAA,GAAG,EAAC,UAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkE,KAAKN,KAAL,CAAWO,QAA7E,CAFD,CADF,eAOE,oBAAC,WAAD;AACE,IAAA,KAAK,EAAKV,KADZ;AAEE,IAAA,QAAQ,EAAEW,WAAW,IAAIV,QAAQ,CAACU,WAAW,CAACC,MAAZ,CAAmBZ,KAApB,CAFnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADA;AAeD,CAvBH;;AA0BA,eAAeD,KAAf","sourcesContent":["import React, { useState } from 'react';\nimport 'react-bootstrap-range-slider/dist/react-bootstrap-range-slider.css';\nimport RangeSlider from 'react-bootstrap-range-slider';\n\nimport './Brick.css';\n\n// we can use hooks instead of creating a class with new React JS \nconst Brick = () => {\n\n  const [ value, setValue ] = useState(0); \n\n  const animation_property = this.props.animation ? 'activate' : 'reset'; // this should be adjusted \n  // const selected           = (this.props.noFeedback==='') ? 'selected' : 'notSelected'\n  const selected           = (this.props.symbolHighlight ==='') ? 'selected' : 'notSelected'\n    \n    return ( \n    <div>     \n      <div className=\"container\">\n       <img className={\"symbol \" + animation_property + \" \" + selected} src={this.props.symbol} alt='symbol' onClick={() => this.props.symbolClicked()}/>\n       <div className={\"square\" + this.props.noFeedback} alt='feedback'>{this.props.feedback}</div>   \n      \n      </div>\n\n      <RangeSlider \n        value   ={value}\n        onChange={changeEvent => setValue(changeEvent.target.value)}\n      />\n      </div>\n\n    );\n  }\n\n\nexport default Brick;\n\n\n\n"]},"metadata":{},"sourceType":"module"}