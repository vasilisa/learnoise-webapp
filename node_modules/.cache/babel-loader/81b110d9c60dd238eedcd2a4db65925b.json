{"ast":null,"code":"import _objectSpread from \"/Users/vasilisaskvortsova/Documents/COVID-19/covid-webap/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"/Users/vasilisaskvortsova/Documents/COVID-19/covid-webap/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/vasilisaskvortsova/Documents/COVID-19/covid-webap/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/vasilisaskvortsova/Documents/COVID-19/covid-webap/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/vasilisaskvortsova/Documents/COVID-19/covid-webap/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/vasilisaskvortsova/Documents/COVID-19/covid-webap/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/vasilisaskvortsova/Documents/COVID-19/covid-webap/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/vasilisaskvortsova/Documents/COVID-19/covid-webap/src/components/Survey/Survey.js\";\nimport React from 'react';\nimport { Button } from 'react-bootstrap';\nimport { withRouter } from 'react-router-dom'; // import other questionnaires the same way \n\nimport * as demo from '../../questionnaires/DEMO';\nimport * as ybocs from '../../questionnaires/YBOCS';\nimport * as covid from '../../questionnaires/COVID19';\nimport * as padwsur from '../../questionnaires/PAD-WSUR';\nimport * as hads from '../../questionnaires/HADS';\nimport * as pss from '../../questionnaires/PSS';\nimport * as pswq from '../../questionnaires/PSWQ';\nimport * as ius from '../../questionnaires/IUS';\nimport * as bis from '../../questionnaires/BIS11'; // import './Survey.css'\n\nvar quizData = {\n  padwsur: padwsur,\n  hads: hads,\n  pss: pss,\n  pswq: pswq,\n  demo: demo,\n  ybocs: ybocs,\n  covid: covid // add other questionnaires later \n  // feedback: feedback \n\n}; // console.log(quizData) \n// Create a list of survey tags that will be presented to the user \n\nvar survey_list = ['padwsur', 'hads', 'pss', 'pswq', 'ybocs', 'demo', 'covid']; // 'feedback' parametrize the order of questionnaires here \n\nvar n = survey_list.length;\n\nfunction createQuiz(id, survey_name) {\n  return {\n    id: id,\n    surveytag: survey_name,\n    quizQuestions: quizData[survey_name]\n  };\n}\n\nvar list = [];\n\nfor (var i = 0; i < n; i++) {\n  var obj = createQuiz(i, survey_list[i]); //add other params if you need\n\n  list.push(obj);\n}\n\nconsole.log(list); // MIGHT NOT NEED THIS \n\nvar Survey =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Survey, _React$Component);\n\n  function Survey(props) {\n    var _this;\n\n    _classCallCheck(this, Survey);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Survey).call(this, props));\n    console.log(_this.props.location.state); // Information about a specific block of the Survey: \n\n    var block_info = {\n      surveytag: survey_list[0] // First questionnaire in the list \n\n    };\n    _this.state = {\n      participant_info: _this.props.location.state.participant_info,\n      block_info: block_info,\n      newblock_frame: _this.props.location.state.newblock_frame,\n      questions: quizData[survey_list[0]].default\n    };\n    console.log(_this.state.questions);\n\n    _this.getSurveyBlock.bind(_assertThisInitialized(_this));\n\n    _this.redirectToQuiz.bind(_assertThisInitialized(_this));\n\n    _this.redirectToEnd.bind(_assertThisInitialized(_this)); // TO BE CHANGED \n\n\n    _this._isMounted = false;\n\n    _this._handleGoBack.bind(_assertThisInitialized(_this));\n\n    _this._handleTimeOut.bind(_assertThisInitialized(_this));\n\n    return _this;\n  }\n\n  _createClass(Survey, [{\n    key: \"redirectToQuiz\",\n    value: function redirectToQuiz() {\n      if (this.state.participant_info.block_number <= this.state.participant_info.TotalBlock) {\n        if (this.state.newblock_frame) {\n          // TRUE\n          this.setState({\n            newblock_frame: false\n          });\n          console.log(this.state.newblock_frame);\n          this.props.history.push({\n            pathname: \"/QuizBlock\",\n            state: {\n              participant_info: this.state.participant_info,\n              block_info: this.state.block_info,\n              questions: this.state.questions\n            }\n          });\n        } else {\n          if (this._isMounted) {\n            console.log(this.state.participant_info.block_number);\n            var newblocknumber = this.state.participant_info.block_number + 1;\n            console.log(newblocknumber);\n            this.getSurveyBlock(newblocknumber + 1, survey_list);\n            this.setState({\n              newblock_frame: true,\n              participant_info: _objectSpread({}, this.state.participant_info, {\n                block_number: newblocknumber\n              })\n            });\n            console.log(this.state.block_info);\n          }\n        }\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this._isMounted = true;\n      document.body.style.background = '#fff';\n      this._isMounted && this.getSurveyBlock(this.state.participant_info.block_number + 1, survey_list);\n      window.history.pushState(window.state, null, window.location.href);\n      window.addEventListener('popstate', function (e) {\n        return _this2._handleGoBack(e);\n      });\n      window.onbeforeunload = this._handleRefresh;\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearTimeout(this._handleTimeOut);\n    }\n  }, {\n    key: \"_handleRefresh\",\n    value: function _handleRefresh(evt) {\n      return false; // error message when refresh occurs\n    }\n  }, {\n    key: \"_handleGoBack\",\n    value: function _handleGoBack(event) {\n      window.history.go(1);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._isMounted = false;\n    }\n  }, {\n    key: \"_handleTimeOut\",\n    value: function _handleTimeOut() {\n      var _this3 = this;\n\n      setTimeout(function () {\n        _this3.redirectToQuiz();\n      }, 1500);\n    } // Get info about the specific Survey Block: \n\n  }, {\n    key: \"getSurveyBlock\",\n    value: function getSurveyBlock(block_number_, survey_list) {\n      console.log('Block Number:', block_number_);\n      var surveytag_block = survey_list[block_number_ - 1];\n      console.log('SurveyTag Block:', surveytag_block);\n      this.setState({\n        loading: true,\n        questions: quizData[survey_list[block_number_ - 1]].default,\n        block_info: _objectSpread({}, this.state.block_info, {\n          surveytag: surveytag_block\n        })\n      });\n    }\n  }, {\n    key: \"redirectToEnd\",\n    value: function redirectToEnd() {\n      alert(\"You will be redirected to the validation page. Please, confirm leaving the page. Thank you!\"); // window.location.replace('https://app.prolific.co/submissions/complete?cc=1A496EDB')\n\n      window.location = 'https://app.prolific.co/submissions/complete?cc=XXXXXXXX'; // add STUDY_ID \n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var text;\n\n      if (this.state.block_info.surveytag === survey_list[0] && this.state.newblock_frame) {\n        text = React.createElement(\"div\", {\n          className: \"SurveyIntroText\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171\n          },\n          __self: this\n        }, \" \", React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171\n          },\n          __self: this\n        }, \"Dear Participant,\"), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172\n          },\n          __self: this\n        }, \"Thank you for taking part in our study!\"), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173\n          },\n          __self: this\n        }, \"The current study investigating \\u2018decision-making in time of uncertainty\\u2019 will take about X minutes.\"), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174\n          },\n          __self: this\n        }, \"You will be asked to complete several questionnaires and play a decision-making task.\"), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175\n          },\n          __self: this\n        }, \"Please do not start until you will have enough time to complete it in one go.\"), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 176\n          },\n          __self: this\n        }, \"Please close other programs (e.g. chat or e-mail) to avoid distractions.\"), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 178\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"bold\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 178\n          },\n          __self: this\n        }, \"Good luck!\")));\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 181\n          },\n          __self: this\n        }, React.createElement(\"center\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"instructionsButtonContainer\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 183\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 184\n          },\n          __self: this\n        }, text), React.createElement(\"center\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 187\n          },\n          __self: this\n        }, React.createElement(Button, {\n          className: \"buttonInstructionStart\",\n          onClick: function onClick() {\n            return _this4.redirectToQuiz();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 188\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"bold\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 189\n          },\n          __self: this\n        }, \"START\"))))));\n      } else if (this.state.block_info.surveytag === \"feedback\" && this.state.newblock_frame) {\n        text = React.createElement(\"div\", {\n          className: \"SurveyIntroText\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 200\n          },\n          __self: this\n        }, \" \", React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 200\n          },\n          __self: this\n        }, \"Your feedback\"), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 201\n          },\n          __self: this\n        }, \"Please, provide us with the feedback about this study\"));\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 204\n          },\n          __self: this\n        }, React.createElement(\"center\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 205\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"instructionsButtonContainer\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 206\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 207\n          },\n          __self: this\n        }, text), React.createElement(\"center\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 210\n          },\n          __self: this\n        }, React.createElement(Button, {\n          className: \"buttonInstructionStart\",\n          onClick: function onClick() {\n            return _this4.redirectToQuiz();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 211\n          },\n          __self: this\n        }, \"START\")))));\n      } else if (this.state.block_info.surveytag !== survey_list[0] && this.state.newblock_frame) {\n        console.log(this.state.block_info);\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 223\n          },\n          __self: this\n        }, this._handleTimeOut());\n      } else if (this.state.participant_info.block_number === this.state.participant_info.TotalBlock + 1) {\n        text = React.createElement(\"div\", {\n          className: \"SurveyIntroText\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 228\n          },\n          __self: this\n        }, \" \", React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 228\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          class: \"bold\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 228\n          },\n          __self: this\n        }, \"You finished the survey!\"), \" \"), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 229\n          },\n          __self: this\n        }, \"Thank you for your participation!\"), React.createElement(Button, {\n          variant: \"secondary\",\n          color: \"danger\",\n          size: \"sm\",\n          className: \"buttonInstructionFinal\",\n          type: \"submit\",\n          onClick: function onClick() {\n            return _this4.redirectToEnd();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 230\n          },\n          __self: this\n        }, \"Click here \"));\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 232\n          },\n          __self: this\n        }, React.createElement(\"center\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 233\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"restarttraining\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 234\n          },\n          __self: this\n        }, text, \"  \", React.createElement(\"div\", {\n          className: \"translate\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 235\n          },\n          __self: this\n        }))));\n      } else {\n        text = '... CONTINUE ...';\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 245\n          },\n          __self: this\n        }, React.createElement(\"center\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 246\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"SurveyIntroText\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 247\n          },\n          __self: this\n        }, text), React.createElement(\"center\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 250\n          },\n          __self: this\n        }, React.createElement(Button, {\n          className: \"buttonInstructionStart\",\n          onClick: function onClick() {\n            return _this4.redirectToQuiz();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 251\n          },\n          __self: this\n        }, \"\\u2192\"))));\n      }\n    }\n  }]);\n\n  return Survey;\n}(React.Component);\n\nexport default withRouter(Survey);","map":{"version":3,"sources":["/Users/vasilisaskvortsova/Documents/COVID-19/covid-webap/src/components/Survey/Survey.js"],"names":["React","Button","withRouter","demo","ybocs","covid","padwsur","hads","pss","pswq","ius","bis","quizData","survey_list","n","length","createQuiz","id","survey_name","surveytag","quizQuestions","list","i","obj","push","console","log","Survey","props","location","state","block_info","participant_info","newblock_frame","questions","default","getSurveyBlock","bind","redirectToQuiz","redirectToEnd","_isMounted","_handleGoBack","_handleTimeOut","block_number","TotalBlock","setState","history","pathname","newblocknumber","document","body","style","background","window","pushState","href","addEventListener","e","onbeforeunload","_handleRefresh","clearTimeout","evt","event","go","setTimeout","block_number_","surveytag_block","loading","alert","text","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Button } from 'react-bootstrap';\nimport {withRouter} from 'react-router-dom';\n\n// import other questionnaires the same way \nimport * as demo  from '../../questionnaires/DEMO'; \nimport * as ybocs from '../../questionnaires/YBOCS'; \nimport * as covid from '../../questionnaires/COVID19';\nimport * as padwsur from '../../questionnaires/PAD-WSUR';\nimport * as hads from '../../questionnaires/HADS';\nimport * as pss from '../../questionnaires/PSS';\nimport * as pswq from '../../questionnaires/PSWQ';\nimport * as ius from '../../questionnaires/IUS';\nimport * as bis from '../../questionnaires/BIS11';\n\n\n\n// import './Survey.css'\n\nvar quizData = {\n  padwsur: padwsur,\n  hads: hads, \n  pss: pss,\n  pswq: pswq, \n  demo:demo,\n  ybocs:ybocs,\n  covid:covid // add other questionnaires later \n  // feedback: feedback \n}\n\n\n// console.log(quizData) \n\n// Create a list of survey tags that will be presented to the user \nconst survey_list = ['padwsur','hads','pss','pswq','ybocs','demo','covid'] // 'feedback' parametrize the order of questionnaires here \nconst n           =  survey_list.length;   \n\nfunction createQuiz(id,survey_name) {\n     return {\n         id: id,\n         surveytag: survey_name,\n         quizQuestions: quizData[survey_name]\n     };\n }\n\n\nvar list = [];\n for(var i = 0; i < n; i++) {\n    var obj = createQuiz(i,survey_list[i]); //add other params if you need\n    list.push(obj);\n }\n console.log(list);\n// MIGHT NOT NEED THIS \n\n\nclass Survey extends React.Component {\n  constructor(props){\n    super(props);\n\n    console.log(this.props.location.state)\n    \n    // Information about a specific block of the Survey: \n    const block_info = {\n      surveytag  : survey_list[0], // First questionnaire in the list \n     }\n\n    this.state = {\n      participant_info : this.props.location.state.participant_info,\n      block_info       : block_info,\n      newblock_frame   : this.props.location.state.newblock_frame,  \n      questions        : quizData[survey_list[0]].default,\n    }\n\n    console.log(this.state.questions)\n\n    this.getSurveyBlock.bind(this);\n    this.redirectToQuiz.bind(this); \n    this.redirectToEnd.bind(this); // TO BE CHANGED \n    this._isMounted = false;\n    this._handleGoBack.bind(this); \n    this._handleTimeOut.bind(this);   \n  }\n\n\n  redirectToQuiz () {\n      if((this.state.participant_info.block_number <= (this.state.participant_info.TotalBlock)))\n          {           \n          if (this.state.newblock_frame){ // TRUE\n          this.setState({newblock_frame : false})\n\n          console.log(this.state.newblock_frame)\n          this.props.history.push({\n           pathname: `/QuizBlock`,\n           state: {participant_info: this.state.participant_info,\n                   block_info      : this.state.block_info,\n                   questions       : this.state.questions\n                 }\n          })}\n          else\n          {\n            if (this._isMounted)\n            {\n              console.log(this.state.participant_info.block_number)\n              const newblocknumber = this.state.participant_info.block_number + 1\n              console.log(newblocknumber)\n              this.getSurveyBlock(newblocknumber+1,survey_list)\n              this.setState({newblock_frame: true, participant_info : {...this.state.participant_info, block_number:newblocknumber},}) \n              console.log(this.state.block_info)\n              \n            }\n          }\n        }\n      }\n    \n  componentDidMount() { \n  this._isMounted = true;\n  document.body.style.background= '#fff'; \n  this._isMounted && this.getSurveyBlock(this.state.participant_info.block_number+1,survey_list);\n    window.history.pushState(window.state, null, window.location.href);\n    window.addEventListener('popstate', e => this._handleGoBack(e));\n    window.onbeforeunload = this._handleRefresh\n\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this._handleTimeOut);\n  }\n\n  _handleRefresh(evt){\n    return false // error message when refresh occurs\n  }\n\n  _handleGoBack(event){\n    window.history.go(1);\n  }\n\n  componentWillUnmount()\n  {\n   this._isMounted = false;\n  } \n\n  _handleTimeOut() {\n    setTimeout(() => {\n     this.redirectToQuiz()\n    }, 1500);\n} \n\n // Get info about the specific Survey Block: \n getSurveyBlock(block_number_,survey_list) {\n\n    console.log('Block Number:',block_number_)\n\n    const surveytag_block = survey_list[block_number_-1]\n    console.log('SurveyTag Block:',surveytag_block)\n \n    this.setState({ loading: true ,questions: quizData[survey_list[block_number_-1]].default, block_info : {...this.state.block_info, surveytag:surveytag_block}});\n\n}\n\n redirectToEnd(){\n    alert(\"You will be redirected to the validation page. Please, confirm leaving the page. Thank you!\")\n    // window.location.replace('https://app.prolific.co/submissions/complete?cc=1A496EDB')\n    window.location = 'https://app.prolific.co/submissions/complete?cc=XXXXXXXX' // add STUDY_ID \n}\n\nrender()\n  { \n    let text\n    if ((this.state.block_info.surveytag === survey_list[0]) && (this.state.newblock_frame))\n    { \n      text = <div className='SurveyIntroText'> <p>Dear Participant,</p>\n      <p>Thank you for taking part in our study!</p>\n      <p>The current study investigating ‘decision-making in time of uncertainty’ will take about X minutes.</p> \n      <p>You will be asked to complete several questionnaires and play a decision-making task.</p>\n      <p>Please do not start until you will have enough time to complete it in one go.</p>\n      <p>Please close other programs (e.g. chat or e-mail) to avoid distractions.</p>\n\n      <p><span className=\"bold\">Good luck!</span></p></div>\n\n    return (\n      <div>\n      <center> \n      <div className=\"instructionsButtonContainer\">\n        <div>\n          {text}           \n        </div> \n        <center>\n          <Button className=\"buttonInstructionStart\" onClick={()=>this.redirectToQuiz()}>\n          <span className=\"bold\">START</span>\n          </Button>\n        </center>\n      </div>\n      </center> \n      </div>);\n    } \n\n    \n    else if ((this.state.block_info.surveytag === \"feedback\") && (this.state.newblock_frame)) \n    { \n      text = <div className='SurveyIntroText'> <p>Your feedback</p>\n                <p>Please, provide us with the feedback about this study</p> \n                </div>\n        return (\n        <div>\n        <center> \n        <div className=\"instructionsButtonContainer\">\n          <div>\n            {text}           \n          </div> \n            <center>\n            <Button className=\"buttonInstructionStart\" onClick={()=>this.redirectToQuiz()}>\n            START\n            </Button>\n            </center>\n          </div>\n          </center>\n          </div>);\n      }\n\n     else if ((this.state.block_info.surveytag !== survey_list[0]) && (this.state.newblock_frame)) \n    { \n        console.log(this.state.block_info)\n        return(<div>{this._handleTimeOut()}</div>);\n      }\n\n    else if (this.state.participant_info.block_number === this.state.participant_info.TotalBlock+1) \n    {\n      text = <div className='SurveyIntroText'> <p><span class=\"bold\">You finished the survey!</span> </p>\n      <p>Thank you for your participation!</p> \n      <Button variant=\"secondary\" color=\"danger\" size=\"sm\" className=\"buttonInstructionFinal\" type=\"submit\" onClick={() => this.redirectToEnd()}>Click here </Button></div>\n        return (\n          <div>\n          <center> \n          <div className=\"restarttraining\">\n              {text}  <div className=\"translate\"/>\n            </div>\n          </center>\n          </div>);        \n    }\n\n    else\n    {\n          text = '... CONTINUE ...'\n        return (\n      <div>\n      <center>\n      <div className=\"SurveyIntroText\">\n        {text}           \n      </div>\n      <center>\n            <Button className=\"buttonInstructionStart\" onClick={()=>this.redirectToQuiz()}>\n            &#8594;\n            </Button>\n            </center>\n    </center>\n    </div>);\n    }    \n  }\n\n}\n\nexport default withRouter(Survey);"]},"metadata":{},"sourceType":"module"}