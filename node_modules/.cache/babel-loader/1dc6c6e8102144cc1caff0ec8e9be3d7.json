{"ast":null,"code":"import _defineProperty from \"/Users/vasilisaskvortsova/Documents/COVID-19/covid-webap/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/vasilisaskvortsova/Documents/COVID-19/covid-webap/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"/Users/vasilisaskvortsova/Documents/COVID-19/covid-webap/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/vasilisaskvortsova/Documents/COVID-19/covid-webap/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/vasilisaskvortsova/Documents/COVID-19/covid-webap/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/vasilisaskvortsova/Documents/COVID-19/covid-webap/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/vasilisaskvortsova/Documents/COVID-19/covid-webap/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/vasilisaskvortsova/Documents/COVID-19/covid-webap/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/vasilisaskvortsova/Documents/COVID-19/covid-webap/src/components/CheckboxQuiz/CheckboxQuiz.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransitionGroup } from 'react-transition-group';\nimport Question from '../QuizQuestion/Question';\nimport QuestionCount from '../QuizQuestion/QuestionCount';\nimport AnswerOption from '../QuizQuestion/AnswerOption'; // import './CheckboxQuiz.css';\n// Maybe import for consistency CHANGE \n\nvar Checkbox = function Checkbox(_ref) {\n  var label = _ref.label,\n      isSelected = _ref.isSelected,\n      onCheckboxChange = _ref.onCheckboxChange;\n  return React.createElement(\"div\", {\n    className: \"form-check\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"checkbox\",\n    name: label,\n    checked: isSelected,\n    onChange: onCheckboxChange,\n    className: \"form-check-input\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }), label));\n};\n/* Checkbox.propTypes = {\n   type: PropTypes.string,\n   name: PropTypes.string.isRequired,\n   checked: PropTypes.bool,\n   onChange: PropTypes.func.isRequired,\n   className:PropTypes.string\n}\n*/\n\n\nvar CheckboxQuiz =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CheckboxQuiz, _React$Component);\n\n  function CheckboxQuiz(props) {\n    var _this;\n\n    _classCallCheck(this, CheckboxQuiz);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CheckboxQuiz).call(this, props));\n    var options = {};\n    var answers = {}; // Object.keys(this.props.answerOptions).map(function(key, index) {\n    //      // options[key] = false; // mybe to change to type\n    //      options[key.type] = false; // mybe to change to type \n    //    });\n\n    for (var key in _this.props.answerOptions) {\n      console.log(key);\n      options[_this.props.answerOptions[key].type] = false; // this.props.answerOptions[key].type\n\n      answers[_this.props.answerOptions[key].type] = _this.props.answerOptions[key].content;\n    }\n\n    for (var key in _this.props.answerOptions) {\n      console.log(key);\n      answers[_this.props.answerOptions[key].type] = _this.props.answerOptions[key].content;\n    }\n\n    console.log(options);\n    console.log(answers);\n    _this.state = {\n      report: '',\n      answer: '',\n      answercheck: false,\n      shouldBlockNavigation: false,\n      checkboxes: options,\n      answers: answers\n    };\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_this));\n    _this.handleChangeReport = _this.handleChangeReport.bind(_assertThisInitialized(_this));\n    _this._handleRefresh = _this._handleRefresh.bind(_assertThisInitialized(_this));\n    _this.createCheckBox = _this.createCheckBox.bind(_assertThisInitialized(_this));\n    return _this;\n  } // constructor\n\n\n  _createClass(CheckboxQuiz, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this._isMounted = true;\n      document.body.style.background = '#fff';\n      this.setState({\n        report: '',\n        answer: '',\n        answercheck: false,\n        shouldBlockNavigation: false\n      });\n      window.history.pushState(window.state, null, window.location.href);\n      window.onbeforeunload = null;\n      window.addEventListener(\"keypress\", function (e) {\n        return _this2._handleRefresh(e);\n      });\n    }\n  }, {\n    key: \"_handleGoBack\",\n    value: function _handleGoBack(event) {\n      window.history.go(1);\n    }\n  }, {\n    key: \"handleChangeReport\",\n    value: function handleChangeReport(event) {\n      var test = Number(event.target.value);\n      this.setState({\n        report: event.target.value,\n        answercheck: false\n      }); // console.log(event.key)\n\n      if (test !== \"\" && test !== null && test > parseInt(this.props.constraint[0].min) && test < parseInt(this.props.constraint[1].max)) {\n        this.setState({\n          answercheck: true\n        }); // console.log(this.state.answercheck)\n      } else {\n        event.preventDefault();\n      }\n    }\n  }, {\n    key: \"_handleRefresh\",\n    value: function _handleRefresh(e) {\n      if (e.key === 'Enter') {\n        // console.log('enter e', e.srcElement);\n        // console.log('value', e.target.value);\n        var test = this.state.report; // console.log('test',this.state.report)\n\n        if (test !== \"\" && test !== null && test > parseInt(this.props.constraint[0].min) && test < parseInt(this.props.constraint[1].max)) {\n          this.setState({\n            answercheck: true\n          }); // console.log(this.state.answercheck)\n          // Send answers to the parent component\n\n          document.getElementById(\"create-course-form\").reset();\n          var prev_report = this.state.report;\n          this.setState({\n            report: ''\n          });\n          this.props.onAnswerSelected(this.state.report, this.props.questionId, e);\n        } else {\n          e.preventDefault();\n        }\n      }\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      // console.log(event)\n      event.preventDefault(); // Check if any of the boxes are checked -> combine the final report and send it to the parent Quiz Block component \n\n      console.log(this.state.checkboxes);\n\n      var sumValues = function sumValues(obj) {\n        return Object.values(obj).reduce(function (a, b) {\n          return a + b;\n        });\n      };\n\n      var count = sumValues(this.state.checkboxes);\n      console.log('Number of checked boxes:', count); // sub select only answer options that have been checked \n\n      if (count > 0) {\n        // at least one box is checked\n        var report = {};\n        Object.keys(this.state.checkboxes).map(function (key, index) {\n          if (this.state.checkboxes[key] === true) {\n            report[key] = this.state.answers[key];\n          }\n        });\n        console.log(report);\n        this.props.onAnswerSelected(report, this.props.questionId, event);\n        this.setState({\n          report: ''\n        });\n      } else {\n        this.setState({\n          report: report\n        });\n      }\n    }\n  }, {\n    key: \"handleCheckboxChange\",\n    value: function handleCheckboxChange(changeEvent, e) {\n      console.log('ChangeEvent', changeEvent);\n      this.setState(function (prevState) {\n        return {\n          checkboxes: _objectSpread({}, prevState.checkboxes, _defineProperty({}, changeEvent, !prevState.checkboxes[changeEvent]))\n        };\n      }); // Check if any of the boxes are checked -> combine the final report and send it to the parent Quiz Block component \n\n      console.log(this.state.checkboxes);\n\n      var sumValues = function sumValues(obj) {\n        return Object.values(obj).reduce(function (a, b) {\n          return a + b;\n        });\n      };\n\n      var count = sumValues(this.state.checkboxes);\n      console.log('Number of checked boxes:', count);\n    }\n  }, {\n    key: \"createCheckBox\",\n    value: function createCheckBox(key) {\n      var _this3 = this;\n\n      return React.createElement(Checkbox, {\n        type: key.type,\n        label: key.content,\n        isSelected: this.state.checkboxes[key] // answerType      ={key.type}\n        // questionId      ={props.questionId}\n        ,\n        onCheckboxChange: function onCheckboxChange(e) {\n          return _this3.handleCheckboxChange(key.type, e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(CSSTransitionGroup, {\n        className: \"container\",\n        component: \"div\",\n        transitionName: \"fade\",\n        transitionEnterTimeout: 800,\n        transitionLeaveTimeout: 500,\n        transitionAppear: true,\n        transitionAppearTimeout: 500,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        key: this.props.questionId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }, React.createElement(QuestionCount, {\n        counter: this.props.questionCount,\n        total: this.props.questionTotal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }), React.createElement(Question, {\n        content: this.props.question,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }), React.createElement(\"ul\", {\n        className: \"answerOptions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }, this.props.answerOptions.map(this.createCheckBox))), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"col-md-12 pad-20\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-save btn-primary pad-20\",\n        onClick: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, \"Submit\"))));\n    }\n  }]);\n\n  return CheckboxQuiz;\n}(React.Component); // closing class \n\n\nCheckboxQuiz.propTypes = {\n  answer: PropTypes.string.isRequired,\n  answerOptions: PropTypes.array.isRequired,\n  question: PropTypes.string.isRequired,\n  questionId: PropTypes.number.isRequired,\n  questionCount: PropTypes.number.isRequired,\n  questionTotal: PropTypes.number.isRequired,\n  onAnswerSelected: PropTypes.func.isRequired\n};\nexport default CheckboxQuiz;","map":{"version":3,"sources":["/Users/vasilisaskvortsova/Documents/COVID-19/covid-webap/src/components/CheckboxQuiz/CheckboxQuiz.js"],"names":["React","PropTypes","CSSTransitionGroup","Question","QuestionCount","AnswerOption","Checkbox","label","isSelected","onCheckboxChange","CheckboxQuiz","props","options","answers","key","answerOptions","console","log","type","content","state","report","answer","answercheck","shouldBlockNavigation","checkboxes","handleSubmit","bind","handleChangeReport","_handleRefresh","createCheckBox","_isMounted","document","body","style","background","setState","window","history","pushState","location","href","onbeforeunload","addEventListener","e","event","go","test","Number","target","value","parseInt","constraint","min","max","preventDefault","getElementById","reset","prev_report","onAnswerSelected","questionId","sumValues","obj","Object","values","reduce","a","b","count","keys","map","index","changeEvent","prevState","handleCheckboxChange","questionCount","questionTotal","question","Component","propTypes","string","isRequired","array","number","func"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransitionGroup } from 'react-transition-group';\nimport Question from '../QuizQuestion/Question';\nimport QuestionCount from '../QuizQuestion/QuestionCount';\nimport AnswerOption from '../QuizQuestion/AnswerOption';\n\n\n// import './CheckboxQuiz.css';\n// Maybe import for consistency CHANGE \nconst Checkbox = ({ label, isSelected, onCheckboxChange }) => (\n  <div className=\"form-check\">\n    <label>\n      <input\n        type=\"checkbox\"\n        name={label}\n        checked={isSelected}\n        onChange={onCheckboxChange}\n        className=\"form-check-input\"\n      />\n      {label}\n    </label>\n  </div>\n);\n\n\n\n/* Checkbox.propTypes = {\n   type: PropTypes.string,\n   name: PropTypes.string.isRequired,\n   checked: PropTypes.bool,\n   onChange: PropTypes.func.isRequired,\n   className:PropTypes.string\n}\n*/\n\nclass CheckboxQuiz extends React.Component {\n\n  constructor(props){\n    super(props);\n  \n\n  var options = {}\n  var answers = {}\n\n// Object.keys(this.props.answerOptions).map(function(key, index) {\n//      // options[key] = false; // mybe to change to type\n//      options[key.type] = false; // mybe to change to type \n//    });\n \nfor (var key in this.props.answerOptions) {\n  console.log(key)\n  options[this.props.answerOptions[key].type] = false // this.props.answerOptions[key].type\n  answers[this.props.answerOptions[key].type] = this.props.answerOptions[key].content\n}\n\nfor (var key in this.props.answerOptions) {\n  console.log(key)\n  answers[this.props.answerOptions[key].type] = this.props.answerOptions[key].content \n}\n\n\nconsole.log(options);\nconsole.log(answers);\n\n\n this.state = {\n    report: '',\n    answer: '',\n    answercheck: false,\n    shouldBlockNavigation: false,\n    checkboxes: options,\n    answers: answers \n  }\n  \n  this.handleSubmit       = this.handleSubmit.bind(this);  \n  this.handleChangeReport = this.handleChangeReport.bind(this);\n  this._handleRefresh     = this._handleRefresh.bind(this); \n  this.createCheckBox     = this.createCheckBox.bind(this); \n} // constructor\n\n\ncomponentDidMount() {\n  this._isMounted = true;\n  document.body.style.background= '#fff';   \n  this.setState({\n    report: '',\n    answer: '',\n    answercheck: false,\n    shouldBlockNavigation: false}\n    )\n  window.history.pushState(window.state, null, window.location.href)\n  window.onbeforeunload = null;\n  window.addEventListener(\"keypress\", e => this._handleRefresh(e));\n\n}\n\n_handleGoBack(event){\n    window.history.go(1);\n  }\n\nhandleChangeReport(event) {\n\n  var test = Number(event.target.value)\n    \n  this.setState({\n    report: event.target.value,\n    answercheck: false \n    }\n    );\n  \n  // console.log(event.key)\n  if ((test!==\"\") && (test!==null) && (test>parseInt(this.props.constraint[0].min)) && (test<parseInt(this.props.constraint[1].max))) \n  {\n    this.setState({\n    answercheck: true}\n    );\n    // console.log(this.state.answercheck)\n  }\n  else {\n    event.preventDefault()\n  }\n\n}\n\n_handleRefresh(e){\n  if (e.key==='Enter') {\n  // console.log('enter e', e.srcElement);\n\n  // console.log('value', e.target.value);\n\n  var test = this.state.report\n  // console.log('test',this.state.report)\n    \n  if ((test!==\"\") && (test!==null) && (test>parseInt(this.props.constraint[0].min)) && (test<parseInt(this.props.constraint[1].max))) \n  {\n    this.setState({\n    answercheck: true}\n    );\n\n    // console.log(this.state.answercheck)\n    // Send answers to the parent component\n    document.getElementById(\"create-course-form\").reset();\n    let prev_report = this.state.report \n        this.setState({\n          report: ''}\n        )\n\n        this.props.onAnswerSelected(this.state.report,this.props.questionId,e) \n  }\n  else {\n    e.preventDefault()\n  }\n \n  }\n}\n\n  handleSubmit(event) {\n        \n        // console.log(event)\n        \n        event.preventDefault();\n\n        // Check if any of the boxes are checked -> combine the final report and send it to the parent Quiz Block component \n        console.log(this.state.checkboxes)\n\n        const sumValues = obj => Object.values(obj).reduce((a, b) => a + b);\n        const count = sumValues(this.state.checkboxes);\n        console.log('Number of checked boxes:',count)\n        \n        // sub select only answer options that have been checked \n\n        if (count > 0){ // at least one box is checked\n\n        var report = {}\n          Object.keys(this.state.checkboxes).map(function(key, index) {\n          if (this.state.checkboxes[key]===true){\n            report[key] = this.state.answers[key]\n          }\n          });\n  \n        console.log(report)\n  \n          this.props.onAnswerSelected(report,this.props.questionId,event)\n          this.setState({\n          report: ''}\n\n        )\n        } \n\n        else {\n          this.setState({\n          report: report}\n          )\n        }\n      }\n\n\nhandleCheckboxChange(changeEvent,e) {\n  console.log('ChangeEvent',changeEvent)\n  \n\n  this.setState(prevState => ({\n      checkboxes: {\n        ...prevState.checkboxes,\n        [changeEvent]: !prevState.checkboxes[changeEvent],\n      }\n    }));\n\n  // Check if any of the boxes are checked -> combine the final report and send it to the parent Quiz Block component \n  console.log(this.state.checkboxes)\n\n  const sumValues = obj => Object.values(obj).reduce((a, b) => a + b);\n  const count = sumValues(this.state.checkboxes);\n  console.log('Number of checked boxes:',count)\n        \n\n}\n\n\ncreateCheckBox(key) {\n    return (\n      <Checkbox\n        type            ={key.type}\n        label           ={key.content}\n        isSelected      ={this.state.checkboxes[key]}\n        // answerType      ={key.type}\n        // questionId      ={props.questionId}\n        onCheckboxChange={(e)=>this.handleCheckboxChange(key.type,e)}\n      />\n    );\n  }\n\n\nrender() {\n        \n  return (\n    <CSSTransitionGroup\n      className=\"container\"\n      component=\"div\"\n      transitionName=\"fade\"\n      transitionEnterTimeout={800}\n      transitionLeaveTimeout={500}\n      transitionAppear\n      transitionAppearTimeout={500}\n    >\n      <div key={this.props.questionId}>\n        <QuestionCount counter={this.props.questionCount} total={this.props.questionTotal} />\n        <Question content={this.props.question}/>\n        \n        <ul className=\"answerOptions\">\n          {this.props.answerOptions.map(this.createCheckBox)}\n        </ul>\n      \n      </div>\n      <p></p>\n      <div className=\"col-md-12 pad-20\">\n        <div>\n          <button type=\"button\" className=\"btn btn-save btn-primary pad-20\" onClick={this.handleSubmit}>\n            Submit\n          </button>\n          </div>\n      </div>\n\n    </CSSTransitionGroup>\n  );\n}\n\n} // closing class \n\n\n\nCheckboxQuiz.propTypes = {\n  answer: PropTypes.string.isRequired,\n  answerOptions: PropTypes.array.isRequired,\n  question: PropTypes.string.isRequired,\n  questionId: PropTypes.number.isRequired,\n  questionCount: PropTypes.number.isRequired,\n  questionTotal: PropTypes.number.isRequired,\n  onAnswerSelected: PropTypes.func.isRequired,\n};\n\nexport default CheckboxQuiz;\n\n\n"]},"metadata":{},"sourceType":"module"}