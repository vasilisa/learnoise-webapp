{"ast":null,"code":"var _jsxFileName = \"/Users/vasilisaskvortsova/Documents/LEARNOISE-local/webap-learnoise-2/src/components/Board/ConfRate.js\";\nimport React, { useState } from 'react';\nimport 'react-bootstrap-range-slider/dist/react-bootstrap-range-slider.css';\nimport RangeSlider from 'react-bootstrap-range-slider';\nimport './ConfRate.css'; // we can use hooks instead of creating a class with new React JS \n\nconst ConfRate = () => {\n  // generate a random number between 50 and 100 \n  const init_value = Math.round(Math.random() * 50 + 50); // onDown = event => {\n  //     setDrag(true); \n  //   };\n  // onUp = event => {setDrag(false)\n  // };\n\n  const [value, setValue] = useState(init_value); // initial position of the slide: should be a random value between 50 and 100  \n\n  const [isDragging, setDrag] = useState(false);\n  console.log(value);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"slider-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, \"How confident are you?\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"slider-val\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, \"Very uncertain\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"slider-val\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, \"Very certain\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"slider\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(RangeSlider, {\n    value: value,\n    min: 50,\n    max: 100,\n    step: 1,\n    disabled: false,\n    size: 'lg',\n    variant: 'dark',\n    tooltip: 'auto',\n    tooltipPlacement: 'top',\n    onChange: changeEvent => setValue(changeEvent.target.value),\n    onPointerDown: event => setDrag(true),\n    onPointerUp: event => setDrag(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"slider-val2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, \"50%\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"slider-val2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, \"100%\")));\n};\n\nexport default ConfRate;","map":{"version":3,"sources":["/Users/vasilisaskvortsova/Documents/LEARNOISE-local/webap-learnoise-2/src/components/Board/ConfRate.js"],"names":["React","useState","RangeSlider","ConfRate","init_value","Math","round","random","value","setValue","isDragging","setDrag","console","log","changeEvent","target","event"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,oEAAP;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AAEA,OAAO,gBAAP,C,CAEA;;AACA,MAAMC,QAAQ,GAAG,MAAM;AAEvB;AACA,QAAMC,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAc,EAAd,GAAiB,EAA5B,CAAnB,CAHuB,CAMvB;AACA;AACA;AAEA;AACA;;AAGA,QAAM,CAAEC,KAAF,EAASC,QAAT,IAAwBR,QAAQ,CAACG,UAAD,CAAtC,CAduB,CAc6B;;AAEpD,QAAM,CAACM,UAAD,EAAaC,OAAb,IAAwBV,QAAQ,CAAC,KAAD,CAAtC;AAGAW,EAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AACI,sBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,eAEE;AAAM,IAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF,eAGE;AAAM,IAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF,CADA,eAMA;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AACE,IAAA,KAAK,EAAeA,KADtB;AAEE,IAAA,GAAG,EAAiB,EAFtB;AAGE,IAAA,GAAG,EAAiB,GAHtB;AAIE,IAAA,IAAI,EAAgB,CAJtB;AAKE,IAAA,QAAQ,EAAY,KALtB;AAME,IAAA,IAAI,EAAgB,IANtB;AAOE,IAAA,OAAO,EAAa,MAPtB;AAQE,IAAA,OAAO,EAAa,MARtB;AASE,IAAA,gBAAgB,EAAI,KATtB;AAUE,IAAA,QAAQ,EAAWM,WAAW,IAAIL,QAAQ,CAACK,WAAW,CAACC,MAAZ,CAAmBP,KAApB,CAV5C;AAWE,IAAA,aAAa,EAAMQ,KAAK,IAAIL,OAAO,CAAC,IAAD,CAXrC;AAYE,IAAA,WAAW,EAAQK,KAAK,IAAIL,OAAO,CAAC,KAAD,CAZrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CANA,eAyBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAM,IAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADA,eAEA;AAAM,IAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA,CAzBF,CADA;AAkCD,CAtDH;;AAyDA,eAAeR,QAAf","sourcesContent":["import React, { useState } from 'react';\nimport 'react-bootstrap-range-slider/dist/react-bootstrap-range-slider.css';\nimport RangeSlider from 'react-bootstrap-range-slider';\n\nimport './ConfRate.css';\n\n// we can use hooks instead of creating a class with new React JS \nconst ConfRate = () => {\n\n// generate a random number between 50 and 100 \nconst init_value = Math.round(Math.random()*50+50)\n\n\n// onDown = event => {\n//     setDrag(true); \n//   };\n\n// onUp = event => {setDrag(false)\n// };\n \n\nconst [ value, setValue ]   = useState(init_value); // initial position of the slide: should be a random value between 50 and 100  \n\nconst [isDragging, setDrag] = useState(false) \n\n\nconsole.log(value)\n    return (\n    <div>\n    <div className='slider-text'>\n      <p>How confident are you?</p>\n      <span className='slider-val'>Very uncertain</span>\n      <span className='slider-val'>Very certain</span> \n    </div>\n    <div className='slider'>\n      <RangeSlider\n        value            = {value}\n        min              = {50}\n        max              = {100}\n        step             = {1}\n        disabled         = {false} \n        size             = {'lg'}\n        variant          = {'dark'}\n        tooltip          = {'auto'}\n        tooltipPlacement = {'top'}\n        onChange         ={changeEvent => setValue(changeEvent.target.value)}\n        onPointerDown    ={event => setDrag(true)}\n        onPointerUp      ={event => setDrag(false)}\n\n\n\n      />\n      </div>\n      <div>\n      <span className='slider-val2'>50%</span>\n      <span className='slider-val2'>100%</span> \n    </div>\n    \n      </div>\n\n    );\n  }\n\n\nexport default ConfRate;\n\n\n"]},"metadata":{},"sourceType":"module"}