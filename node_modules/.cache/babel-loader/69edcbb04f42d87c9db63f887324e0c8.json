{"ast":null,"code":"import _classCallCheck from \"/Users/vasilisaskvortsova/Documents/COVID-19/covid-webap/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/vasilisaskvortsova/Documents/COVID-19/covid-webap/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/vasilisaskvortsova/Documents/COVID-19/covid-webap/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/vasilisaskvortsova/Documents/COVID-19/covid-webap/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/vasilisaskvortsova/Documents/COVID-19/covid-webap/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/vasilisaskvortsova/Documents/COVID-19/covid-webap/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/vasilisaskvortsova/Documents/COVID-19/covid-webap/src/components/ReportNA/ReportNA.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { CSSTransitionGroup } from 'react-transition-group';\nimport Question from '../QuizQuestion/Question';\nimport QuestionCount from '../QuizQuestion/QuestionCount';\nimport AnswerOption from '../QuizQuestion/AnswerOption';\n\nvar ReportNA =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ReportNA, _React$Component);\n\n  function ReportNA(props) {\n    var _this;\n\n    _classCallCheck(this, ReportNA);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ReportNA).call(this, props));\n    _this.state = {\n      report: '',\n      answer: '',\n      answercheck: false\n    }; // console.log(this.state) // initial states \n\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_this));\n    _this.handleChangeReport = _this.handleChangeReport.bind(_assertThisInitialized(_this));\n    _this.renderAnswerOptions = _this.renderAnswerOptions.bind(_assertThisInitialized(_this));\n    _this._handleRefresh = _this._handleRefresh.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ReportNA, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this._isMounted = true; // document.getElementById(\"create-course-form\").reset();\n\n      document.body.style.background = '#fff';\n      this.setState({\n        report: '',\n        answer: '',\n        answercheck: false,\n        shouldBlockNavigation: false\n      });\n      window.history.pushState(window.state, null, window.location.href);\n      window.onbeforeunload = null;\n      window.addEventListener(\"keypress\", function (e) {\n        return _this2._handleRefresh(e);\n      });\n    }\n  }, {\n    key: \"_handleRefresh\",\n    value: function _handleRefresh(e) {\n      if (e.key === 'Enter') {\n        console.log('enter e', e.srcElement); // console.log('value', e.target.value);\n\n        var test = this.state.report; // console.log('test',this.state.report)\n\n        if (test !== \"\" && test !== null && test > parseInt(this.props.constraint[0].min) && test < parseInt(this.props.constraint[1].max)) {\n          this.setState({\n            answercheck: true\n          });\n          console.log(this.state.answercheck); // Send answers to the parent component\n          // document.getElementById(\"create-course-form\").reset();\n\n          var prev_report = this.state.report;\n          this.setState({\n            report: ''\n          });\n          this.props.onAnswerSelected(this.state.report, this.props.questionId, e);\n        } else {\n          e.preventDefault();\n        }\n      }\n    }\n  }, {\n    key: \"handleChangeReport\",\n    value: function handleChangeReport(event) {\n      var test = Number(event.target.value);\n      this.setState({\n        report: event.target.value,\n        answercheck: false\n      }); // console.log(Number(test))\n\n      if (test !== \"\" && test !== null && test > parseInt(this.props.constraint[0].min) && test < parseInt(this.props.constraint[1].max)) {\n        this.setState({\n          answercheck: true\n        }); // console.log(this.state.answer) \n      }\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      event.preventDefault();\n      this.props.onAnswerSelected(this.state.report, this.props.questionId, event);\n    }\n  }, {\n    key: \"renderAnswerOptions\",\n    value: function renderAnswerOptions(key) {\n      return React.createElement(AnswerOption, {\n        key: key.content,\n        answerContent: key.content,\n        answerType: key.type,\n        answer: this.props.answer,\n        questionId: this.props.questionId,\n        onAnswerSelected: this.props.onAnswerSelected,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(CSSTransitionGroup, {\n        className: \"container\",\n        component: \"div\",\n        transitionName: \"fade\",\n        transitionEnterTimeout: 800,\n        transitionLeaveTimeout: 500,\n        transitionAppear: true,\n        transitionAppearTimeout: 500,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        key: this.props.questionId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(QuestionCount, {\n        counter: this.props.questionCount,\n        total: this.props.questionTotal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }), React.createElement(Question, {\n        content: this.props.question,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"col-md-6 no-padding\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        value: this.state.report,\n        onKeyDown: this._handleRefresh,\n        onChange: this.handleChangeReport,\n        name: \"report\",\n        id: \"report\",\n        className: \"form-control\",\n        placeholder: \"\",\n        type: \"number\",\n        pattern: \"[0-9]*\",\n        inputMode: \"numeric\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"col-md-12 pad-20\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-save btn-primary pad-20\",\n        disabled: !this.state.answercheck,\n        onClick: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, \"Submit\"))), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        className: \"answerOptions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, this.props.answerOptions.map(this.renderAnswerOptions))));\n    }\n  }]);\n\n  return ReportNA;\n}(React.Component);\n\nReportNA.propTypes = {\n  answer: PropTypes.string.isRequired,\n  question: PropTypes.string.isRequired,\n  questionId: PropTypes.number.isRequired,\n  questionTotal: PropTypes.number.isRequired,\n  onAnswerSelected: PropTypes.func.isRequired,\n  constraint: PropTypes.array.isRequired,\n  participant_info: PropTypes.object.isRequired\n};\nexport default withRouter(ReportNA);","map":{"version":3,"sources":["/Users/vasilisaskvortsova/Documents/COVID-19/covid-webap/src/components/ReportNA/ReportNA.js"],"names":["React","PropTypes","withRouter","CSSTransitionGroup","Question","QuestionCount","AnswerOption","ReportNA","props","state","report","answer","answercheck","handleSubmit","bind","handleChangeReport","renderAnswerOptions","_handleRefresh","_isMounted","document","body","style","background","setState","shouldBlockNavigation","window","history","pushState","location","href","onbeforeunload","addEventListener","e","key","console","log","srcElement","test","parseInt","constraint","min","max","prev_report","onAnswerSelected","questionId","preventDefault","event","Number","target","value","content","type","questionCount","questionTotal","question","answerOptions","map","Component","propTypes","string","isRequired","number","func","array","participant_info","object"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {withRouter} from 'react-router-dom';\n\nimport { CSSTransitionGroup } from 'react-transition-group';\nimport Question from '../QuizQuestion/Question';\nimport QuestionCount from '../QuizQuestion/QuestionCount';\nimport AnswerOption from '../QuizQuestion/AnswerOption';\n\n\nclass ReportNA extends React.Component {\n\n  constructor(props){\n    super(props);\n\n  this.state = {\n    report: '',\n    answer: '',\n    answercheck: false  \n\n  }\n  // console.log(this.state) // initial states \n\n  this.handleSubmit        = this.handleSubmit.bind(this);  \n  this.handleChangeReport  = this.handleChangeReport.bind(this);\n  this.renderAnswerOptions = this.renderAnswerOptions.bind(this);\n  this._handleRefresh      = this._handleRefresh.bind(this); \n \n}\n\n\ncomponentDidMount() {\n  this._isMounted = true;\n  // document.getElementById(\"create-course-form\").reset();\n  document.body.style.background= '#fff';   \n  this.setState({\n    report: '',\n    answer: '',\n    answercheck: false,\n    shouldBlockNavigation: false}\n    )\n  window.history.pushState(window.state, null, window.location.href);\n  window.onbeforeunload = null;\n  window.addEventListener(\"keypress\", e => this._handleRefresh(e));\n\n}\n\n_handleRefresh(e){\n  if (e.key==='Enter') {\n  console.log('enter e', e.srcElement);\n\n  // console.log('value', e.target.value);\n\n  var test = this.state.report\n  // console.log('test',this.state.report)\n    \n  if ((test!==\"\") && (test!==null) && (test>parseInt(this.props.constraint[0].min)) && (test<parseInt(this.props.constraint[1].max))) \n  {\n    this.setState({\n    answercheck: true}\n    );\n\n    console.log(this.state.answercheck)\n    // Send answers to the parent component\n    // document.getElementById(\"create-course-form\").reset();\n    let prev_report = this.state.report \n        this.setState({\n          report: ''}\n        )\n\n        this.props.onAnswerSelected(this.state.report,this.props.questionId,e) \n  }\n  else {\n    e.preventDefault()\n  }\n \n  }\n}\n\n  handleChangeReport(event) {\n\n  var test = Number(event.target.value)\n\n  this.setState({\n    report: event.target.value,\n    answercheck: false \n    }\n    );\n  \n  // console.log(Number(test))\n\n  if ((test!==\"\") && (test!==null) && (test>parseInt(this.props.constraint[0].min)) && (test<parseInt(this.props.constraint[1].max))) {\n    this.setState({\n    answercheck: true }\n    );\n    // console.log(this.state.answer) \n  }\n\n}\n\n  handleSubmit(event) {\n        event.preventDefault();\n        this.props.onAnswerSelected(this.state.report,this.props.questionId,event)\n        \n  }\n\n  renderAnswerOptions(key) {\n    return (\n      <AnswerOption\n        key={key.content}\n        answerContent={key.content}\n        answerType={key.type}\n        answer={this.props.answer}\n        questionId={this.props.questionId}\n        onAnswerSelected={this.props.onAnswerSelected}\n      />\n    );\n}\n\nrender() {\n  return (\n    <CSSTransitionGroup\n      className=\"container\"\n      component=\"div\"\n      transitionName=\"fade\"\n      transitionEnterTimeout={800}\n      transitionLeaveTimeout={500}\n      transitionAppear\n      transitionAppearTimeout={500}\n    >\n      <div key={this.props.questionId}>\n        <QuestionCount counter={this.props.questionCount} total={this.props.questionTotal} />\n        <Question content={this.props.question} />\n        <div className=\"col-md-6 no-padding\">\n        <input value={this.state.report} onKeyDown={this._handleRefresh} onChange={this.handleChangeReport} name=\"report\" id=\"report\" className=\"form-control\" placeholder=\"\" type=\"number\" pattern=\"[0-9]*\" inputMode=\"numeric\" required />\n        </div>\n        <p></p>\n        </div>\n      <p></p>\n      <div className=\"col-md-12 pad-20\">\n        <div>\n          <button type=\"submit\" className=\"btn btn-save btn-primary pad-20\" disabled={!this.state.answercheck} onClick={this.handleSubmit}>Submit\n            </button>\n          </div>\n      </div>\n      <p></p>\n      <div className=\"row\">\n        <ul className=\"answerOptions\">\n          {this.props.answerOptions.map(this.renderAnswerOptions)}\n        </ul>\n      </div>\n      \n    </CSSTransitionGroup>\n  );\n}\n}\n\nReportNA.propTypes = {\n  answer: PropTypes.string.isRequired,\n  question: PropTypes.string.isRequired,\n  questionId: PropTypes.number.isRequired,\n  questionTotal: PropTypes.number.isRequired,\n  onAnswerSelected: PropTypes.func.isRequired,\n  constraint: PropTypes.array.isRequired,\n  participant_info:PropTypes.object.isRequired\n};\n\n\nexport default withRouter(ReportNA);"]},"metadata":{},"sourceType":"module"}