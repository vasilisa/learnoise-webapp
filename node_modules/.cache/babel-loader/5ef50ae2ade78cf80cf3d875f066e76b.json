{"ast":null,"code":"var _jsxFileName = \"/Users/vasilisaskvortsova/Documents/LEARNOISE-local/webap-learnoise-2/src/components/Brick/Brick.js\";\nimport React from 'react';\nimport './Brick.css';\n\nclass Brick extends React.Component {\n  render() {\n    const animation_property = this.props.animation ? 'activate' : 'reset';\n    const animation_popup = this.props.animation ? 'activate' : 'reset'; // const selected           = (this.props.noFeedback==='') ? 'selected' : 'notSelected'\n\n    const selected = this.props.symbolHighlight === '' ? 'selected' : 'notSelected';\n\n    if (this.props.showFeedback === true) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"symbol \" + \" \" + selected + \" \" + animation_property,\n        src: this.props.symbol,\n        alt: \"symbol\",\n        onClick: () => this.props.symbolClicked(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 7\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"square\" + this.props.noFeedback + \" \" + animation_property,\n        alt: \"feedback\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 7\n        }\n      }, this.props.feedback));\n    } else if (this.props.showConf === false) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"symbol \" + \" \" + selected + \" \" + animation_property,\n        src: this.props.symbol,\n        alt: \"symbol\",\n        onClick: () => this.props.symbolClicked(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 7\n        }\n      }));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"symbol \" + \" \" + selected,\n        src: this.props.symbol,\n        alt: \"symbol\",\n        onClick: () => this.props.symbolClicked(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 7\n        }\n      }));\n    }\n  }\n\n}\n\nexport default Brick;\n/*\n   <div className={\"square\" + this.props.noFeedback} alt='feedback'>{this.props.feedback}</div>   \n*/","map":{"version":3,"sources":["/Users/vasilisaskvortsova/Documents/LEARNOISE-local/webap-learnoise-2/src/components/Brick/Brick.js"],"names":["React","Brick","Component","render","animation_property","props","animation","animation_popup","selected","symbolHighlight","showFeedback","symbol","symbolClicked","noFeedback","feedback","showConf"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;;AAGA,MAAMC,KAAN,SAAoBD,KAAK,CAACE,SAA1B,CAAoC;AAClCC,EAAAA,MAAM,GAAG;AAEP,UAAMC,kBAAkB,GAAG,KAAKC,KAAL,CAAWC,SAAX,GAAuB,UAAvB,GAAoC,OAA/D;AACA,UAAMC,eAAe,GAAM,KAAKF,KAAL,CAAWC,SAAX,GAAuB,UAAvB,GAAoC,OAA/D,CAHO,CAKP;;AACA,UAAME,QAAQ,GAAc,KAAKH,KAAL,CAAWI,eAAX,KAA8B,EAA/B,GAAqC,UAArC,GAAkD,aAA7E;;AAEA,QAAI,KAAKJ,KAAL,CAAWK,YAAX,KAA2B,IAA/B,EAAoC;AACjC,0BACD;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA;AAAK,QAAA,SAAS,EAAE,YAAY,GAAZ,GAAkBF,QAAlB,GAA6B,GAA7B,GAAmCJ,kBAAnD;AAAuE,QAAA,GAAG,EAAE,KAAKC,KAAL,CAAWM,MAAvF;AAA+F,QAAA,GAAG,EAAC,QAAnG;AAA4G,QAAA,OAAO,EAAE,MAAM,KAAKN,KAAL,CAAWO,aAAX,EAA3H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,eAEA;AAAK,QAAA,SAAS,EAAE,WAAY,KAAKP,KAAL,CAAWQ,UAAvB,GAAoC,GAApC,GAA0CT,kBAA1D;AAA+E,QAAA,GAAG,EAAC,UAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA+F,KAAKC,KAAL,CAAWS,QAA1G,CAFA,CADC;AAOF,KARD,MASK,IAAI,KAAKT,KAAL,CAAWU,QAAX,KAAwB,KAA5B,EAAkC;AACrC,0BACA;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA;AAAK,QAAA,SAAS,EAAE,YAAY,GAAZ,GAAkBP,QAAlB,GAA6B,GAA7B,GAAmCJ,kBAAnD;AAAuE,QAAA,GAAG,EAAE,KAAKC,KAAL,CAAWM,MAAvF;AAA+F,QAAA,GAAG,EAAC,QAAnG;AAA4G,QAAA,OAAO,EAAE,MAAM,KAAKN,KAAL,CAAWO,aAAX,EAA3H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,CADA;AAMD,KAPI,MAQA;AACL,0BACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA;AAAK,QAAA,SAAS,EAAE,YAAY,GAAZ,GAAkBJ,QAAlC;AAA4C,QAAA,GAAG,EAAE,KAAKH,KAAL,CAAWM,MAA5D;AAAoE,QAAA,GAAG,EAAC,QAAxE;AAAiF,QAAA,OAAO,EAAE,MAAM,KAAKN,KAAL,CAAWO,aAAX,EAAhG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,CADF;AAKD;AACA;;AAjCiC;;AAoCpC,eAAeX,KAAf;AAEA","sourcesContent":["import React from 'react';\nimport './Brick.css';\n\n\nclass Brick extends React.Component {\n  render() {\n    \n    const animation_property = this.props.animation ? 'activate' : 'reset';\n    const animation_popup    = this.props.animation ? 'activate' : 'reset';\n     \n    // const selected           = (this.props.noFeedback==='') ? 'selected' : 'notSelected'\n    const selected           = (this.props.symbolHighlight ==='') ? 'selected' : 'notSelected'\n\n    if (this.props.showFeedback ===true){\n       return (      \n      <div className=\"container\">\n      <img className={\"symbol \" + \" \" + selected + \" \" + animation_property} src={this.props.symbol} alt='symbol' onClick={() => this.props.symbolClicked()}/>\n      <div className={\"square\"  + this.props.noFeedback + \" \" + animation_property } alt='feedback'>{this.props.feedback}</div>   \n      </div>\n    );\n\n    }\n    else if (this.props.showConf === false){\n      return (      \n      <div className=\"container\">\n      <img className={\"symbol \" + \" \" + selected + \" \" + animation_property} src={this.props.symbol} alt='symbol' onClick={() => this.props.symbolClicked()}/>\n      </div>\n      ); \n    \n    }\n    else {\n    return (      \n      <div className=\"container\">\n      <img className={\"symbol \" + \" \" + selected} src={this.props.symbol} alt='symbol' onClick={() => this.props.symbolClicked()}/>\n      </div>\n    );\n  }\n  }\n}\n\nexport default Brick;\n\n/*\n   <div className={\"square\" + this.props.noFeedback} alt='feedback'>{this.props.feedback}</div>   \n*/ "]},"metadata":{},"sourceType":"module"}