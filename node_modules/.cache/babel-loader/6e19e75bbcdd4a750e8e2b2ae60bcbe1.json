{"ast":null,"code":"var _jsxFileName = \"/Users/vasilisaskvortsova/Documents/LEARNOISE-local/webap-learnoise-2/src/components/Brick/Brick.js\";\nimport React from 'react';\nimport './Brick.css';\n\nclass Brick extends React.Component {\n  render() {\n    const animation_property = this.props.animation ? 'activate' : 'reset'; // const selected           = (this.props.noFeedback==='') ? 'selected' : 'notSelected'\n\n    const selected = this.props.symbolHighlight === '' ? 'selected' : 'notSelected';\n\n    if (this.props.showFeedback === true) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"symbol \" + \" \" + selected,\n        src: this.props.symbol,\n        alt: \"symbol\",\n        onClick: () => this.props.symbolClicked(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 7\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"square\" + \" \" + animation_property + selected + this.props.noFeedback,\n        alt: \"feedback\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 7\n        }\n      }, this.props.feedback));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"symbol \" + \" \" + selected,\n        src: this.props.symbol,\n        alt: \"symbol\",\n        onClick: () => this.props.symbolClicked(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 7\n        }\n      }));\n    }\n  }\n\n}\n\nexport default Brick;\n/*\n   <div className={\"square\" + this.props.noFeedback} alt='feedback'>{this.props.feedback}</div>   \n*/","map":{"version":3,"sources":["/Users/vasilisaskvortsova/Documents/LEARNOISE-local/webap-learnoise-2/src/components/Brick/Brick.js"],"names":["React","Brick","Component","render","animation_property","props","animation","selected","symbolHighlight","showFeedback","symbol","symbolClicked","noFeedback","feedback"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;;AAGA,MAAMC,KAAN,SAAoBD,KAAK,CAACE,SAA1B,CAAoC;AAClCC,EAAAA,MAAM,GAAG;AAEP,UAAMC,kBAAkB,GAAG,KAAKC,KAAL,CAAWC,SAAX,GAAuB,UAAvB,GAAoC,OAA/D,CAFO,CAGP;;AACA,UAAMC,QAAQ,GAAc,KAAKF,KAAL,CAAWG,eAAX,KAA8B,EAA/B,GAAqC,UAArC,GAAkD,aAA7E;;AAEA,QAAI,KAAKH,KAAL,CAAWI,YAAX,KAA2B,IAA/B,EAAoC;AACjC,0BACD;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA;AAAK,QAAA,SAAS,EAAE,YAAY,GAAZ,GAAkBF,QAAlC;AAA4C,QAAA,GAAG,EAAE,KAAKF,KAAL,CAAWK,MAA5D;AAAoE,QAAA,GAAG,EAAC,QAAxE;AAAiF,QAAA,OAAO,EAAE,MAAM,KAAKL,KAAL,CAAWM,aAAX,EAAhG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,eAEA;AAAK,QAAA,SAAS,EAAE,WAAY,GAAZ,GAAkBP,kBAAlB,GAAuCG,QAAvC,GAAkD,KAAKF,KAAL,CAAWO,UAA7E;AAAyF,QAAA,GAAG,EAAC,UAA7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAyG,KAAKP,KAAL,CAAWQ,QAApH,CAFA,CADC;AAOF,KARD,MASK;AACL,0BACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA;AAAK,QAAA,SAAS,EAAE,YAAY,GAAZ,GAAkBN,QAAlC;AAA4C,QAAA,GAAG,EAAE,KAAKF,KAAL,CAAWK,MAA5D;AAAoE,QAAA,GAAG,EAAC,QAAxE;AAAiF,QAAA,OAAO,EAAE,MAAM,KAAKL,KAAL,CAAWM,aAAX,EAAhG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,CADF;AAKD;AACA;;AAvBiC;;AA0BpC,eAAeV,KAAf;AAEA","sourcesContent":["import React from 'react';\nimport './Brick.css';\n\n\nclass Brick extends React.Component {\n  render() {\n    \n    const animation_property = this.props.animation ? 'activate' : 'reset'; \n    // const selected           = (this.props.noFeedback==='') ? 'selected' : 'notSelected'\n    const selected           = (this.props.symbolHighlight ==='') ? 'selected' : 'notSelected'\n\n    if (this.props.showFeedback ===true){\n       return (      \n      <div className=\"container\">\n      <img className={\"symbol \" + \" \" + selected} src={this.props.symbol} alt='symbol' onClick={() => this.props.symbolClicked()}/>\n      <div className={\"square\"  + \" \" + animation_property + selected + this.props.noFeedback} alt='feedback'>{this.props.feedback}</div>   \n      </div>\n    );\n\n    }\n    else {\n    return (      \n      <div className=\"container\">\n      <img className={\"symbol \" + \" \" + selected} src={this.props.symbol} alt='symbol' onClick={() => this.props.symbolClicked()}/>\n      </div>\n    );\n  }\n  }\n}\n\nexport default Brick;\n\n/*\n   <div className={\"square\" + this.props.noFeedback} alt='feedback'>{this.props.feedback}</div>   \n*/ "]},"metadata":{},"sourceType":"module"}